{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./users.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./users.component.css?ngResource\";\nimport { Component } from '@angular/core';\n//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport let UsersComponent = class UsersComponent {\n  constructor(http) {\n    this.http = http;\n    this.isUser = true;\n    this.isAdmin = true;\n    this.isSuperAdmin = true;\n  }\n  ngOnInit() {\n    // const storedUser = window.sessionStorage.getItem('current.user');\n    // if (storedUser) {\n    //   this.loggedInUser = JSON.parse(storedUser);\n    //   console.log(this.loggedInUser.role)\n    //   // this.loggedInUser.role=3\n    // }\n    this.loggedInUser = {\n      username: \"super\",\n      birthdate: \"2023-05-11\",\n      age: 0,\n      email: \"superEmail\",\n      password: \"123\",\n      pwdconfirm: \"123\",\n      role: 3,\n      group: [],\n      valid: true\n    };\n    // this.loggedInUser = {\n    //   username: \"admin\",\n    //   birthdate: \"2023-05-11\",\n    //   age: 0,\n    //   email: \"superEmail\",\n    //   password: \"123\",\n    //   pwdconfirm: \"123\",\n    //   role: 2,\n    //   group: [],\n    //   valid: true\n    // }\n    // this.loggedInUser = {\n    //   username: \"user\",\n    //   birthdate: \"2023-05-11\",\n    //   age: 0,\n    //   email: \"superEmail\",\n    //   password: \"123\",\n    //   pwdconfirm: \"123\",\n    //   role: 1,\n    //   group: [],\n    //   valid: true\n    // }\n    if (this.loggedInUser.role === 1) {\n      this.isUser = true;\n      this.isAdmin = false;\n      this.isSuperAdmin = false;\n    } else if (this.loggedInUser.role === 2) {\n      this.isUser = false;\n      this.isAdmin = true;\n      this.isSuperAdmin = false;\n    } else if (this.loggedInUser.role === 3) {\n      this.isUser = false;\n      this.isAdmin = false;\n      this.isSuperAdmin = true;\n    }\n    this.getUsers();\n  }\n  getRoleName(roleNumber) {\n    switch (roleNumber) {\n      case 1:\n        return 'User';\n      case 2:\n        return 'Admin';\n      case 3:\n        return 'Super Admin';\n      default:\n        return 'Unknown Role';\n    }\n  }\n  openEditModal(user) {\n    this.selectedUser = user;\n    //console.log(this.selectedUser)\n    this.selectedRole = user.role;\n    $('#editUserRoleModal').modal('show');\n  }\n  updateUserRole() {\n    // Convert to number and update the role\n    this.selectedUser.role = Number(this.selectedRole);\n    console.log(this.selectedUser);\n    //--------------------------------------------------------------\n    this.http.post(BACKEND_URL + \"/update-permission\", this.selectedUser).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n      this.getUsers();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n    //alert('Profile updated!');\n    //-------------------------------------------------------------\n    // Close the modal\n    this.closeModal();\n  }\n  deleteUser() {\n    this.selectedUser.valid = false;\n    //console.log(this.selectedUser)\n    this.http.post(BACKEND_URL + \"/update-permission\", this.selectedUser).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n      this.getUsers();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n    this.closeModal();\n  }\n  closeModal() {\n    $('#editUserRoleModal').modal('hide');\n  }\n  getUsers() {\n    this.http.get(BACKEND_URL + \"/all-users\", httpOptions).subscribe(data => {\n      if (data) {\n        //console.log(data)\n        //this.users = data\n        this.users = data.filter(user => user.valid === true);\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nUsersComponent = __decorate([Component({\n  selector: 'app-users',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], UsersComponent);","map":{"version":3,"names":["Component","HttpClient","HttpHeaders","httpOptions","headers","BACKEND_URL","UsersComponent","constructor","http","isUser","isAdmin","isSuperAdmin","ngOnInit","loggedInUser","username","birthdate","age","email","password","pwdconfirm","role","group","valid","getUsers","getRoleName","roleNumber","openEditModal","user","selectedUser","selectedRole","$","modal","updateUserRole","Number","console","log","post","subscribe","response","error","alert","closeModal","deleteUser","get","data","users","filter","_","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/users/users.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\ndeclare var $: any;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  users: any;\n  // superAdmin: number;\n  // Admin: number;\n  // User: number;\n  selectedUser: any;\n  selectedRole: number | undefined;\n\n  loggedInUser : any;\n\n  isUser: boolean = true;\n  isAdmin: boolean = true;\n  isSuperAdmin: boolean = true;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n\n    \n\n    // const storedUser = window.sessionStorage.getItem('current.user');\n    // if (storedUser) {\n    //   this.loggedInUser = JSON.parse(storedUser);\n    //   console.log(this.loggedInUser.role)\n    //   // this.loggedInUser.role=3\n    // }\n\n\n    this.loggedInUser = {\n      username: \"super\",\n      birthdate: \"2023-05-11\",\n      age: 0,\n      email: \"superEmail\",\n      password: \"123\",\n      pwdconfirm: \"123\",\n      role: 3,\n      group: [],\n      valid: true\n    }\n  \n    // this.loggedInUser = {\n    //   username: \"admin\",\n    //   birthdate: \"2023-05-11\",\n    //   age: 0,\n    //   email: \"superEmail\",\n    //   password: \"123\",\n    //   pwdconfirm: \"123\",\n    //   role: 2,\n    //   group: [],\n    //   valid: true\n    // }\n  \n    // this.loggedInUser = {\n    //   username: \"user\",\n    //   birthdate: \"2023-05-11\",\n    //   age: 0,\n    //   email: \"superEmail\",\n    //   password: \"123\",\n    //   pwdconfirm: \"123\",\n    //   role: 1,\n    //   group: [],\n    //   valid: true\n    // }\n  \n    if (this.loggedInUser.role === 1){\n      this.isUser = true\n      this.isAdmin = false\n      this.isSuperAdmin = false\n    }else if (this.loggedInUser.role === 2){\n      this.isUser = false\n      this.isAdmin = true\n      this.isSuperAdmin = false\n    }else if (this.loggedInUser.role === 3){\n      this.isUser = false\n      this.isAdmin = false\n      this.isSuperAdmin = true\n    }\n  \n\n    this.getUsers()\n  }\n\n\n  getRoleName(roleNumber: number): string {\n    switch (roleNumber) {\n      case 1:\n        return 'User';\n      case 2:\n        return 'Admin';\n      case 3:\n        return 'Super Admin';\n      default:\n        return 'Unknown Role';\n    }\n  }\n\n\n  openEditModal(user: any) {\n    this.selectedUser = user;\n    //console.log(this.selectedUser)\n    this.selectedRole = user.role;\n    $('#editUserRoleModal').modal('show');\n  }\n\n  updateUserRole() {\n    // Convert to number and update the role\n    this.selectedUser.role = Number(this.selectedRole);\n\n    console.log(this.selectedUser)\n\n\n    //--------------------------------------------------------------\n\n    this.http.post(BACKEND_URL+\"/update-permission\", this.selectedUser).subscribe(\n      response => {\n          console.log('User details updated on the server.', response);\n          //refesh User list \n          this.getUsers();\n      },\n      error => {\n          console.error('There was an error updating the user details on the server.', error);\n          alert('Error updating profile. Please try again.');\n      }\n  )\n    //alert('Profile updated!');\n\n  //-------------------------------------------------------------\n    \n    // Close the modal\n    this.closeModal()\n \n  }\n\n  deleteUser(){\n    this.selectedUser.valid = false\n\n    //console.log(this.selectedUser)\n\n    this.http.post(BACKEND_URL+\"/update-permission\", this.selectedUser).subscribe(\n      response => {\n          console.log('User details updated on the server.', response);\n\n          //refesh User list \n          this.getUsers();\n      },\n      error => {\n          console.error('There was an error updating the user details on the server.', error);\n          alert('Error updating profile. Please try again.');\n      }\n  )\n    this.closeModal()\n  }\n\n\n  closeModal(){\n    $('#editUserRoleModal').modal('hide');\n  }\n\n  getUsers(){\n    this.http.get(BACKEND_URL + \"/all-users\", httpOptions)\n    .subscribe(\n        (data: any) => {\n            if (data) {\n\n              //console.log(data)\n              //this.users = data\n\n              this.users = data.filter((user: { valid: boolean; }) => user.valid === true);\n\n\n            } else {\n                alert(\"no Data Soz\");\n            }\n        },\n        error => {console.error('There was an error:', error);}\n    );\n  }\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}