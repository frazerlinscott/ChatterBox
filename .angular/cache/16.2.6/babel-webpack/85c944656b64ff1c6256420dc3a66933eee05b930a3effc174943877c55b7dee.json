{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nexport let UserDataService = class UserDataService {\n  constructor(http) {\n    this.http = http;\n    this.BACKEND_URL = \"http://localhost:3000\"; // replace with your backend endpoint\n  }\n\n  getUserData() {\n    // If you have to send some data with the POST request (like authentication info), add it as the second parameter\n    return this.http.post(this.BACKEND_URL + \"/all-users\", {});\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nUserDataService = __decorate([Injectable({\n  providedIn: 'root'\n})], UserDataService);","map":{"version":3,"names":["Injectable","HttpClient","UserDataService","constructor","http","BACKEND_URL","getUserData","post","_","__decorate","providedIn"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/service/user-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  private BACKEND_URL = \"http://localhost:3000\"; // replace with your backend endpoint\n\n  constructor(private http: HttpClient) { }\n\n  getUserData(): Observable<any> {\n    // If you have to send some data with the POST request (like authentication info), add it as the second parameter\n    return this.http.post<any>(this.BACKEND_URL+ \"/all-users\", {});\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAM1C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,WAAW,GAAG,uBAAuB,CAAC,CAAC;EAEP;;EAExCC,WAAWA,CAAA;IACT;IACA,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,IAAI,CAACF,WAAW,GAAE,YAAY,EAAE,EAAE,CAAC;EAChE;EAAC,QAAAG,CAAA,G;;;;AATUN,eAAe,GAAAO,UAAA,EAH3BT,UAAU,CAAC;EACVU,UAAU,EAAE;CACb,CAAC,C,EACWR,eAAe,CAU3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}