{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ProfileComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" User already exists, Please choose a new username \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Passwords do not match, Please try again. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ProfileComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.user = {};\n    this.allUsernames = [];\n    this.isUniqueUsername = true;\n    this.isUniqueEmail = true;\n    this.isUniquePassword = true;\n  }\n  ngOnInit() {\n    const storedUserData = sessionStorage.getItem('current.user');\n    this.http.get(BACKEND_URL + \"/usernames\").subscribe(usernames => {\n      this.allUsernames = usernames;\n      console.log(this.allUsernames);\n    });\n    if (storedUserData) {\n      const retrievedUser = JSON.parse(storedUserData);\n      console.log(retrievedUser);\n      this.user.username = retrievedUser.username;\n      this.user.userbirthdate = retrievedUser.birthdate;\n      this.user.email = retrievedUser.email;\n      this.user.password = retrievedUser.password;\n      this.user.pwdconfirm = retrievedUser.pwdconfirm;\n    }\n  }\n  onUsernameInput() {\n    // Check if username is unique while the user is typing\n    this.isUniqueUsername = !this.allUsernames.includes(this.user.username);\n    console.log(this.isUniqueUsername);\n  }\n  onSubmit() {\n    const storedUserData = sessionStorage.getItem('current.user');\n    let originalUsername;\n    if (storedUserData) {\n      let retrievedUser = JSON.parse(storedUserData);\n      originalUsername = retrievedUser.username;\n      retrievedUser.username = this.user.username;\n      retrievedUser.birthdate = this.user.userbirthdate;\n      retrievedUser.email = this.user.email;\n      retrievedUser.email = this.user.email;\n      retrievedUser.password = this.user.password;\n      retrievedUser.pwdconfirm = this.user.pwdconfirm;\n      // Update session storage with the new user data\n      sessionStorage.setItem('current.user', JSON.stringify(retrievedUser));\n    }\n    const newDetails = {\n      originalUsername: originalUsername,\n      updatedDetails: this.user // Send updated user details\n    };\n\n    console.log(newDetails);\n    this.http.post(BACKEND_URL + \"/update-user\", newDetails).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      this.isUniqueEmail = false;\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n      this.isUniqueEmail = false;\n    });\n    alert('Profile updated!');\n    this.router.navigateByUrl('/account');\n  }\n  closeProfile() {\n    this.router.navigateByUrl('/account');\n  }\n  deleteProfile() {\n    this.user.valid = false;\n    this.http.post(BACKEND_URL + \"/update-permission\", this.user).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n    this.router.navigateByUrl('login');\n  }\n  static #_ = this.ɵfac = function ProfileComponent_Factory(t) {\n    return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfileComponent,\n    selectors: [[\"app-profile\"]],\n    decls: 32,\n    vars: 16,\n    consts: [[1, \"bg-light\", \"p-4\", \"rounded\", \"border\", 3, \"ngSubmit\"], [1, \"mb-4\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\", \"input\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"birthdate\", 1, \"form-label\"], [\"type\", \"date\", \"name\", \"birthdate\", \"id\", \"birthdate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"for\", \"pwdconfirm\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"pwdconfirm\", \"name\", \"pwdconfirm\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"d-flex\", \"justify-content-between\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"invalid-feedback\"]],\n    template: function ProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Update Profile Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.user.username = $event;\n        })(\"input\", function ProfileComponent_Template_input_input_6_listener() {\n          return ctx.onUsernameInput();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, ProfileComponent_div_7_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Birthdate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.user.userbirthdate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.user.pwdconfirm = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, ProfileComponent_div_20_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 2)(22, \"label\", 12);\n        i0.ɵɵtext(23, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.user.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\", 14)(26, \"button\", 15);\n        i0.ɵɵtext(27, \"Update Profile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_28_listener() {\n          return ctx.closeProfile();\n        });\n        i0.ɵɵtext(29, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_30_listener() {\n          return ctx.deleteProfile();\n        });\n        i0.ɵɵtext(31, \"Delete Profile\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.username)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.user.username && !ctx.isUniqueUsername));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isUniqueUsername);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.userbirthdate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password)(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.user.password && !ctx.isUniquePassword));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.pwdconfirm)(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.user.pwdconfirm && !ctx.isUniquePassword));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isUniquePassword);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".container[_ngcontent-%COMP%] {\\n    max-width: 600px;\\n}\\n\\n.is-unique[_ngcontent-%COMP%] {\\n    border: 2px solid green;\\n  }\\n  \\n  .not-unique[_ngcontent-%COMP%] {\\n    border: 2px solid red;\\n  }\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSx1QkFBdUI7RUFDekI7O0VBRUE7SUFDRSxxQkFBcUI7RUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xufVxuXG4uaXMtdW5pcXVlIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmVlbjtcbiAgfVxuICBcbiAgLm5vdC11bmlxdWUge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIHJlZDtcbiAgfVxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["HttpHeaders","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","BACKEND_URL","httpOptions","headers","ProfileComponent","constructor","router","http","user","allUsernames","isUniqueUsername","isUniqueEmail","isUniquePassword","ngOnInit","storedUserData","sessionStorage","getItem","get","subscribe","usernames","console","log","retrievedUser","JSON","parse","username","userbirthdate","birthdate","email","password","pwdconfirm","onUsernameInput","includes","onSubmit","originalUsername","setItem","stringify","newDetails","updatedDetails","post","response","error","alert","navigateByUrl","closeProfile","deleteProfile","valid","_","ɵɵdirectiveInject","i1","Router","i2","HttpClient","_2","selectors","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ɵɵlistener","ProfileComponent_Template_form_ngSubmit_0_listener","ProfileComponent_Template_input_ngModelChange_6_listener","$event","ProfileComponent_Template_input_input_6_listener","ɵɵtemplate","ProfileComponent_div_7_Template","ProfileComponent_Template_input_ngModelChange_11_listener","ProfileComponent_Template_input_ngModelChange_15_listener","ProfileComponent_Template_input_ngModelChange_19_listener","ProfileComponent_div_20_Template","ProfileComponent_Template_input_ngModelChange_24_listener","ProfileComponent_Template_button_click_28_listener","ProfileComponent_Template_button_click_30_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/profile/profile.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/profile/profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from 'server/routes/userModel';\n\nconst BACKEND_URL = \"http://localhost:3000\";\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any = {};\n  allUsernames: string[] = [];\n  isUniqueUsername: boolean = true;\n  isUniqueEmail:boolean = true;\n  isUniquePassword: boolean = true;\n  \n  constructor(private router: Router, private http: HttpClient) { }\n\n  ngOnInit() {\n\n    const storedUserData = sessionStorage.getItem('current.user');\n\n    this.http.get<string[]>(BACKEND_URL + \"/usernames\").subscribe(usernames => {\n      this.allUsernames = usernames;\n      console.log(this.allUsernames);\n    });\n\n\n    if (storedUserData) {\n        const retrievedUser = JSON.parse(storedUserData);\n\n        console.log(retrievedUser)\n\n        this.user.username = retrievedUser.username;\n        this.user.userbirthdate = retrievedUser.birthdate\n        this.user.email = retrievedUser.email\n        this.user.password=retrievedUser.password\n        this.user.pwdconfirm=retrievedUser.pwdconfirm\n      }\n}\n\n  onUsernameInput() {\n  // Check if username is unique while the user is typing\n    this.isUniqueUsername = !this.allUsernames.includes(this.user.username);\n    console.log(this.isUniqueUsername)\n  }\n\n  onSubmit() {\n\n    const storedUserData = sessionStorage.getItem('current.user');\n    let originalUsername;\n\n    if (storedUserData) {\n        let retrievedUser = JSON.parse(storedUserData);\n        originalUsername = retrievedUser.username;\n\n\n        retrievedUser.username = this.user.username;\n        retrievedUser.birthdate = this.user.userbirthdate;\n        retrievedUser.email = this.user.email;\n        retrievedUser.email = this.user.email;\n        retrievedUser.password = this.user.password\n        retrievedUser.pwdconfirm = this.user.pwdconfirm\n\n        // Update session storage with the new user data\n        sessionStorage.setItem('current.user', JSON.stringify(retrievedUser));\n    }\n\n    const newDetails = {\n      originalUsername: originalUsername,  // Send original username\n      updatedDetails: this.user  // Send updated user details\n  };\n\n  console.log(newDetails);\n\n    this.http.post(BACKEND_URL+\"/update-user\", newDetails).subscribe(\n      response => {\n          console.log('User details updated on the server.', response);\n          this.isUniqueEmail=false\n      },\n      error => {\n          console.error('There was an error updating the user details on the server.', error);\n          alert('Error updating profile. Please try again.');\n          this.isUniqueEmail=false\n      }\n  )\n    alert('Profile updated!');\n    this.router.navigateByUrl('/account'); \n  }\n\n  closeProfile() {\n    this.router.navigateByUrl('/account'); \n  }\n\n  deleteProfile(){\n\n    this.user.valid = false\n\n    this.http.post(BACKEND_URL+\"/update-permission\", this.user).subscribe(\n      response => {\n          console.log('User details updated on the server.', response);\n          //refesh User list \n      },\n      error => {\n          console.error('There was an error updating the user details on the server.', error);\n          alert('Error updating profile. Please try again.');\n      }\n    )\n    this.router.navigateByUrl('login');\n  }\n  \n\n  \n\n  \n}\n","<form (ngSubmit)=\"onSubmit()\" class=\"bg-light p-4 rounded border\">\n  <h3 class=\"mb-4\">Update Profile Details</h3>\n\n  <div class=\"form-group mb-3\">\n      <label for=\"username\" class=\"form-label\">Username</label>\n      <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"user.username\" name=\"username\" required \n             (input)=\"onUsernameInput()\" \n             [ngClass]=\"{'is-invalid': user.username && !isUniqueUsername}\">\n      <div *ngIf=\"!isUniqueUsername\" class=\"invalid-feedback\">\n          User already exists, Please choose a new username\n      </div>\n  </div>\n\n  <div class=\"form-group mb-3\">\n      <label for=\"birthdate\" class=\"form-label\">Birthdate</label>\n      <input type=\"date\" class=\"form-control\" [(ngModel)]=\"user.userbirthdate\" name=\"birthdate\" id=\"birthdate\">\n  </div>\n\n  <div class=\"form-group mb-3\">\n      <label for=\"password\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"user.password\" name=\"password\" required \n             [ngClass]=\"{'is-invalid': user.password && !isUniquePassword}\">\n  </div>\n\n  <div class=\"form-group mb-3\">\n      <label for=\"pwdconfirm\" class=\"form-label\">Confirm Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"pwdconfirm\" [(ngModel)]=\"user.pwdconfirm\" name=\"pwdconfirm\" required \n             [ngClass]=\"{'is-invalid': user.pwdconfirm && !isUniquePassword}\">\n      <div *ngIf=\"!isUniquePassword\" class=\"invalid-feedback\">\n          Passwords do not match, Please try again.\n      </div>\n  </div>\n\n  <div class=\"form-group mb-3\">\n      <label for=\"email\" class=\"form-label\">Email</label>\n      <input type=\"email\" class=\"form-control\" id=\"email\" [(ngModel)]=\"user.email\" name=\"email\" required>\n  </div>\n\n  <div class=\"d-flex justify-content-between\">\n      <button type=\"submit\" class=\"btn btn-primary\">Update Profile</button>\n      <button (click)=\"closeProfile()\" class=\"btn btn-secondary\">Close</button>\n      <button (click)=\"deleteProfile()\" class=\"btn btn-secondary\">Delete Profile</button>\n  </div>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}