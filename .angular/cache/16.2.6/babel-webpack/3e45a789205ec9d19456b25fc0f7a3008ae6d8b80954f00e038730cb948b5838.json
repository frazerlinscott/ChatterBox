{"ast":null,"code":"import { TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing'; // Import HttpClientTestingModule\nimport { UserDataService } from './user-data.service';\ndescribe('UserDataService', () => {\n  let service;\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule],\n      providers: [UserDataService] // Add UserDataService to providers\n    });\n\n    service = TestBed.inject(UserDataService);\n  });\n  it('should be created', () => {\n    expect(service).toBeTruthy();\n  });\n});","map":{"version":3,"names":["TestBed","HttpClientTestingModule","UserDataService","describe","service","beforeEach","configureTestingModule","imports","providers","inject","it","expect","toBeTruthy"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/service/user-data.service.spec.ts"],"sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing'; // Import HttpClientTestingModule\nimport { UserDataService } from './user-data.service';\n\ndescribe('UserDataService', () => {\n  let service: UserDataService;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule], // Add HttpClientTestingModule to imports\n      providers: [UserDataService], // Add UserDataService to providers\n    });\n    service = TestBed.inject(UserDataService);\n  });\n\n  it('should be created', () => {\n    expect(service).toBeTruthy();\n  });\n});\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,uBAAuB,QAAQ,8BAA8B,CAAC,CAAC;AACxE,SAASC,eAAe,QAAQ,qBAAqB;AAErDC,QAAQ,CAAC,iBAAiB,EAAE,MAAK;EAC/B,IAAIC,OAAwB;EAE5BC,UAAU,CAAC,MAAK;IACdL,OAAO,CAACM,sBAAsB,CAAC;MAC7BC,OAAO,EAAE,CAACN,uBAAuB,CAAC;MAClCO,SAAS,EAAE,CAACN,eAAe,CAAC,CAAE;KAC/B,CAAC;;IACFE,OAAO,GAAGJ,OAAO,CAACS,MAAM,CAACP,eAAe,CAAC;EAC3C,CAAC,CAAC;EAEFQ,EAAE,CAAC,mBAAmB,EAAE,MAAK;IAC3BC,MAAM,CAACP,OAAO,CAAC,CAACQ,UAAU,EAAE;EAC9B,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}