{"ast":null,"code":"const BACKEND_URL = \"http://localhost:3000\";\nexport class ChatComponent {\n  constructor(socketService, router, route) {\n    this.socketService = socketService;\n    this.router = router;\n    this.route = route;\n    this.messagecontent = \"\";\n    this.currentChannel = null;\n    this.messages = [];\n  }\n  ngOnInit() {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      //console.log(this.loggedInUser.username)\n    }\n\n    this.route.queryParams.subscribe(params => {\n      this.channel = params['yourKey'];\n      this.initIoConnection();\n      this.socketService.join(this.channel);\n      this.messages = []; // Clear the previous messages when changing the channel.\n    });\n  }\n\n  initIoConnection() {\n    this.socketService.initSocket();\n    this.ioConnection = this.socketService.getMessage().subscribe(data => {\n      console.log('Received:', data);\n      if (data.channel === this.channel) {\n        this.messages.push(data);\n        console.log(this.messages);\n        this.http.post(BACKEND_URL + \"/update-groups\", group).subscribe(response => {\n          console.log('User details updated on the server.', response);\n          //refesh User list \n          this.getGroups();\n        }, error => {\n          console.error('There was an error updating the user details on the server.', error);\n          alert('Error updating profile. Please try again.');\n        });\n      }\n    });\n  }\n  sendMessage() {\n    console.log('Sending:', this.messagecontent); // Add this line\n    if (this.messagecontent) {\n      this.socketService.send(this.messagecontent, this.channel);\n      this.messagecontent = \"\";\n    }\n  }\n}","map":{"version":3,"names":["BACKEND_URL","ChatComponent","constructor","socketService","router","route","messagecontent","currentChannel","messages","ngOnInit","storedUser","window","sessionStorage","getItem","loggedInUser","JSON","parse","queryParams","subscribe","params","channel","initIoConnection","join","initSocket","ioConnection","getMessage","data","console","log","push","http","post","group","response","getGroups","error","alert","sendMessage","send"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/chat/chat.component.ts"],"sourcesContent":["import { Component, OnInit, } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {SocketService} from 'src/app/service/socket.service';\nimport {FormsModule} from '@angular/forms';\nimport { Message } from 'server/models/messageModel';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\n\nexport class ChatComponent implements OnInit {\n\n  messagecontent: string=\"\";\n  //messages: string[] = [];\n  ioConnection:any;\n  channel: any;\n  currentChannel: string | null = null;\n  loggedInUser : any;\n  messages: Message[] = [];\n\n  constructor (private socketService: SocketService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n\n      this.loggedInUser = JSON.parse(storedUser);\n      //console.log(this.loggedInUser.username)\n    }\n    this.route.queryParams.subscribe(params => {\n        this.channel = params['yourKey'];\n        this.initIoConnection();\n        this.socketService.join(this.channel);\n        this.messages = []; // Clear the previous messages when changing the channel.\n    });\n}\n\n\n  initIoConnection() {\n    this.socketService.initSocket();\n    this.ioConnection = this.socketService.getMessage().subscribe((data: any) => {\n      console.log('Received:', data);\n      if (data.channel === this.channel) {\n        this.messages.push(data as Message);\n        console.log(this.messages); \n\n        this.http.post(BACKEND_URL+\"/update-groups\", group).subscribe(\n          response => {\n              console.log('User details updated on the server.', response);\n\n              //refesh User list \n              this.getGroups();\n          },\n          error => {\n              console.error('There was an error updating the user details on the server.', error);\n              alert('Error updating profile. Please try again.');\n          }\n        )\n\n      }\n    });\n    \n  }\n\n    sendMessage() {\n      console.log('Sending:', this.messagecontent); // Add this line\n      if (this.messagecontent) {\n          this.socketService.send(this.messagecontent, this.channel);\n          this.messagecontent = \"\";\n      }\n    }\n\n\n}"],"mappings":"AAYA,MAAMA,WAAW,GAAG,uBAAuB;AAG3C,OAAM,MAAOC,aAAa;EAUxBC,YAAqBC,aAA4B,EAAUC,MAAc,EAAUC,KAAqB;IAAnF,KAAAF,aAAa,GAAbA,aAAa;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IARxF,KAAAC,cAAc,GAAS,EAAE;IAIzB,KAAAC,cAAc,GAAkB,IAAI;IAEpC,KAAAC,QAAQ,GAAc,EAAE;EAEoF;EAE5GC,QAAQA,CAAA;IAEN,MAAMC,UAAU,GAAGC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC;IAChE,IAAIH,UAAU,EAAE;MAEd,IAAI,CAACI,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,CAAC;MAC1C;;;IAEF,IAAI,CAACL,KAAK,CAACY,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACtC,IAAI,CAACC,OAAO,GAAGD,MAAM,CAAC,SAAS,CAAC;MAChC,IAAI,CAACE,gBAAgB,EAAE;MACvB,IAAI,CAAClB,aAAa,CAACmB,IAAI,CAAC,IAAI,CAACF,OAAO,CAAC;MACrC,IAAI,CAACZ,QAAQ,GAAG,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC;EACN;;EAGEa,gBAAgBA,CAAA;IACd,IAAI,CAAClB,aAAa,CAACoB,UAAU,EAAE;IAC/B,IAAI,CAACC,YAAY,GAAG,IAAI,CAACrB,aAAa,CAACsB,UAAU,EAAE,CAACP,SAAS,CAAEQ,IAAS,IAAI;MAC1EC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,IAAI,CAAC;MAC9B,IAAIA,IAAI,CAACN,OAAO,KAAK,IAAI,CAACA,OAAO,EAAE;QACjC,IAAI,CAACZ,QAAQ,CAACqB,IAAI,CAACH,IAAe,CAAC;QACnCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACpB,QAAQ,CAAC;QAE1B,IAAI,CAACsB,IAAI,CAACC,IAAI,CAAC/B,WAAW,GAAC,gBAAgB,EAAEgC,KAAK,CAAC,CAACd,SAAS,CAC3De,QAAQ,IAAG;UACPN,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEK,QAAQ,CAAC;UAE5D;UACA,IAAI,CAACC,SAAS,EAAE;QACpB,CAAC,EACDC,KAAK,IAAG;UACJR,OAAO,CAACQ,KAAK,CAAC,6DAA6D,EAAEA,KAAK,CAAC;UACnFC,KAAK,CAAC,2CAA2C,CAAC;QACtD,CAAC,CACF;;IAGL,CAAC,CAAC;EAEJ;EAEEC,WAAWA,CAAA;IACTV,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACtB,cAAc,CAAC,CAAC,CAAC;IAC9C,IAAI,IAAI,CAACA,cAAc,EAAE;MACrB,IAAI,CAACH,aAAa,CAACmC,IAAI,CAAC,IAAI,CAAChC,cAAc,EAAE,IAAI,CAACc,OAAO,CAAC;MAC1D,IAAI,CAACd,cAAc,GAAG,EAAE;;EAE9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}