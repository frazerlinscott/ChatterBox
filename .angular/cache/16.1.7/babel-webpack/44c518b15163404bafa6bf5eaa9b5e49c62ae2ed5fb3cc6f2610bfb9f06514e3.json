{"ast":null,"code":"var _class;\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nexport let UploadService = (_class = class UploadService {\n  constructor(http) {\n    this.http = http;\n    this.BACKEND_URL = \"http://localhost:3000\";\n  }\n  uploadFile(data) {\n    console.log(\"uploadFile: \" + JSON.stringify(data));\n    console.log(\"hit\");\n    console.log(this.BACKEND_URL);\n    return this.http.post(this.BACKEND_URL + \"/uploadPhoto\", data);\n    // return this.http.post(this.BACKEND_URL + \"/uploadPhoto\", data);\n  }\n\n  uploadAttachment(formData) {\n    console.log(this.BACKEND_URL);\n    return this.http.post(this.BACKEND_URL + \"/attachPhoto\", formData);\n  }\n}, _class.ctorParameters = () => [{\n  type: HttpClient\n}], _class);\nUploadService = __decorate([Injectable({\n  providedIn: 'root'\n})], UploadService);","map":{"version":3,"names":["Injectable","HttpClient","UploadService","_class","constructor","http","BACKEND_URL","uploadFile","data","console","log","JSON","stringify","post","uploadAttachment","formData","__decorate","providedIn"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/service/upload.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UploadResponse } from 'server/models/interfaces';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  private  BACKEND_URL = \"http://localhost:3000\";\n\n  constructor(private http: HttpClient) { }\n\n  uploadFile(data: FormData) {\n\n    console.log(\"uploadFile: \" + JSON.stringify(data));\n    console.log(\"hit\")\n    console.log(this.BACKEND_URL)\n\n    return this.http.post(this.BACKEND_URL+\"/uploadPhoto\", data);\n    // return this.http.post(this.BACKEND_URL + \"/uploadPhoto\", data);\n  }\n\n  uploadAttachment(formData: FormData): Observable<UploadResponse> {\n    console.log(this.BACKEND_URL);\n    return this.http.post<UploadResponse>(this.BACKEND_URL + \"/attachPhoto\", formData);\n}\n\n\n//   testEndpoint() {\n//     return this.http.post(this.BACKEND_URL + \"/testEndpoint\", {});\n// }\n}\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAO1C,WAAMC,aAAa,IAAAC,MAAA,GAAnB,MAAMD,aAAa;EAIxBE,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFf,KAAAC,WAAW,GAAG,uBAAuB;EAEN;EAExCC,UAAUA,CAACC,IAAc;IAEvBC,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;IAClDC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClBD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,WAAW,CAAC;IAE7B,OAAO,IAAI,CAACD,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,WAAW,GAAC,cAAc,EAAEE,IAAI,CAAC;IAC5D;EACF;;EAEAM,gBAAgBA,CAACC,QAAkB;IACjCN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,WAAW,CAAC;IAC7B,OAAO,IAAI,CAACD,IAAI,CAACQ,IAAI,CAAiB,IAAI,CAACP,WAAW,GAAG,cAAc,EAAES,QAAQ,CAAC;EACtF;;;;AAnBab,aAAa,GAAAc,UAAA,EAHzBhB,UAAU,CAAC;EACViB,UAAU,EAAE;CACb,CAAC,C,EACWf,aAAa,CAyBzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}