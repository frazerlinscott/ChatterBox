{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ChatComponent = class ChatComponent {\n  constructor(socketService) {\n    this.socketService = socketService;\n    this.messagecontent = \"\";\n    this.messages = [];\n  }\n  ngOnInit() {\n    this.initIoConnection();\n  }\n  initIoConnection() {\n    this.socketService.initSocket();\n    this.ioConnection = this.socketService.getMessage().subscribe(message => {\n      this.messages.push(message);\n    });\n  }\n  sendMessage() {\n    //console.log(\"message: \" + this.messagecontent);\n    if (this.messagecontent) {\n      this.socketService.send(this.messagecontent);\n      this.messagecontent = \"\";\n    }\n  }\n};\nChatComponent = __decorate([Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})], ChatComponent);","map":{"version":3,"names":["Component","ChatComponent","constructor","socketService","messagecontent","messages","ngOnInit","initIoConnection","initSocket","ioConnection","getMessage","subscribe","message","push","sendMessage","send","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/chat/chat.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {SocketService} from '../services/socket.service';\nimport {FormsModule} from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\n\nexport class ChatComponent implements OnInit {\n\n  messagecontent: string=\"\";\n  messages: string[] = [];\n  ioConnection:any;\n\n  constructor (private socketService: SocketService) { }\n\n  ngOnInit(): void {\n    this.initIoConnection();\n  }\n\n  initIoConnection() {\n    this.socketService.initSocket();\n    this.ioConnection = this.socketService.getMessage().subscribe((message: unknown) => {\n      this.messages.push(message as string);\n    });\n  }\n\n  sendMessage(){\n    //console.log(\"message: \" + this.messagecontent);\n    if(this.messagecontent){\n      this.socketService.send(this.messagecontent);\n      this.messagecontent= \"\"\n    }\n  }\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMxBC,YAAqBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAJlC,KAAAC,cAAc,GAAS,EAAE;IACzB,KAAAC,QAAQ,GAAa,EAAE;EAG8B;EAErDC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgBA,CAAA;IACd,IAAI,CAACJ,aAAa,CAACK,UAAU,EAAE;IAC/B,IAAI,CAACC,YAAY,GAAG,IAAI,CAACN,aAAa,CAACO,UAAU,EAAE,CAACC,SAAS,CAAEC,OAAgB,IAAI;MACjF,IAAI,CAACP,QAAQ,CAACQ,IAAI,CAACD,OAAiB,CAAC;IACvC,CAAC,CAAC;EACJ;EAEAE,WAAWA,CAAA;IACT;IACA,IAAG,IAAI,CAACV,cAAc,EAAC;MACrB,IAAI,CAACD,aAAa,CAACY,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;MAC5C,IAAI,CAACA,cAAc,GAAE,EAAE;;EAE3B;CAED;AA3BYH,aAAa,GAAAe,UAAA,EANzBhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EAEWlB,aAAa,CA2BzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}