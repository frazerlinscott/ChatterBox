{"ast":null,"code":"//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport class GroupsComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      //console.log(this.loggedInUser.role)\n      this.loggedInUser.role = 3;\n    }\n    this.getUsers();\n  }\n  getRoleName(roleNumber) {\n    switch (roleNumber) {\n      case 1:\n        return 'User';\n      case 2:\n        return 'Admin';\n      case 3:\n        return 'Super Admin';\n      default:\n        return 'Unknown Role';\n    }\n  }\n  openEditModal(user) {\n    this.selectedUser = user;\n    //console.log(this.selectedUser)\n    this.selectedRole = user.role;\n    $('#editUserRoleModal').modal('show');\n  }\n  updateUserRole() {\n    // Convert to number and update the role\n    this.selectedUser.role = Number(this.selectedRole);\n    console.log(this.selectedUser);\n    //--------------------------------------------------------------\n    this.http.post(BACKEND_URL + \"/update-permission\", this.selectedUser).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n      this.getUsers();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n    //alert('Profile updated!');\n    //-------------------------------------------------------------\n    // Close the modal\n    this.closeModal();\n  }\n  deleteUser() {\n    this.selectedUser.valid = false;\n    console.log(this.selectedUser);\n    this.http.post(BACKEND_URL + \"/update-permission\", this.selectedUser).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n      this.getUsers();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n    this.closeModal();\n  }\n  closeModal() {\n    $('#editUserRoleModal').modal('hide');\n  }\n  getUsers() {\n    this.http.post(BACKEND_URL + \"/all-users\", httpOptions).subscribe(data => {\n      if (data) {\n        //console.log(data)\n        this.users = data;\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n}\nGroupsComponent.ɵfac = function GroupsComponent_Factory(t) {\n  return new (t || GroupsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nGroupsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GroupsComponent,\n  selectors: [[\"app-groups\"]],\n  decls: 2,\n  vars: 0,\n  template: function GroupsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"groups works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","BACKEND_URL","GroupsComponent","constructor","http","ngOnInit","storedUser","window","sessionStorage","getItem","loggedInUser","JSON","parse","role","getUsers","getRoleName","roleNumber","openEditModal","user","selectedUser","selectedRole","$","modal","updateUserRole","Number","console","log","post","subscribe","response","error","alert","closeModal","deleteUser","valid","data","users","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","template","GroupsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/groups/groups.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/groups/groups.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\ndeclare var $: any;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n\n  users: any;\n  // superAdmin: number;\n  // Admin: number;\n  // User: number;\n  selectedUser: any;\n  selectedRole: number | undefined;\n\n  loggedInUser : any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      //console.log(this.loggedInUser.role)\n      this.loggedInUser.role=3\n    }\n\n    this.getUsers()\n  }\n\n\n  getRoleName(roleNumber: number): string {\n    switch (roleNumber) {\n      case 1:\n        return 'User';\n      case 2:\n        return 'Admin';\n      case 3:\n        return 'Super Admin';\n      default:\n        return 'Unknown Role';\n    }\n  }\n\n\n  openEditModal(user: any) {\n    this.selectedUser = user;\n    //console.log(this.selectedUser)\n    this.selectedRole = user.role;\n    $('#editUserRoleModal').modal('show');\n  }\n\n  updateUserRole() {\n    // Convert to number and update the role\n    this.selectedUser.role = Number(this.selectedRole);\n\n    console.log(this.selectedUser)\n\n\n    //--------------------------------------------------------------\n\n    this.http.post(BACKEND_URL+\"/update-permission\", this.selectedUser).subscribe(\n      response => {\n          console.log('User details updated on the server.', response);\n          //refesh User list \n          this.getUsers();\n      },\n      error => {\n          console.error('There was an error updating the user details on the server.', error);\n          alert('Error updating profile. Please try again.');\n      }\n  )\n    //alert('Profile updated!');\n\n  //-------------------------------------------------------------\n    \n    // Close the modal\n    this.closeModal()\n \n  }\n\n  deleteUser(){\n    this.selectedUser.valid = false\n    console.log(this.selectedUser)\n\n    this.http.post(BACKEND_URL+\"/update-permission\", this.selectedUser).subscribe(\n      response => {\n          console.log('User details updated on the server.', response);\n\n          //refesh User list \n          this.getUsers();\n      },\n      error => {\n          console.error('There was an error updating the user details on the server.', error);\n          alert('Error updating profile. Please try again.');\n      }\n  )\n    this.closeModal()\n  }\n\n\n  closeModal(){\n    $('#editUserRoleModal').modal('hide');\n  }\n\n  getUsers(){\n    this.http.post(BACKEND_URL + \"/all-users\", httpOptions)\n    .subscribe(\n        (data: any) => {\n            if (data) {\n\n              //console.log(data)\n              this.users = data\n\n\n            } else {\n                alert(\"no Data Soz\");\n            }\n        },\n        error => {console.error('There was an error:', error);}\n    );\n  }\n\n}\n\n","<p>groups works!</p>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}