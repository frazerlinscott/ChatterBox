{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ChannelsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5)(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_2_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const channel_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.addUserToChannel(channel_r2));\n    });\n    i0.ɵɵtext(7, \"Join Channel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 7);\n    i0.ɵɵtext(9, \"Button 2\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const channel_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(channel_r2);\n  }\n}\nfunction ChannelsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5)(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_5_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const channel_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.addUserToChannel(channel_r5));\n    });\n    i0.ɵɵtext(7, \"Join Channel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 7);\n    i0.ɵɵtext(9, \"Button 2\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const channel_r5 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(channel_r5);\n  }\n}\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport class ChannelsComponent {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n  }\n  ngOnInit() {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n    }\n    this.loggedInUser.role = 1;\n    this.route.queryParams.subscribe(params => {\n      let currentGroupString = params['yourKey'];\n      // Check if the data is stringified object\n      try {\n        this.passedGroupObject = JSON.parse(currentGroupString);\n        console.log(this.passedGroupObject);\n      } catch (e) {\n        console.error('Error parsing the object', e);\n      }\n      this.getGroups();\n    });\n  }\n  // getchannelsKeys() {\n  //   this.currentChannelskeys = Object.keys(this.currentGroupObject.channels);\n  // }\n  addUserToChannel(targetChannel) {\n    console.log(targetChannel);\n    console.log(this.loggedInUser.username);\n    // Loop over each channel in this.currentGroup.channels\n    for (let channel in this.currentGroup.channels) {\n      // If the channel name matches the target and the user is not in the channel array\n      if (channel === targetChannel && !this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n        this.currentGroup.channels[channel].push(this.loggedInUser.username);\n        console.log(`Added ${this.loggedInUser.username} to ${channel}`);\n        break; // Exit the loop as we've found and processed the target channel\n      }\n    }\n\n    this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n      this.getGroups();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n  }\n  getGroups() {\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions).subscribe(data => {\n      if (data) {\n        this.groups = data;\n        const matchedGroup = this.groups.find(group => group.groupID === this.passedGroupObject.groupID);\n        if (matchedGroup) {\n          this.currentGroup = matchedGroup;\n          //console.log(\"Matched\")\n          console.log(this.currentGroup);\n          this.myChannels = [];\n          this.toJoinChannels = [];\n          for (let channel in this.currentGroup.channels) {\n            if (this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n              // If the loggedInUser is in the channel, add it to myChannels\n              this.myChannels.push(channel);\n            } else {\n              // Otherwise, add it to toJoinChannels\n              this.toJoinChannels.push(channel);\n            }\n          }\n          console.log(\"My Channels:\", this.myChannels);\n          console.log(\"Channels to Join:\", this.toJoinChannels);\n          // this.myChannels = \n          // // = Object.keys(this.currentGroup.channels);\n          // this.toJoinChannels=\n          // this.currentGroup.channel\n        } else {\n          console.log(`No group found with groupID: ${this.passedGroupObject.groupID}`);\n        }\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n}\nChannelsComponent.ɵfac = function ChannelsComponent_Factory(t) {\n  return new (t || ChannelsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nChannelsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChannelsComponent,\n  selectors: [[\"app-channels\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"row\"], [\"class\", \"col-12 mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\", \"mb-3\"], [1, \"card\"], [1, \"card-body\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"btn-primary\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-secondary\"]],\n  template: function ChannelsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, ChannelsComponent_div_2_Template, 10, 1, \"div\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1);\n      i0.ɵɵtemplate(5, ChannelsComponent_div_5_Template, 10, 1, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.myChannels);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.toJoinChannels);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"body[_ngcontent-%COMP%] {\\n    font-family: 'Arial', sans-serif;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n    max-height: 80vh;\\n    overflow-y: scroll;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.card-body[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    transition: all 0.3s;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhbm5lbHMvY2hhbm5lbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSx3Q0FBd0M7QUFDNUM7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLDJCQUEyQjtJQUMzQix3Q0FBd0M7QUFDNUMiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcbiAgICBmb250LWZhbWlseTogJ0FyaWFsJywgc2Fucy1zZXJpZjtcbn1cblxuLmNvbnRhaW5lciB7XG4gICAgbWF4LWhlaWdodDogODB2aDtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbi5jYXJkIHtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG4uY2FyZC1ib2R5IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5idXR0b24ge1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xufVxuXG5idXR0b246aG92ZXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ChannelsComponent_div_2_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r4","channel_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","addUserToChannel","ɵɵadvance","ɵɵtextInterpolate","ChannelsComponent_div_5_Template_button_click_6_listener","_r7","channel_r5","ctx_r6","httpOptions","headers","BACKEND_URL","ChannelsComponent","constructor","http","route","ngOnInit","storedUser","window","sessionStorage","getItem","loggedInUser","JSON","parse","role","queryParams","subscribe","params","currentGroupString","passedGroupObject","console","log","e","error","getGroups","targetChannel","username","channel","currentGroup","channels","includes","push","post","response","alert","data","groups","matchedGroup","find","group","groupID","myChannels","toJoinChannels","ɵɵdirectiveInject","i1","HttpClient","i2","ActivatedRoute","selectors","decls","vars","consts","template","ChannelsComponent_Template","rf","ctx","ɵɵtemplate","ChannelsComponent_div_2_Template","ChannelsComponent_div_5_Template","ɵɵproperty"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/channels/channels.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/channels/channels.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\n\n@Component({\n  selector: 'app-channels',\n  templateUrl: './channels.component.html',\n  styleUrls: ['./channels.component.css']\n})\nexport class ChannelsComponent implements OnInit {\n\n  passedGroupObject: any;\n\n  myChannels: any;\n  toJoinChannels: any;\n\n  currentGroup: any;\n  currentChannels: any;\n\n\n  joinChannelskeys: any;\n  myChannelskeys: any;\n\n  loggedInUser:any; \n  groups: any;\n\n  constructor(private http: HttpClient, private route: ActivatedRoute) { \n}\n\nngOnInit(): void {\n\n  const storedUser = window.sessionStorage.getItem('current.user');\n  if (storedUser) {\n\n    this.loggedInUser = JSON.parse(storedUser);\n  }\n\n  this.loggedInUser.role = 1\n\n  this.route.queryParams.subscribe(params => {\n    let currentGroupString = params['yourKey'];\n    \n    // Check if the data is stringified object\n    try {\n        this.passedGroupObject = JSON.parse(currentGroupString);\n        console.log(this.passedGroupObject);\n    } catch (e) {\n        console.error('Error parsing the object', e);\n    }\n\n    this.getGroups()\n\n });\n}\n\n// getchannelsKeys() {\n//   this.currentChannelskeys = Object.keys(this.currentGroupObject.channels);\n// }\n\naddUserToChannel(targetChannel: any) {\n  console.log(targetChannel);\n  console.log(this.loggedInUser.username);\n\n  // Loop over each channel in this.currentGroup.channels\n  for (let channel in this.currentGroup.channels) {\n      // If the channel name matches the target and the user is not in the channel array\n      if (channel === targetChannel && !this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n          this.currentGroup.channels[channel].push(this.loggedInUser.username);\n          console.log(`Added ${this.loggedInUser.username} to ${channel}`);\n          break; // Exit the loop as we've found and processed the target channel\n      }\n  }\n  \n  this.http.post(BACKEND_URL+\"/update-groups\", this.currentGroup).subscribe(\n    response => {\n        console.log('User details updated on the server.', response);\n\n        //refesh User list \n        this.getGroups();\n    },\n    error => {\n        console.error('There was an error updating the user details on the server.', error);\n        alert('Error updating profile. Please try again.');\n    }\n  )}\n\n\n\ngetGroups(){\n  this.http.post(BACKEND_URL + \"/all-groups\", httpOptions)\n  .subscribe(\n      (data: any) => {\n          if (data) {\n            this.groups = data\n            const matchedGroup = this.groups.find((group: { groupID: any; }) => group.groupID === this.passedGroupObject.groupID);\n            if (matchedGroup) {\n                this.currentGroup = matchedGroup;\n                //console.log(\"Matched\")\n                console.log(this.currentGroup)\n\n                this.myChannels = [];\n                this.toJoinChannels = [];\n\n                for (let channel in this.currentGroup.channels) {\n                  if (this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n                      // If the loggedInUser is in the channel, add it to myChannels\n                      this.myChannels.push(channel);\n                  } else {\n                      // Otherwise, add it to toJoinChannels\n                      this.toJoinChannels.push(channel);\n                  }\n              }\n              console.log(\"My Channels:\", this.myChannels);\n              console.log(\"Channels to Join:\", this.toJoinChannels);\n\n                // this.myChannels = \n\n                // // = Object.keys(this.currentGroup.channels);\n                // this.toJoinChannels=\n\n                // this.currentGroup.channel\n\n            } else {\n                console.log(`No group found with groupID: ${this.passedGroupObject.groupID}`);\n            }\n\n\n\n\n\n\n          } else {\n              alert(\"no Data Soz\");\n          }\n      },\n      error => {console.error('There was an error:', error);}\n  );\n}\n\n}\n","<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div *ngFor=\"let channel of myChannels\" class=\"col-12 mb-3\">\n            <div class=\"card\">\n                <div class=\"card-body d-flex justify-content-between align-items-center\">\n                    <span>{{channel}}</span>\n                    <div>\n                        <button class=\"btn btn-primary mr-2\" (click)=\"addUserToChannel(channel)\">Join Channel</button>\n                        <button class=\"btn btn-secondary\">Button 2</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div *ngFor=\"let channel of toJoinChannels\" class=\"col-12 mb-3\">\n            <div class=\"card\">\n                <div class=\"card-body d-flex justify-content-between align-items-center\">\n                    <span>{{channel}}</span>\n                    <div>\n                        <button class=\"btn btn-primary mr-2\" (click)=\"addUserToChannel(channel)\">Join Channel</button>\n                        <button class=\"btn btn-secondary\">Button 2</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}