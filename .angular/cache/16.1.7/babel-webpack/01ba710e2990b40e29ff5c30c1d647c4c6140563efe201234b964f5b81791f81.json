{"ast":null,"code":"//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction GroupsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_div_1_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const group_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onGroupCardClick(group_r1));\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"h5\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const group_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(group_r1.groupName);\n  }\n}\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport class GroupsComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      console.log(this.loggedInUser);\n    }\n    this.getUsers();\n    this.getGroups();\n  }\n  onGroupCardClick(group) {\n    this.selectedGroup = group;\n    console.log(group);\n  }\n  getUsers() {\n    this.http.post(BACKEND_URL + \"/all-users\", httpOptions).subscribe(data => {\n      if (data) {\n        this.users = data;\n        console.log(this.users);\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  getGroups() {\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions).subscribe(data => {\n      if (data) {\n        this.groups = data;\n        console.log(this.groups);\n        console.log(typeof this.groups);\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n}\nGroupsComponent.ɵfac = function GroupsComponent_Factory(t) {\n  return new (t || GroupsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nGroupsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GroupsComponent,\n  selectors: [[\"app-groups\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"row\"], [\"class\", \"col-md-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\"], [1, \"card\", 3, \"click\"], [1, \"card-body\"], [1, \"card-title\"]],\n  template: function GroupsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, GroupsComponent_div_1_Template, 5, 1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","i0","ɵɵelementStart","ɵɵlistener","GroupsComponent_div_1_Template_div_click_1_listener","restoredCtx","ɵɵrestoreView","_r3","group_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","onGroupCardClick","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","groupName","httpOptions","headers","BACKEND_URL","GroupsComponent","constructor","http","ngOnInit","storedUser","window","sessionStorage","getItem","loggedInUser","JSON","parse","console","log","getUsers","getGroups","group","selectedGroup","post","subscribe","data","users","alert","error","groups","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","GroupsComponent_Template","rf","ctx","ɵɵtemplate","GroupsComponent_div_1_Template","ɵɵproperty"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/groups/groups.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/groups/groups.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Group } from 'server/routes/groupModel';\n\ndeclare var $: any;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n\n  loggedInUser : any;\n  users: any;\n  groups: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      console.log(this.loggedInUser)\n    }\n    this.getUsers()\n    this.getGroups()\n  }\n\n  onGroupCardClick(group){\n    \n    this.selectedGroup = group;\n\n    console.log(group)\n  }\n\n\n\n\n\n  getUsers(){\n    this.http.post(BACKEND_URL + \"/all-users\", httpOptions)\n    .subscribe(\n        (data: any) => {\n            if (data) {\n              this.users = data\n              console.log(this.users)\n            } else {\n                alert(\"no Data Soz\");\n            }\n        },\n        error => {console.error('There was an error:', error);}\n    );\n  }\n\n\n  getGroups(){\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions)\n    .subscribe(\n        (data: any) => {\n            if (data) {\n              this.groups = data\n              console.log(this.groups)\n              console.log(typeof(this.groups))\n            } else {\n                alert(\"no Data Soz\");\n            }\n        },\n        error => {console.error('There was an error:', error);}\n    );\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // getRoleName(roleNumber: number): string {\n  //   switch (roleNumber) {\n  //     case 1:\n  //       return 'User';\n  //     case 2:\n  //       return 'Admin';\n  //     case 3:\n  //       return 'Super Admin';\n  //     default:\n  //       return 'Unknown Role';\n  //   }\n  // }\n\n\n  // openEditModal(user: any) {\n  //   this.selectedUser = user;\n  //   //console.log(this.selectedUser)\n  //   this.selectedRole = user.role;\n  //   $('#editUserRoleModal').modal('show');\n  // }\n\n  // updateUserRole() {\n  //   // Convert to number and update the role\n  //   this.selectedUser.role = Number(this.selectedRole);\n\n  //   console.log(this.selectedUser)\n\n\n  //   //--------------------------------------------------------------\n\n  //   this.http.post(BACKEND_URL+\"/update-permission\", this.selectedUser).subscribe(\n  //     response => {\n  //         console.log('User details updated on the server.', response);\n  //         //refesh User list \n  //         this.getUsers();\n  //     },\n  //     error => {\n  //         console.error('There was an error updating the user details on the server.', error);\n  //         alert('Error updating profile. Please try again.');\n  //     }\n  // )\n    //alert('Profile updated!');\n\n  //-------------------------------------------------------------\n    \n  //   // Close the modal\n  //   this.closeModal()\n \n  // }\n\n\n\n  // closeModal(){\n  //   $('#editUserRoleModal').modal('hide');\n  // }\n\n\n\n}\n\n","<div class=\"row\">\n    <div class=\"col-md-4\" *ngFor=\"let group of groups\">\n      <div class=\"card\" (click)=\"onGroupCardClick(group)\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ group.groupName }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}