{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/upload.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"src/app/service/socket.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nconst _c0 = [\"chatMessages\"];\nfunction ChatComponent_li_7_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", msg_r2.filePath, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ChatComponent_li_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, ChatComponent_li_7_div_1_div_3_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 19);\n    i0.ɵɵelement(5, \"img\", 20);\n    i0.ɵɵelementStart(6, \"div\")(7, \"small\", 21);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const msg_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", msg_r2.message, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r2.filePath);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r3.URL + msg_r2.profilePic, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(msg_r2.username);\n  }\n}\nfunction ChatComponent_li_7_div_2_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", msg_r2.filePath, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ChatComponent_li_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 24);\n    i0.ɵɵelement(2, \"img\", 20);\n    i0.ɵɵelementStart(3, \"div\")(4, \"small\", 21);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 25);\n    i0.ɵɵtext(7);\n    i0.ɵɵtemplate(8, ChatComponent_li_7_div_2_div_8_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const msg_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r4.URL + msg_r2.profilePic, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(msg_r2.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", msg_r2.message, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r2.attachment);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"right\": a0,\n    \"left\": a1\n  };\n};\nfunction ChatComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 13);\n    i0.ɵɵtemplate(1, ChatComponent_li_7_div_1_Template, 9, 4, \"div\", 14);\n    i0.ɵɵtemplate(2, ChatComponent_li_7_div_2_Template, 9, 4, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c1, msg_r2.username === ctx_r1.loggedInUser.username, msg_r2.username !== ctx_r1.loggedInUser.username));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r2.username === ctx_r1.loggedInUser.username);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r2.username !== ctx_r1.loggedInUser.username);\n  }\n}\nconst BACKEND_URL = \"http://localhost:3000\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ChatComponent {\n  constructor(uploadService, http, socketService, router, route) {\n    this.uploadService = uploadService;\n    this.http = http;\n    this.socketService = socketService;\n    this.router = router;\n    this.route = route;\n    this.messagecontent = \"\";\n    this.currentChannel = null;\n    this.messages = [];\n    this.attachmentFile = null;\n    this.attachmentId = 1;\n  }\n  ngOnInit() {\n    this.socketService.initSocket();\n    this.URL = BACKEND_URL + \"/\";\n    this.attachmentURL = BACKEND_URL + \"/attachments/\";\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      //console.log(this.loggedInUser.username)\n    }\n\n    this.route.queryParams.subscribe(params => {\n      this.channel = params['channel'];\n      this.currentGroupString = params['currentGroup'];\n      this.initIoConnection();\n      this.socketService.join(this.channel);\n      this.fetchPreviousMessages(this.currentGroupString, this.channel);\n      //this.messages = []; // Clear the previous messages when changing the channel.\n    });\n  }\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n  fetchPreviousMessages(groupName, channelName) {\n    const url = `${BACKEND_URL}/messages?groupName=${groupName}&channelName=${channelName}`;\n    this.http.get(url).subscribe(data => {\n      this.messages = data;\n      console.log(this.messages);\n    }, error => {\n      console.error(\"Failed to fetch previous messages\", error);\n    });\n  }\n  scrollToBottom() {\n    if (this.chatMessages) {\n      const chat = this.chatMessages.nativeElement;\n      chat.scrollTop = chat.scrollHeight;\n    }\n  }\n  onFileSelected(event) {\n    this.attachmentFile = event.target.files[0];\n    console.log(\"File selected: \" + this.attachmentFile);\n  }\n  initIoConnection() {\n    console.log('initIoConnection called');\n    if (this.ioConnection) {\n      this.ioConnection.unsubscribe();\n    }\n    this.ioConnection = this.socketService.getMessage().subscribe(data => {\n      console.log('Received:', data);\n      if (data.channel === this.channel) {\n        const newMessage = data;\n        // Attach profile picture to the new message if it's from the loggedInUser\n        if (newMessage.username === this.loggedInUser.username && !newMessage.profilePic) {\n          newMessage.profilePic = this.loggedInUser.profilePic;\n        }\n        this.messages.push(newMessage);\n        console.log(this.messages);\n      }\n    });\n  }\n  sendMessage() {\n    console.log('Send message');\n    if (this.attachmentFile) {\n      console.log(this.messagecontent ? \"Sending both string message and attachment\" : \"Sending only an attachment\");\n      this.uploadAttachment();\n    } else if (this.messagecontent) {\n      console.log(\"Sending only string message\");\n      this.sendOnlyMessage();\n    }\n  }\n  uploadAttachment() {\n    const formData = new FormData();\n    if (this.attachmentFile) {\n      formData.append('photo', this.attachmentFile);\n    }\n    this.uploadService.uploadAttachment(formData).subscribe(response => {\n      console.log('Upload successful', response);\n      const attachmentId = response.attachmentId;\n      // Send the message (or an empty string if there's no message content)\n      this.sendAttachmentMessage(attachmentId);\n      // Reset the attachment and message content after sending\n      this.attachmentFile = null;\n      this.messagecontent = \"\";\n    }, error => {\n      console.error('Upload error', error);\n    });\n  }\n  sendAttachmentMessage(attachmentId) {\n    this.socketService.send(this.messagecontent || \"\", this.channel, this.currentGroupString, attachmentId);\n  }\n  sendOnlyMessage() {\n    this.socketService.send(this.messagecontent, this.channel, this.currentGroupString, 0);\n    this.messagecontent = \"\";\n  }\n}\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.UploadService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.SocketService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"app-chat\"]],\n  viewQuery: function ChatComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chatMessages = _t.first);\n    }\n  },\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"card\", \"colored-border-card-light\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"list-group\", \"chat-messages\"], [\"chatMessages\", \"\"], [\"style\", \"background-color: #16293C;\", \"class\", \"list-group-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-footer\", 2, \"padding-bottom\", \"20px\"], [1, \"form-inline\"], [1, \"form-group\", \"flex-grow-1\", \"mr-2\", 2, \"padding-bottom\", \"15px\"], [\"type\", \"text\", \"name\", \"messagecontent\", \"placeholder\", \"Type a message\", 1, \"form-control\", \"w-100\", \"textplaceHolder\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"file\", \"name\", \"attachment\", 3, \"change\"], [1, \"list-group-item\", 2, \"background-color\", \"#16293C\", 3, \"ngClass\"], [\"class\", \"d-flex align-items-start justify-content-end\", 4, \"ngIf\"], [\"class\", \"d-flex align-items-start\", 4, \"ngIf\"], [1, \"d-flex\", \"align-items-start\", \"justify-content-end\"], [1, \"rounded\", \"p-2\", \"bg-primary\", \"text-white\", 2, \"max-width\", \"70%\"], [4, \"ngIf\"], [1, \"ml-2\", \"text-center\", 2, \"margin-left\", \"15px\"], [\"alt\", \"Profile Image\", 1, \"img-fluid\", \"rounded-circle\", 2, \"width\", \"40px\", \"height\", \"40px\", 3, \"src\"], [1, \"d-block\"], [\"alt\", \"Attachment Image\", 1, \"img-fluid\", \"mt-2\", 3, \"src\"], [1, \"d-flex\", \"align-items-start\"], [1, \"mr-2\", \"text-center\", 2, \"margin-right\", \"15px\"], [1, \"rounded\", \"p-2\", \"bg-secondary\", \"text-white\", 2, \"max-width\", \"70%\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtext(3, \" channelName \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"ul\", 4, 5);\n      i0.ɵɵtemplate(7, ChatComponent_li_7_Template, 3, 6, \"li\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8)(10, \"div\", 9)(11, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.messagecontent = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_12_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵtext(13, \"Send\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 12);\n      i0.ɵɵlistener(\"change\", function ChatComponent_Template_input_change_14_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.messagecontent);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.NgModel, i6.NgForm],\n  styles: [\".right[_ngcontent-%COMP%] {\\n    text-align: right;\\n    font-family: 'TextFont', bold;\\n    color: white;\\n  }\\n\\n  .card-header[_ngcontent-%COMP%]{\\n    color: white;\\n    text-align: center;\\n    font-family: 'CustomFont', bold;\\n    font-size: 35px;\\n  }\\n  \\n  .left[_ngcontent-%COMP%] {\\n    text-align: left;\\n    font-family: 'TextFont', bold;\\n    color: white;\\n  }\\n\\n  .custom-message-item[_ngcontent-%COMP%] {\\n    padding: 0.75rem 1.25rem;\\n    border:  #16293C;\\n}\\n\\n.chat-messages[_ngcontent-%COMP%] {\\n  height: 400px; \\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  border: 2px solid #16293C;\\n}\\n.list-group-item[_ngcontent-%COMP%]{\\n  border: 2px solid #16293C;\\n}\\n.scroll[_ngcontent-%COMP%] {\\n  background-color: #16293C;\\n}\\n\\n.message-username[_ngcontent-%COMP%] {\\n  height: 20px;  \\n  overflow: hidden;\\n  font-family: 'TextFont', bold;\\n  color: white;\\n}\\n\\n.textplaceHolder[_ngcontent-%COMP%]{\\n  font-family: 'TextFont', bold;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n  background-color: #16293C;\\n  \\n\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-2px);\\n  box-shadow: 0 0px 10px rgba(0, 0, 0, 0.2);\\n}\\n\\n.groupHeading[_ngcontent-%COMP%]{\\n  font-family: 'CustomFont', sans-serif;\\n  font-size: 18px;\\n  color:  #00E0FF;\\n}\\n\\n.colored-border-card[_ngcontent-%COMP%] {\\n  border: 2px solid #615AF7;\\n  border-radius: 10px; \\n}\\n\\n.colored-border-card-light[_ngcontent-%COMP%] {\\n  border: 2px solid #615AF7;\\n  border-radius: 10px; \\n}\\n\\n.section-card[_ngcontent-%COMP%] {\\n  box-shadow: 0 0.25rem 0.5rem #00E0FF;\\n  padding: 1.25rem;\\n  margin-bottom: 1.25rem;\\n  font-family: 'TextFont', bold;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  box-shadow: 0 0.125rem 0.25rem #00E0FF;\\n  transition: box-shadow 0.3s;\\n}\\n\\n.card-body[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  margin-bottom: 1.25rem;\\n  font-family: 'TextFont', bold;\\n}\\n\\n\\n.btn[_ngcontent-%COMP%]{\\n  font-family: 'CustomFont';\\n  font-size: 20px;\\n  width: 200px\\n\\n}\\n\\n.btn[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.1);\\n  box-shadow: 0 0.625rem 1.25rem rgba(0, 0, 0, 0.1);\\n  background-color: #00E0FF;\\n  color:#16293C;\\n  font-family: 'CustomFont', sans-serif;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdC9jaGF0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsNkJBQTZCO0lBQzdCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsK0JBQStCO0lBQy9CLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsNkJBQTZCO0lBQzdCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHdCQUF3QjtJQUN4QixnQkFBZ0I7QUFDcEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQix5QkFBeUI7QUFDM0I7QUFDQTtFQUNFLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQiw2QkFBNkI7RUFDN0IsWUFBWTtBQUNkOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0Usd0NBQXdDO0VBQ3hDLHlCQUF5QjtFQUN6QiwwQkFBMEI7QUFDNUI7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IseUNBQXlDO0FBQzNDOztBQUVBO0VBQ0UscUNBQXFDO0VBQ3JDLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxvQ0FBb0M7RUFDcEMsZ0JBQWdCO0VBQ2hCLHNCQUFzQjtFQUN0Qiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxzQ0FBc0M7RUFDdEMsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLHNCQUFzQjtFQUN0Qiw2QkFBNkI7QUFDL0I7OztBQUdBO0VBQ0UseUJBQXlCO0VBQ3pCLGVBQWU7RUFDZjs7QUFFRjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixpREFBaUQ7RUFDakQseUJBQXlCO0VBQ3pCLGFBQWE7RUFDYixxQ0FBcUM7QUFDdkMiLCJzb3VyY2VzQ29udGVudCI6WyIucmlnaHQge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIGZvbnQtZmFtaWx5OiAnVGV4dEZvbnQnLCBib2xkO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuXG4gIC5jYXJkLWhlYWRlcntcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtZmFtaWx5OiAnQ3VzdG9tRm9udCcsIGJvbGQ7XG4gICAgZm9udC1zaXplOiAzNXB4O1xuICB9XG4gIFxuICAubGVmdCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBmb250LWZhbWlseTogJ1RleHRGb250JywgYm9sZDtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cblxuICAuY3VzdG9tLW1lc3NhZ2UtaXRlbSB7XG4gICAgcGFkZGluZzogMC43NXJlbSAxLjI1cmVtO1xuICAgIGJvcmRlcjogICMxNjI5M0M7XG59XG5cbi5jaGF0LW1lc3NhZ2VzIHtcbiAgaGVpZ2h0OiA0MDBweDsgXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBib3JkZXI6IDJweCBzb2xpZCAjMTYyOTNDO1xufVxuLmxpc3QtZ3JvdXAtaXRlbXtcbiAgYm9yZGVyOiAycHggc29saWQgIzE2MjkzQztcbn1cbi5zY3JvbGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTYyOTNDO1xufVxuXG4ubWVzc2FnZS11c2VybmFtZSB7XG4gIGhlaWdodDogMjBweDsgIFxuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmb250LWZhbWlseTogJ1RleHRGb250JywgYm9sZDtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4udGV4dHBsYWNlSG9sZGVye1xuICBmb250LWZhbWlseTogJ1RleHRGb250JywgYm9sZDtcbn1cblxuLmNhcmQge1xuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTYyOTNDO1xuICAvKiBib3JkZXI6IDhweCBzb2xpZCByZWQgKi9cbn1cblxuYnV0dG9uOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpO1xuICBib3gtc2hhZG93OiAwIDBweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cblxuLmdyb3VwSGVhZGluZ3tcbiAgZm9udC1mYW1pbHk6ICdDdXN0b21Gb250Jywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBjb2xvcjogICMwMEUwRkY7XG59XG5cbi5jb2xvcmVkLWJvcmRlci1jYXJkIHtcbiAgYm9yZGVyOiAycHggc29saWQgIzYxNUFGNztcbiAgYm9yZGVyLXJhZGl1czogMTBweDsgXG59XG5cbi5jb2xvcmVkLWJvcmRlci1jYXJkLWxpZ2h0IHtcbiAgYm9yZGVyOiAycHggc29saWQgIzYxNUFGNztcbiAgYm9yZGVyLXJhZGl1czogMTBweDsgXG59XG5cbi5zZWN0aW9uLWNhcmQge1xuICBib3gtc2hhZG93OiAwIDAuMjVyZW0gMC41cmVtICMwMEUwRkY7XG4gIHBhZGRpbmc6IDEuMjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDEuMjVyZW07XG4gIGZvbnQtZmFtaWx5OiAnVGV4dEZvbnQnLCBib2xkO1xufVxuXG4uY2FyZCB7XG4gIGJveC1zaGFkb3c6IDAgMC4xMjVyZW0gMC4yNXJlbSAjMDBFMEZGO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuM3M7XG59XG5cbi5jYXJkLWJvZHkge1xuICBmb250LXdlaWdodDogNjAwO1xuICBtYXJnaW4tYm90dG9tOiAxLjI1cmVtO1xuICBmb250LWZhbWlseTogJ1RleHRGb250JywgYm9sZDtcbn1cblxuXG4uYnRue1xuICBmb250LWZhbWlseTogJ0N1c3RvbUZvbnQnO1xuICBmb250LXNpemU6IDIwcHg7XG4gIHdpZHRoOiAyMDBweFxuXG59XG5cbi5idG46aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gIGJveC1zaGFkb3c6IDAgMC42MjVyZW0gMS4yNXJlbSByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMEUwRkY7XG4gIGNvbG9yOiMxNjI5M0M7XG4gIGZvbnQtZmFtaWx5OiAnQ3VzdG9tRm9udCcsIHNhbnMtc2VyaWY7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["HttpHeaders","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","msg_r2","filePath","ɵɵsanitizeUrl","ɵɵtext","ɵɵtemplate","ChatComponent_li_7_div_1_div_3_Template","ɵɵtextInterpolate1","message","ctx_r3","URL","profilePic","ɵɵtextInterpolate","username","ChatComponent_li_7_div_2_div_8_Template","ctx_r4","attachment","ChatComponent_li_7_div_1_Template","ChatComponent_li_7_div_2_Template","ɵɵpureFunction2","_c1","ctx_r1","loggedInUser","BACKEND_URL","httpOptions","headers","ChatComponent","constructor","uploadService","http","socketService","router","route","messagecontent","currentChannel","messages","attachmentFile","attachmentId","ngOnInit","initSocket","attachmentURL","storedUser","window","sessionStorage","getItem","JSON","parse","queryParams","subscribe","params","channel","currentGroupString","initIoConnection","join","fetchPreviousMessages","ngAfterViewChecked","scrollToBottom","groupName","channelName","url","get","data","console","log","error","chatMessages","chat","nativeElement","scrollTop","scrollHeight","onFileSelected","event","target","files","ioConnection","unsubscribe","getMessage","newMessage","push","sendMessage","uploadAttachment","sendOnlyMessage","formData","FormData","append","response","sendAttachmentMessage","send","ɵɵdirectiveInject","i1","UploadService","i2","HttpClient","i3","SocketService","i4","Router","ActivatedRoute","selectors","viewQuery","ChatComponent_Query","rf","ctx","ChatComponent_li_7_Template","ɵɵlistener","ChatComponent_Template_input_ngModelChange_11_listener","$event","ChatComponent_Template_button_click_12_listener","ChatComponent_Template_input_change_14_listener"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/chat/chat.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/chat/chat.component.html"],"sourcesContent":["import { Component, OnInit, } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {SocketService} from 'src/app/service/socket.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport { Message } from 'server/models/messageModel';\nimport {ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\nimport { UploadService } from '../service/upload.service';\nimport { Observable } from 'rxjs';\nimport { UploadResponse } from 'server/models/interfaces';\n\n\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\n\n\nexport class ChatComponent implements OnInit, AfterViewChecked {\n\n  @ViewChild('chatMessages', { static: false }) chatMessages?: ElementRef;\n\n  messagecontent: string=\"\";\n  //messages: string[] = [];\n  ioConnection:any;\n  channel: any;\n  currentChannel: string | null = null;\n  loggedInUser : any;\n  messages: Message[] = [];\n\n  profilePicPath: any;\n\n  attachmentFile: File | null = null;\n \n  group: any;\n  currentGroupString:any\n  URL: any;\n  attachmentId: number = 1;\n  attachmentURL: any;\n\n  constructor (private uploadService: UploadService, private http: HttpClient, private socketService: SocketService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.socketService.initSocket();\n\n    this.URL = BACKEND_URL+\"/\"\n    this.attachmentURL = BACKEND_URL+\"/attachments/\"\n\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n\n      this.loggedInUser = JSON.parse(storedUser);\n      //console.log(this.loggedInUser.username)\n    }\n    this.route.queryParams.subscribe(params => {\n      this.channel = params['channel'];\n      this.currentGroupString = params['currentGroup'];\n\n        this.initIoConnection();\n\n        this.socketService.join(this.channel);\n\n        this.fetchPreviousMessages(this.currentGroupString, this.channel);\n\n        //this.messages = []; // Clear the previous messages when changing the channel.\n    });\n}\n\nngAfterViewChecked(): void {\n  this.scrollToBottom();\n}\n\nfetchPreviousMessages(groupName: string, channelName: string): void {\n  const url = `${BACKEND_URL}/messages?groupName=${groupName}&channelName=${channelName}`;\n  this.http.get<Message[]>(url).subscribe(\n    (data: Message[]) => {\n\n      this.messages = data;\n\n      console.log(this.messages)\n    },\n    error => {\n      console.error(\"Failed to fetch previous messages\", error);\n    }\n  );\n}\n\nprivate scrollToBottom(): void {\n  if (this.chatMessages) {\n      const chat = this.chatMessages.nativeElement;\n      chat.scrollTop = chat.scrollHeight;\n  }\n}\n\nonFileSelected(event: any) {\n  this.attachmentFile = <File>event.target.files[0];\n  console.log(\"File selected: \" +this.attachmentFile)\n}\n\n\ninitIoConnection() {\n  console.log('initIoConnection called');\n\n  if (this.ioConnection) {\n    this.ioConnection.unsubscribe();\n  }\n\n  this.ioConnection = this.socketService.getMessage().subscribe((data: any) => {\n      console.log('Received:', data);\n\n      if (data.channel === this.channel) {\n          const newMessage = data as Message;\n          \n          // Attach profile picture to the new message if it's from the loggedInUser\n          if (newMessage.username === this.loggedInUser.username && !newMessage.profilePic) {\n              newMessage.profilePic = this.loggedInUser.profilePic;\n          }\n\n          this.messages.push(newMessage);\n          console.log(this.messages);\n      }\n  });\n}\n\n\n\nsendMessage() {\n  console.log('Send message')\n\n  if (this.attachmentFile) {\n    console.log(this.messagecontent ? \"Sending both string message and attachment\" : \"Sending only an attachment\");\n    this.uploadAttachment();\n  } else if (this.messagecontent) {\n    console.log(\"Sending only string message\");\n    this.sendOnlyMessage();\n  }\n}\n\nuploadAttachment() {\n  const formData = new FormData();\n  if (this.attachmentFile) {\n    formData.append('photo', this.attachmentFile);\n  }\n\n  this.uploadService.uploadAttachment(formData).subscribe((response: UploadResponse) => {\n    console.log('Upload successful', response);\n    const attachmentId = response.attachmentId;\n      \n      // Send the message (or an empty string if there's no message content)\n      this.sendAttachmentMessage(attachmentId);\n\n      // Reset the attachment and message content after sending\n      this.attachmentFile = null;\n      this.messagecontent = \"\";\n\n  }, error => {\n      console.error('Upload error', error);\n  });\n}\n\nsendAttachmentMessage(attachmentId: number) {\n  this.socketService.send(this.messagecontent || \"\", this.channel, this.currentGroupString, attachmentId);\n}\n\nsendOnlyMessage() {\n  this.socketService.send(this.messagecontent, this.channel, this.currentGroupString, 0);\n  this.messagecontent = \"\";\n}\n\n}\n\n\n//   sendMessage() {\n\n//     let attachmentId = \"dummieattachmentID\"; // Assuming server responds with an ID for the uploaded attachment\n\n//     if (this.attachmentFile) {\n//       const formData = new FormData();\n//       formData.append('photo', this.attachmentFile);\n//       formData.append('attachmentID', this.attachmentFile);\n\n//       console.log(\"username sent\");\n\n//       this.uploadService.uploadAttachment(formData).subscribe(response => {\n//         console.log('Upload successful', response);\n\n//         if (this.messagecontent) {\n//           // Send the message along with the attachment ID\n//           this.socketService.send(this.messagecontent, this.channel, this.currentGroupString, attachmentId);\n//           this.messagecontent = \"\";\n//         }\n\n//         // Maybe reset the attachment after sending\n//         this.attachmentFile = null;\n//       }, error => {\n//         console.error('Upload error', error);\n//         // Handle upload errors\n//       });\n\n//     } else if (this.messagecontent) {\n//       // If there's no attachment, but there's message content, send the message\n//       this.socketService.send(this.messagecontent, this.channel, this.currentGroupString, attachmentId);\n//       this.messagecontent = \"\";\n//     }\n//   }\n","<div class=\"container mt-5\">\n    <div class=\"card colored-border-card-light\">\n        <div class=\"card-header\">\n            channelName\n        </div>\n        <div class=\"card-body\">\n            <ul #chatMessages class=\"list-group chat-messages\">\n                <li style=\"background-color: #16293C;\" class=\"list-group-item\" \n                    *ngFor=\"let msg of messages\"\n                    [ngClass]=\"{'right': msg.username === loggedInUser.username, 'left': msg.username !== loggedInUser.username}\">\n\n                    <!-- Message from loggedInUser -->\n                    <div *ngIf=\"msg.username === loggedInUser.username\" class=\"d-flex align-items-start justify-content-end\">\n                        <div class=\"rounded p-2 bg-primary text-white\" style=\"max-width: 70%;\">\n                            {{ msg.message }}\n                            <!-- Display attachment if available -->\n                            <div *ngIf=\"msg.filePath\">\n                                <img [src]=\"msg.filePath\" alt=\"Attachment Image\" class=\"img-fluid mt-2\">\n                            </div>\n                        </div>\n                        <div class=\"ml-2 text-center\" style=\"margin-left: 15px;\">\n                            <img [src]=\"URL + msg.profilePic\" \n                                 alt=\"Profile Image\" \n                                 class=\"img-fluid rounded-circle\" \n                                 style=\"width: 40px; height: 40px;\">\n                            <div><small class=\"d-block\">{{ msg.username }}</small></div>\n                        </div>\n                    </div>\n\n                    <!-- Message from other users -->\n                    <div *ngIf=\"msg.username !== loggedInUser.username\" class=\"d-flex align-items-start\">\n                        <div class=\"mr-2 text-center\" style=\"margin-right: 15px;\">\n                            <img [src]=\"URL + msg.profilePic\" \n                                 alt=\"Profile Image\" \n                                 class=\"img-fluid rounded-circle\" \n                                 style=\"width: 40px; height: 40px;\">\n                            <div><small class=\"d-block\">{{ msg.username }}</small></div>\n                        </div>\n                        <div class=\"rounded p-2 bg-secondary text-white\" style=\"max-width: 70%;\">\n                            {{ msg.message }}\n                            <!-- Display attachment if available -->\n                            <div *ngIf=\"msg.attachment\">\n                                <img [src]=\"msg.filePath\" alt=\"Attachment Image\" class=\"img-fluid mt-2\">\n                            </div>\n                        </div>\n                    </div>\n\n                </li>\n            </ul>\n        </div>\n        <div style=\"padding-bottom: 20px\" class=\"card-footer\">\n            <form class=\"form-inline\">\n                <div class=\"form-group flex-grow-1 mr-2\" style=\"padding-bottom: 15px\">\n                    <input type=\"text\" class=\"form-control w-100 textplaceHolder\" [(ngModel)]=\"messagecontent\" name=\"messagecontent\" placeholder=\"Type a message\">\n                </div>\n                <button class=\"btn btn-primary\" (click)=\"sendMessage()\" type=\"button\">Send</button>\n                <input type=\"file\" name=\"attachment\" (change)=\"onFileSelected($event)\">\n            </form>\n        </div>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}