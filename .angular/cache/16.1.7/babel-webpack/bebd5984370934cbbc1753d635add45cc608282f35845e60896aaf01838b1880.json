{"ast":null,"code":"//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Group } from 'server/routes/groupModel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction GroupsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_div_7_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const group_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onGroupCardClick(group_r2));\n    });\n    i0.ɵɵelementStart(2, \"div\", 24)(3, \"h5\", 25);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 26)(6, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_div_7_Template_button_click_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const group_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      ctx_r5.onButton1Click(group_r2);\n      return i0.ɵɵresetView($event.stopPropagation());\n    });\n    i0.ɵɵtext(7, \"Button 1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_div_7_Template_button_click_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const group_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      ctx_r6.onButton2Click(group_r2);\n      return i0.ɵɵresetView($event.stopPropagation());\n    });\n    i0.ɵɵtext(9, \"Button 2\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const group_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(group_r2.groupName);\n  }\n}\nfunction GroupsComponent_ul_28_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const channel_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(channel_r8);\n  }\n}\nfunction GroupsComponent_ul_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, GroupsComponent_ul_28_li_1_Template, 2, 1, \"li\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.groupChannels);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-unique\": a0,\n    \"not-unique\": a1\n  };\n};\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport class GroupsComponent {\n  constructor(http) {\n    this.http = http;\n    this.groupChannels = [];\n    this.isUniqueGroup = true;\n    this.group = new Group(0, \" \", \" \", [\"\"], [\"\"], [\"\"], [\"\"], true);\n  }\n  ngOnInit() {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      //console.log(this.loggedInUser)\n    }\n\n    this.getUsers();\n    this.getGroups();\n    this.http.get(BACKEND_URL + \"/groups\").subscribe(groupsNames => {\n      this.allGroupNames = groupsNames;\n      console.log(this.allGroupNames);\n    });\n  }\n  onGroupCardClick(group) {\n    this.selectedGroup = group;\n    console.log(\"card clicked\");\n    console.log(group);\n  }\n  onButton1Click(group) {\n    console.log(\"Button 1 clicked\");\n  }\n  onButton2Click(group) {\n    console.log(\"Button 2 clicked\");\n  }\n  onAddGroup() {\n    console.log(\"Add Group button clicked\");\n    $('#addGroupModal').modal('show');\n  }\n  onGroupInput() {\n    this.isUniqueGroup = !this.allGroupNames.includes(this.group.groupName);\n  }\n  addChannel() {\n    if (this.newChannelName && !this.groupChannels.includes(this.newChannelName)) {\n      this.groupChannels.push(this.newChannelName);\n      this.newChannelName = '';\n    }\n  }\n  saveGroup() {\n    //console.log(this.newGroupName)\n    // console.log(this.groupChannels)\n    this.GetNewGroupID();\n    //console.log(this.newGroupID)\n    this.group.groupID = this.newGroupID;\n    this.group.groupName = this.newGroupName;\n    this.group.createdBy = this.loggedInUser.username;\n    this.group.groupAdmins = [this.loggedInUser.username];\n    this.group.userRequests = [\"\"];\n    this.group.members = [\"\"];\n    this.group.channels = this.groupChannels;\n    this.group.valid = true;\n    //console.log(this.group)\n    this.http.post(BACKEND_URL + \"/update-groups\", this.group).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n      this.getGroups();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n    this.closeModal();\n  }\n  closeModal() {\n    this.group = {\n      groupID: 0,\n      groupName: \"\",\n      createdBy: this.loggedInUser.username,\n      groupAdmins: [\"\"],\n      userRequests: [\"\"],\n      members: [\"\"],\n      channels: [\"\"],\n      valid: true\n    };\n    this.newGroupName = '';\n    this.groupChannels = [];\n    console.log(this.group);\n    $('#addGroupModal').modal('hide');\n  }\n  getUsers() {\n    this.http.post(BACKEND_URL + \"/all-users\", httpOptions).subscribe(data => {\n      if (data) {\n        this.users = data;\n        //console.log(this.users)\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  getGroups() {\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions).subscribe(data => {\n      if (data) {\n        this.groups = data;\n        //console.log(this.groups)\n        //console.log(typeof(this.groups))\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  GetNewGroupID() {\n    if (this.groups && this.groups.length > 0) {\n      this.newGroupID = this.groups[this.groups.length - 1].groupID + 1;\n    } else {\n      this.newGroupID = 1;\n    }\n  }\n}\nGroupsComponent.ɵfac = function GroupsComponent_Factory(t) {\n  return new (t || GroupsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nGroupsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GroupsComponent,\n  selectors: [[\"app-groups\"]],\n  decls: 32,\n  vars: 8,\n  consts: [[1, \"container\", \"my-5\"], [1, \"mb-4\"], [1, \"btn\", \"btn-success\", \"btn-block\", 3, \"click\"], [1, \"row\", \"justify-content-center\"], [\"class\", \"col-md-3 mx-2 my-2\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"addGroupModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addGroupLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"addGroupLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\"], [\"for\", \"groupName\"], [\"type\", \"text\", \"id\", \"groupName\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"for\", \"channelName\"], [\"type\", \"text\", \"id\", \"channelName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-2\", 3, \"click\"], [4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"col-md-3\", \"mx-2\", \"my-2\"], [1, \"card\", \"square-card\", 3, \"click\"], [1, \"card-body\", \"d-flex\", \"flex-column\"], [1, \"card-title\", \"mt-auto\"], [1, \"mt-auto\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-secondary\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function GroupsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_2_listener() {\n        return ctx.onAddGroup();\n      });\n      i0.ɵɵtext(3, \"Add Group-AdminSuper\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_4_listener() {\n        return ctx.onAddGroup();\n      });\n      i0.ɵɵtext(5, \"My Groups\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 3);\n      i0.ɵɵtemplate(7, GroupsComponent_div_7_Template, 10, 1, \"div\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6)(10, \"div\", 7)(11, \"div\", 8)(12, \"h5\", 9);\n      i0.ɵɵtext(13, \"Add Group\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_14_listener() {\n        return ctx.closeModal();\n      });\n      i0.ɵɵelementStart(15, \"span\", 11);\n      i0.ɵɵtext(16, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 12)(18, \"div\", 13)(19, \"label\", 14);\n      i0.ɵɵtext(20, \"Group Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function GroupsComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.newGroupName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 13)(23, \"label\", 16);\n      i0.ɵɵtext(24, \"Channel Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function GroupsComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.newChannelName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_26_listener() {\n        return ctx.addChannel();\n      });\n      i0.ɵɵtext(27, \"Add Channel\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(28, GroupsComponent_ul_28_Template, 2, 1, \"ul\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 20)(30, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_30_listener() {\n        return ctx.saveGroup();\n      });\n      i0.ɵɵtext(31, \"Save Group\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.newGroupName)(\"ngClass\", i0.ɵɵpureFunction2(5, _c0, ctx.group.groupName && ctx.isUniqueGroup, ctx.group.groupName && !ctx.isUniqueGroup));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newChannelName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.groupChannels && ctx.groupChannels.length);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".square-card[_ngcontent-%COMP%] {\\n    width: 200px;\\n    height: 200px;\\n    cursor: pointer;\\n  }\\n\\n  \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ3JvdXBzL2dyb3Vwcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0VBQ2pCOztFQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFpQ0UiLCJzb3VyY2VzQ29udGVudCI6WyIuc3F1YXJlLWNhcmQge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4gIC8qIC5tb2RhbCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogMTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjQpO1xuICB9XG4gIFxuICAubW9kYWwtY29udGVudCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZTtcbiAgICBtYXJnaW46IDE1JSBhdXRvO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzg4ODtcbiAgICB3aWR0aDogNzAlO1xuICB9XG4gIFxuICAuY2xvc2Uge1xuICAgIGNvbG9yOiAjYWFhO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbiAgXG4gIC5jbG9zZTpob3ZlcixcbiAgLmNsb3NlOmZvY3VzIHtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICAgKi8iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["HttpHeaders","Group","i0","ɵɵelementStart","ɵɵlistener","GroupsComponent_div_7_Template_div_click_1_listener","restoredCtx","ɵɵrestoreView","_r4","group_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","onGroupCardClick","ɵɵtext","ɵɵelementEnd","GroupsComponent_div_7_Template_button_click_6_listener","$event","ctx_r5","onButton1Click","stopPropagation","GroupsComponent_div_7_Template_button_click_8_listener","ctx_r6","onButton2Click","ɵɵadvance","ɵɵtextInterpolate","groupName","channel_r8","ɵɵtemplate","GroupsComponent_ul_28_li_1_Template","ɵɵproperty","ctx_r1","groupChannels","httpOptions","headers","BACKEND_URL","GroupsComponent","constructor","http","isUniqueGroup","group","ngOnInit","storedUser","window","sessionStorage","getItem","loggedInUser","JSON","parse","getUsers","getGroups","get","subscribe","groupsNames","allGroupNames","console","log","selectedGroup","onAddGroup","$","modal","onGroupInput","includes","addChannel","newChannelName","push","saveGroup","GetNewGroupID","groupID","newGroupID","newGroupName","createdBy","username","groupAdmins","userRequests","members","channels","valid","post","response","error","alert","closeModal","data","users","groups","length","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","GroupsComponent_Template","rf","ctx","GroupsComponent_Template_button_click_2_listener","GroupsComponent_Template_button_click_4_listener","GroupsComponent_div_7_Template","GroupsComponent_Template_button_click_14_listener","GroupsComponent_Template_input_ngModelChange_21_listener","GroupsComponent_Template_input_ngModelChange_25_listener","GroupsComponent_Template_button_click_26_listener","GroupsComponent_ul_28_Template","GroupsComponent_Template_button_click_30_listener","ɵɵpureFunction2","_c0"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/groups/groups.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/groups/groups.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Group } from 'server/routes/groupModel';\n\ndeclare var $: any;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n\n  loggedInUser : any;\n  users: any;\n  groups: any;\n  selectedGroup: any;\n\n  newGroupName: any;\n  newChannelName: any;\n  groupChannels: string[] = [];\n\n  newGroupID: any;\n  allGroupNames: any;\n  isUniqueGroup:boolean = true;\n  \n  group: Group = new Group(0, \" \", \" \", [\"\"], [\"\"], [\"\"], [\"\"], true);\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      //console.log(this.loggedInUser)\n    }\n    this.getUsers()\n    this.getGroups()\n\n    this.http.get<string[]>(BACKEND_URL + \"/groups\").subscribe(groupsNames => {\n      this.allGroupNames = groupsNames;\n      console.log(this.allGroupNames);\n    });\n  }\n\n  onGroupCardClick(group:any ){\n    \n    this.selectedGroup = group;\n    console.log(\"card clicked\")\n\n    console.log(group)\n  }\n\n  onButton1Click(group:any){\n    console.log(\"Button 1 clicked\")\n  }\n\n  onButton2Click(group:any){\n    console.log(\"Button 2 clicked\")\n\n  }\n\n  onAddGroup() {\n    console.log(\"Add Group button clicked\");\n\n    $('#addGroupModal').modal('show');\n  }\n\n  onGroupInput() {\n    \n    this.isUniqueGroup = !this.allGroupNames.includes(this.group.groupName);\n  }\n\n  addChannel() {\n    if (this.newChannelName && !this.groupChannels.includes(this.newChannelName)) {\n      this.groupChannels.push(this.newChannelName);\n      this.newChannelName = '';\n    }\n  }\n\n  saveGroup(){\n    //console.log(this.newGroupName)\n   // console.log(this.groupChannels)\n\n    this.GetNewGroupID()\n\n    //console.log(this.newGroupID)\n\n    this.group.groupID = this.newGroupID;\n    this.group.groupName = this.newGroupName;\n    this.group.createdBy = this.loggedInUser.username;\n    this.group.groupAdmins = [this.loggedInUser.username];\n    this.group.userRequests = [\"\"];\n    this.group.members = [\"\"];\n    this.group.channels = this.groupChannels;\n    this.group.valid = true;\n\n    //console.log(this.group)\n\n    this.http.post(BACKEND_URL+\"/update-groups\", this.group).subscribe(\n      response => {\n          console.log('User details updated on the server.', response);\n\n          //refesh User list \n          this.getGroups();\n      },\n      error => {\n          console.error('There was an error updating the user details on the server.', error);\n          alert('Error updating profile. Please try again.');\n      }\n    )\n\n    this.closeModal()\n\n  }\n\n  closeModal(){\n\n    this.group = {\n      groupID: 0,\n      groupName: \"\",\n      createdBy: this.loggedInUser.username,\n      groupAdmins: [\"\"],\n      userRequests: [\"\"],\n      members: [\"\"],\n      channels: [\"\"],\n      valid: true\n  };\n\n  this.newGroupName=''\n\n  this.groupChannels=[]\n\n  console.log(this.group)\n\n  \n    $('#addGroupModal').modal('hide');\n  }\n  \n  getUsers(){\n    this.http.post(BACKEND_URL + \"/all-users\", httpOptions)\n    .subscribe(\n        (data: any) => {\n            if (data) {\n              this.users = data\n              //console.log(this.users)\n            } else {\n                alert(\"no Data Soz\");\n            }\n        },\n        error => {console.error('There was an error:', error);}\n    );\n  }\n\n\n  getGroups(){\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions)\n    .subscribe(\n        (data: any) => {\n            if (data) {\n              this.groups = data\n              //console.log(this.groups)\n\n              //console.log(typeof(this.groups))\n            } else {\n                alert(\"no Data Soz\");\n            }\n        },\n        error => {console.error('There was an error:', error);}\n    );\n  }\n\n  GetNewGroupID(){\n    if (this.groups && this.groups.length > 0) {\n      this.newGroupID = this.groups[this.groups.length - 1].groupID + 1;\n  } else {\n      this.newGroupID = 1;\n  }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // getRoleName(roleNumber: number): string {\n  //   switch (roleNumber) {\n  //     case 1:\n  //       return 'User';\n  //     case 2:\n  //       return 'Admin';\n  //     case 3:\n  //       return 'Super Admin';\n  //     default:\n  //       return 'Unknown Role';\n  //   }\n  // }\n\n\n  // openEditModal(user: any) {\n  //   this.selectedUser = user;\n  //   //console.log(this.selectedUser)\n  //   this.selectedRole = user.role;\n  //   $('#editUserRoleModal').modal('show');\n  // }\n\n  // updateUserRole() {\n  //   // Convert to number and update the role\n  //   this.selectedUser.role = Number(this.selectedRole);\n\n  //   console.log(this.selectedUser)\n\n\n  //   //--------------------------------------------------------------\n\n  //   this.http.post(BACKEND_URL+\"/update-permission\", this.selectedUser).subscribe(\n  //     response => {\n  //         console.log('User details updated on the server.', response);\n  //         //refesh User list \n  //         this.getUsers();\n  //     },\n  //     error => {\n  //         console.error('There was an error updating the user details on the server.', error);\n  //         alert('Error updating profile. Please try again.');\n  //     }\n  // )\n    //alert('Profile updated!');\n\n  //-------------------------------------------------------------\n    \n  //   // Close the modal\n  //   this.closeModal()\n \n  // }\n\n\n\n  // closeModal(){\n  //   $('#editUserRoleModal').modal('hide');\n  // }\n\n\n\n}\n\n","<div class=\"container my-5\"> <!-- Container for center alignment and margin -->\n\n    <!-- Add Group Button at the top, spanning across the cards div -->\n    <div class=\"mb-4\">\n        <button class=\"btn btn-success btn-block\" (click)=\"onAddGroup()\">Add Group-AdminSuper</button>\n        <button class=\"btn btn-success btn-block\" (click)=\"onAddGroup()\">My Groups</button>\n    </div>\n  \n    <div class=\"row justify-content-center\"> <!-- Center the cards -->\n        <div class=\"col-md-3 mx-2 my-2\" *ngFor=\"let group of groups\"> <!-- Spacing between cards -->\n            <div class=\"card square-card\" (click)=\"onGroupCardClick(group)\">\n                <div class=\"card-body d-flex flex-column\">\n                    <h5 class=\"card-title mt-auto\">{{ group.groupName }}</h5>\n                    <div class=\"mt-auto\">\n                        <button class=\"btn btn-sm btn-primary\" (click)=\"onButton1Click(group); $event.stopPropagation()\">Button 1</button>\n                        <button class=\"btn btn-sm btn-secondary\" (click)=\"onButton2Click(group); $event.stopPropagation()\">Button 2</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n<div class=\"modal fade\" id=\"addGroupModal\" tabindex=\"-1\" aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"addGroupLabel\">Add Group</h5>\n          <button (click)=\"closeModal()\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        \n        <div class=\"modal-body\">\n          <div class=\"form-group\">\n            <label for=\"groupName\">Group Name:</label>\n            <input type=\"text\" class=\"form-control\" id=\"groupName\" [(ngModel)]=\"newGroupName\"\n            [ngClass]=\"{\n                'is-unique': group.groupName && isUniqueGroup, \n                'not-unique': group.groupName  && !isUniqueGroup}\">\n          </div>\n  \n          <div class=\"form-group\">\n            <label for=\"channelName\">Channel Name:</label>\n            <input type=\"text\" class=\"form-control\" id=\"channelName\" [(ngModel)]=\"newChannelName\">\n            <button type=\"button\" class=\"btn btn-primary mt-2\" (click)=\"addChannel()\">Add Channel</button>\n          </div>\n          \n          <ul *ngIf=\"groupChannels && groupChannels.length\">\n            <li *ngFor=\"let channel of groupChannels\">{{ channel }}</li>\n          </ul>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveGroup()\">Save Group</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}