{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ProfileComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" User already exists, Please choose a new username \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Passwords do not match, Please try again. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ProfileComponent = /*#__PURE__*/(() => {\n  class ProfileComponent {\n    constructor(router, http) {\n      this.router = router;\n      this.http = http;\n      this.user = {};\n      this.allUsernames = [];\n      this.isUniqueUsername = true;\n      this.isUniqueEmail = true;\n      this.isUniquePassword = true;\n    }\n    ngOnInit() {\n      const storedUserData = sessionStorage.getItem('current.user');\n      this.http.get(BACKEND_URL + \"/usernames\").subscribe(usernames => {\n        this.allUsernames = usernames;\n        console.log(this.allUsernames);\n      });\n      if (storedUserData) {\n        const retrievedUser = JSON.parse(storedUserData);\n        console.log(retrievedUser);\n        this.user.username = retrievedUser.username;\n        this.user.userbirthdate = retrievedUser.birthdate;\n        this.user.email = retrievedUser.email;\n        this.user.password = retrievedUser.password;\n        this.user.pwdconfirm = retrievedUser.pwdconfirm;\n      }\n    }\n    onUsernameInput() {\n      // Check if username is unique while the user is typing\n      this.isUniqueUsername = !this.allUsernames.includes(this.user.username);\n      console.log(this.isUniqueUsername);\n    }\n    onSubmit() {\n      const storedUserData = sessionStorage.getItem('current.user');\n      let originalUsername;\n      if (storedUserData) {\n        let retrievedUser = JSON.parse(storedUserData);\n        originalUsername = retrievedUser.username;\n        retrievedUser.username = this.user.username;\n        retrievedUser.birthdate = this.user.userbirthdate;\n        retrievedUser.email = this.user.email;\n        retrievedUser.email = this.user.email;\n        retrievedUser.password = this.user.password;\n        retrievedUser.pwdconfirm = this.user.pwdconfirm;\n        // Update session storage with the new user data\n        sessionStorage.setItem('current.user', JSON.stringify(retrievedUser));\n      }\n      const newDetails = {\n        originalUsername: originalUsername,\n        updatedDetails: this.user // Send updated user details\n      };\n\n      console.log(newDetails);\n      this.http.post(BACKEND_URL + \"/update-user\", newDetails).subscribe(response => {\n        console.log('User details updated on the server.', response);\n        alert('Profile updated!');\n        this.isUniqueEmail = false;\n      }, error => {\n        console.error('There was an error updating the user details on the server.', error);\n        alert('Error updating profile. Please try again.');\n        this.isUniqueEmail = false;\n      });\n      alert('Profile updated!');\n    }\n    closeProfile() {\n      this.router.navigateByUrl('/account'); // Assuming '/account' is your account page route\n    }\n  }\n\n  ProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n    return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  ProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfileComponent,\n    selectors: [[\"app-profile\"]],\n    decls: 30,\n    vars: 16,\n    consts: [[1, \"bg-light\", \"p-4\", \"rounded\", \"border\", 3, \"ngSubmit\"], [1, \"mb-4\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\", \"input\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"birthdate\", 1, \"form-label\"], [\"type\", \"date\", \"name\", \"birthdate\", \"id\", \"birthdate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"for\", \"pwdconfirm\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"pwdconfirm\", \"name\", \"pwdconfirm\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"d-flex\", \"justify-content-between\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"invalid-feedback\"]],\n    template: function ProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Update Profile Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.user.username = $event;\n        })(\"input\", function ProfileComponent_Template_input_input_6_listener() {\n          return ctx.onUsernameInput();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, ProfileComponent_div_7_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Birthdate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.user.userbirthdate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.user.pwdconfirm = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, ProfileComponent_div_20_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 2)(22, \"label\", 12);\n        i0.ɵɵtext(23, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.user.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\", 14)(26, \"button\", 15);\n        i0.ɵɵtext(27, \"Update Profile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_28_listener() {\n          return ctx.closeProfile();\n        });\n        i0.ɵɵtext(29, \"Close\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.username)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.user.username && !ctx.isUniqueUsername));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isUniqueUsername);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.userbirthdate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password)(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.user.password && !ctx.isUniquePassword));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.pwdconfirm)(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.user.pwdconfirm && !ctx.isUniquePassword));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isUniquePassword);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".container[_ngcontent-%COMP%]{max-width:600px}.is-unique[_ngcontent-%COMP%]{border:2px solid green}.not-unique[_ngcontent-%COMP%]{border:2px solid red}\"]\n  });\n  return ProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}