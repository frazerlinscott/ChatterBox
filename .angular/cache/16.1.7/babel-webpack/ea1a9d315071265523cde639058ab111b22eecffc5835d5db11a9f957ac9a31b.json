{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ChannelsComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.addChannel(\"button\"));\n    });\n    i0.ɵɵtext(1, \"Add Channels\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChannelsComponent_div_14_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_14_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const channel_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.membersChannel(channel_r6));\n    });\n    i0.ɵɵtext(1, \"Members\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChannelsComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 27)(2, \"div\", 28)(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtemplate(6, ChannelsComponent_div_14_button_6_Template, 2, 0, \"button\", 29);\n    i0.ɵɵelementStart(7, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_14_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const channel_r6 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.removeUserFromChannel(channel_r6));\n    });\n    i0.ɵɵtext(8, \"Leave Channel\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const channel_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(channel_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isAdmin);\n  }\n}\nfunction ChannelsComponent_div_19_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_19_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const channel_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.membersChannel(channel_r13));\n    });\n    i0.ɵɵtext(1, \"Members\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChannelsComponent_div_19_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_19_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const channel_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.deleteChannel(channel_r13));\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChannelsComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"div\", 27)(2, \"div\", 28)(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_19_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const channel_r13 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.addUserToChannel(channel_r13));\n    });\n    i0.ɵɵtext(7, \"Join Channel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, ChannelsComponent_div_19_button_8_Template, 2, 0, \"button\", 29);\n    i0.ɵɵtemplate(9, ChannelsComponent_div_19_button_9_Template, 2, 0, \"button\", 34);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const channel_r13 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(channel_r13);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAdmin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAdmin);\n  }\n}\nfunction ChannelsComponent_li_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_li_47_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const username_r24 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.adminRemoveMember(username_r24));\n    });\n    i0.ɵɵtext(3, \"Remove User\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const username_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", username_r24, \" \");\n  }\n}\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport let ChannelsComponent = /*#__PURE__*/(() => {\n  class ChannelsComponent {\n    constructor(http, route) {\n      this.http = http;\n      this.route = route;\n      this.isAdmin = false;\n    }\n    ngOnInit() {\n      const storedUser = window.sessionStorage.getItem('current.user');\n      if (storedUser) {\n        this.loggedInUser = JSON.parse(storedUser);\n      }\n      if (this.loggedInUser.role === 3) {\n        this.isAdmin = true;\n        console.log(this.isAdmin);\n      }\n      console.log(this.loggedInUser.role);\n      this.route.queryParams.subscribe(params => {\n        let currentGroupString = params['yourKey'];\n        // Check if the data is stringified object\n        try {\n          this.passedGroupObject = JSON.parse(currentGroupString);\n          console.log(this.passedGroupObject);\n          this.currentGroupString = this.passedGroupObject.groupName;\n        } catch (e) {\n          console.error('Error parsing the object', e);\n        }\n        this.getGroups();\n        this.getUsers();\n      });\n    }\n    // getchannelsKeys() {\n    //   this.currentChannelskeys = Object.keys(this.currentGroupObject.channels);\n    // }\n    addUserToChannel(targetChannel) {\n      this.getGroups();\n      console.log(targetChannel);\n      console.log(this.loggedInUser.username);\n      // Loop over each channel in this.currentGroup.channels\n      for (let channel in this.currentGroup.channels) {\n        // If the channel name matches the target and the user is not in the channel array\n        if (channel === targetChannel && !this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n          this.currentGroup.channels[channel].push(this.loggedInUser.username);\n          console.log(`Added ${this.loggedInUser.username} to ${channel}`);\n          break; // Exit the loop as we've found and processed the target channel\n        }\n      }\n\n      this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n        console.log('User details updated on the server.', response);\n        //refesh User list \n        this.getGroups();\n      }, error => {\n        console.error('There was an error updating the user details on the server.', error);\n        alert('Error updating profile. Please try again.');\n      });\n    }\n    removeUserFromChannel(targetChannel) {\n      // Fetch the groups\n      this.getGroups();\n      console.log(targetChannel);\n      console.log(this.loggedInUser.username);\n      // Loop over each channel in this.currentGroup.channels\n      for (let channel in this.currentGroup.channels) {\n        // If the channel name matches the target and the user is in the channel array\n        if (channel === targetChannel && this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n          const userIndex = this.currentGroup.channels[channel].indexOf(this.loggedInUser.username);\n          if (userIndex > -1) {\n            this.currentGroup.channels[channel].splice(userIndex, 1); // Remove the user from the channel\n            console.log(`Removed ${this.loggedInUser.username} from ${channel}`);\n            break; // Exit the loop as we've found and processed the target channel\n          }\n        }\n      }\n      // Update the groups on the server\n      this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n        console.log('User details updated on the server.', response);\n        // Refresh the User list \n        this.getGroups();\n      }, error => {\n        console.error('There was an error updating the user details on the server.', error);\n        alert('Error updating profile. Please try again.');\n      });\n    }\n    addChannel(buttonType) {\n      if (buttonType == 'button') {\n        this.newChannelName = '';\n        $('#addChannelModal').modal('show');\n      } else {\n        if (this.newChannelName) {\n          this.currentGroup.channels[this.newChannelName] = [];\n        } else {\n          console.error('newChannelName is undefined!');\n        }\n        this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n          console.log(' details updated on the server.', response);\n          this.getGroups();\n        }, error => {\n          console.error('There was an error updating the  details on the server.', error);\n          alert('Error updating profile. Please try again.');\n        });\n        this.closeModal(\"\");\n      }\n    }\n    closeModal(modalType) {\n      $('#addChannelModal').modal('hide');\n      if (modalType === \"editUsers\") {\n        $('#editmemberUsers').modal('hide');\n      }\n    }\n    deleteChannel(targetChannel) {\n      console.log(targetChannel);\n      if (this.currentGroup.channels && this.currentGroup.channels.hasOwnProperty(targetChannel)) {\n        delete this.currentGroup.channels[targetChannel];\n      } else {\n        console.warn('Channel not found in current group.');\n      }\n      console.log(this.currentGroup);\n      this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n        console.log(' details updated on the server.', response);\n        this.getGroups();\n      }, error => {\n        console.error('There was an error updating the  details on the server.', error);\n        alert('Error updating profile. Please try again.');\n      });\n    }\n    membersChannel(channel) {\n      this.getGroups();\n      console.log(channel);\n      console.log(this.usernames);\n      console.log(this.currentGroup);\n      this.currentChannel = channel;\n      let membersOfCurrentChannel = this.currentGroup.channels[channel];\n      // Filtering this.usernames based on the list of members from the current channel\n      this.channelMembers = this.usernames.filter(username => membersOfCurrentChannel.includes(username));\n      console.log(this.channelMembers);\n      $('#editmemberUsers').modal('show');\n    }\n    adminRemoveMember(username) {\n      console.log(this.currentGroup);\n      console.log(username);\n      console.log(this.currentChannel);\n      // Loop over each channel in this.currentGroup.channels\n      for (let channel in this.currentGroup.channels) {\n        // If the channel name matches the target and the user is in the channel array\n        if (channel === this.currentChannel && this.currentGroup.channels[channel].includes(username)) {\n          const userIndex = this.currentGroup.channels[channel].indexOf(username);\n          if (userIndex > -1) {\n            this.currentGroup.channels[channel].splice(userIndex, 1); // Remove the user from the channel\n            break; // Exit the loop as we've found and processed the target channel\n          }\n        }\n      }\n      // Update the groups on the server\n      this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n        console.log('User details updated on the server.', response);\n        // Refresh the User list \n        this.getGroups();\n        this.membersChannel(this.currentChannel);\n      }, error => {\n        console.error('There was an error updating the user details on the server.', error);\n        alert('Error updating profile. Please try again.');\n      });\n      //$('#editmemberUsers').modal('show');\n    }\n\n    getUsers() {\n      this.http.post(BACKEND_URL + \"/all-users\", httpOptions).subscribe(data => {\n        if (data) {\n          this.users = data;\n          //console.log(this.users)\n          this.usernames = this.users.filter(u => u.valid).map(u => u.username);\n        } else {\n          alert(\"no Data Soz\");\n        }\n      }, error => {\n        console.error('There was an error:', error);\n      });\n    }\n    getGroups() {\n      this.http.post(BACKEND_URL + \"/all-groups\", httpOptions).subscribe(data => {\n        if (data) {\n          this.groups = data;\n          const matchedGroup = this.groups.find(group => group.groupID === this.passedGroupObject.groupID);\n          if (matchedGroup) {\n            this.currentGroup = matchedGroup;\n            //console.log(\"Matched\")\n            if (this.currentGroup.groupAdmins.includes(this.loggedInUser.username)) {\n              this.isAdmin = true;\n            } else if (this.loggedInUser.role == 3) {\n              this.isAdmin = true;\n            } else {\n              this.isAdmin = false;\n            }\n            this.myChannels = [];\n            this.toJoinChannels = [];\n            for (let channel in this.currentGroup.channels) {\n              if (this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n                // If the loggedInUser is in the channel, add it to myChannels\n                this.myChannels.push(channel);\n              } else {\n                // Otherwise, add it to toJoinChannels\n                this.toJoinChannels.push(channel);\n              }\n            }\n            this.channelsUserCreated;\n            // this.myChannels = \n            // // = Object.keys(this.currentGroup.channels);\n            // this.toJoinChannels=\n            // this.currentGroup.channel\n          } else {\n            console.log(`No group found with groupID: ${this.passedGroupObject.groupID}`);\n          }\n        } else {\n          alert(\"no Data Soz\");\n        }\n      }, error => {\n        console.error('There was an error:', error);\n      });\n    }\n  }\n  ChannelsComponent.ɵfac = function ChannelsComponent_Factory(t) {\n    return new (t || ChannelsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  ChannelsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChannelsComponent,\n    selectors: [[\"app-channels\"]],\n    decls: 48,\n    vars: 7,\n    consts: [[1, \"container\", \"mt-4\", \"text-center\"], [1, \"mb-4\"], [\"class\", \"btn btn-success custom-btn position-relative\", 3, \"click\", 4, \"ngIf\"], [1, \"container\", \"mt-4\", \"mx-4\", \"my-4\", \"card\"], [1, \"my-4\"], [1, \"row\", \"mx-2\", \"my-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"container\", \"mt-5\", \"mx-4\", \"my-4\", \"card\"], [1, \"row\", \"mx-4\", \"my-4\"], [\"class\", \"col-12 mb-3\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"addChannelModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addGroupLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"addGroupLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\"], [\"for\", \"channelName\"], [\"type\", \"text\", \"id\", \"channelName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-2\", 3, \"click\"], [\"id\", \"editmemberUsers\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addGroupLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"id\", \"editUser\", 1, \"modal-title\"], [1, \"list-group\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", \"custom-btn\", \"position-relative\", 3, \"click\"], [1, \"card\"], [1, \"card-body\", \"align-items-center\"], [\"class\", \"btn btn-primary mr-2\", \"style\", \"margin-left: 10px;\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-primary\", \"mr-2\", 2, \"margin-left\", \"10px\", 3, \"click\"], [1, \"col-12\", \"mb-3\"], [1, \"btn\", \"btn-primary\", \"mr-2\", 3, \"click\"], [\"class\", \"btn btn-danger mr-2\", \"style\", \"margin-left: 10px;\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-danger\", \"mr-2\", 2, \"margin-left\", \"10px\", 3, \"click\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 2, \"width\", \"120px\", \"margin-left\", \"10px\", 3, \"click\"]],\n    template: function ChannelsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"div\", 1)(3, \"h5\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 0)(6, \"div\", 1)(7, \"h1\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, ChannelsComponent_button_9_Template, 2, 0, \"button\", 2);\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"h2\", 4);\n        i0.ɵɵtext(12, \"My Channels\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5);\n        i0.ɵɵtemplate(14, ChannelsComponent_div_14_Template, 9, 2, \"div\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 7)(16, \"h2\", 4);\n        i0.ɵɵtext(17, \"Join Channels\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 8);\n        i0.ɵɵtemplate(19, ChannelsComponent_div_19_Template, 10, 3, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 10)(21, \"div\", 11)(22, \"div\", 12)(23, \"div\", 13)(24, \"h5\", 14);\n        i0.ɵɵtext(25, \"Add Channel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function ChannelsComponent_Template_button_click_26_listener() {\n          return ctx.closeModal(\"newGroup\");\n        });\n        i0.ɵɵelementStart(27, \"span\", 16);\n        i0.ɵɵtext(28, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"div\", 17)(30, \"div\", 18)(31, \"label\", 19);\n        i0.ɵɵtext(32, \"Channel Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"input\", 20);\n        i0.ɵɵlistener(\"ngModelChange\", function ChannelsComponent_Template_input_ngModelChange_33_listener($event) {\n          return ctx.newChannelName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function ChannelsComponent_Template_button_click_34_listener() {\n          return ctx.addChannel(\"save\");\n        });\n        i0.ɵɵtext(35, \"Add Channel\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(36, \"div\", 22)(37, \"div\", 11)(38, \"div\", 12)(39, \"div\", 13)(40, \"h5\", 23);\n        i0.ɵɵtext(41, \"Edit Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function ChannelsComponent_Template_button_click_42_listener() {\n          return ctx.closeModal(\"editUsers\");\n        });\n        i0.ɵɵelementStart(43, \"span\", 16);\n        i0.ɵɵtext(44, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(45, \"div\", 17)(46, \"ul\", 24);\n        i0.ɵɵtemplate(47, ChannelsComponent_li_47_Template, 4, 1, \"li\", 25);\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"User: \", ctx.loggedInUser.username, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.currentGroupString);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAdmin);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.myChannels);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.toJoinChannels);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.newChannelName);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.channelMembers);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"body[_ngcontent-%COMP%]{font-family:Arial,sans-serif}.container[_ngcontent-%COMP%]{max-height:80vh}.card[_ngcontent-%COMP%]{box-shadow:0 4px 8px #0000001a}.card-body[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}button[_ngcontent-%COMP%]{transition:all .3s}button[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 4px 8px #0003}.custom-modal-margin[_ngcontent-%COMP%]{margin-top:20x;margin-right:20px;margin-bottom:50px;margin-left:20px}body[_ngcontent-%COMP%]{background-color:#f5f5f5;padding-top:5px}\"]\n  });\n  return ChannelsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}