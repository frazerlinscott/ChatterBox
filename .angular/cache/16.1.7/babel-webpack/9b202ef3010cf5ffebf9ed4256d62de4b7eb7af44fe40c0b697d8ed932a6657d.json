{"ast":null,"code":"import { TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { of } from 'rxjs';\nimport { ChatComponent } from './chat.component';\nimport { UploadService } from '../service/upload.service';\ndescribe('ChatComponent', () => {\n  let component;\n  let fixture;\n  let uploadService;\n  let httpMock;\n  const mockResponse = {\n    attachmentId: 1,\n    message: 'File uploaded successfully'\n  };\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      declarations: [ChatComponent],\n      imports: [HttpClientTestingModule, FormsModule],\n      providers: [{\n        provide: ActivatedRoute,\n        useValue: {\n          paramMap: of({\n            get: id => '1'\n          })\n        }\n      }, UploadService]\n    });\n    fixture = TestBed.createComponent(ChatComponent);\n    component = fixture.componentInstance;\n    uploadService = TestBed.inject(UploadService);\n    httpMock = TestBed.inject(HttpTestingController);\n    fixture.detectChanges();\n  });\n  afterEach(() => {\n    httpMock.verify();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});","map":{"version":3,"names":["TestBed","HttpClientTestingModule","HttpTestingController","FormsModule","ActivatedRoute","of","ChatComponent","UploadService","describe","component","fixture","uploadService","httpMock","mockResponse","attachmentId","message","beforeEach","configureTestingModule","declarations","imports","providers","provide","useValue","paramMap","get","id","createComponent","componentInstance","inject","detectChanges","afterEach","verify","it","expect","toBeTruthy"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/chat/chat.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { of } from 'rxjs';\nimport { ChatComponent } from './chat.component';\nimport { UploadService } from '../service/upload.service';\nimport { throwError } from 'rxjs';\nimport { UploadResponse } from 'server/models/interfaces';\n\n\n\ndescribe('ChatComponent', () => {\n  let component: ChatComponent;\n  let fixture: ComponentFixture<ChatComponent>;\n  let uploadService: UploadService;\n  let httpMock: HttpTestingController;\n\n  const mockResponse: UploadResponse = {\n    attachmentId: 1, // Add a valid attachmentId\n    message: 'File uploaded successfully',\n  };\n\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      declarations: [ChatComponent],\n      imports: [HttpClientTestingModule, FormsModule],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: { paramMap: of({ get: (id: string) => '1' }) }\n        },\n        UploadService\n      ]\n    });\n\n    fixture = TestBed.createComponent(ChatComponent);\n    component = fixture.componentInstance;\n    uploadService = TestBed.inject(UploadService);\n    httpMock = TestBed.inject(HttpTestingController);\n\n    fixture.detectChanges();\n  });\n\n  afterEach(() => {\n    httpMock.verify();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],"mappings":"AAAA,SAA2BA,OAAO,QAAQ,uBAAuB;AACjE,SAASC,uBAAuB,EAAEC,qBAAqB,QAAQ,8BAA8B;AAC7F,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAASC,EAAE,QAAQ,MAAM;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,aAAa,QAAQ,2BAA2B;AAMzDC,QAAQ,CAAC,eAAe,EAAE,MAAK;EAC7B,IAAIC,SAAwB;EAC5B,IAAIC,OAAwC;EAC5C,IAAIC,aAA4B;EAChC,IAAIC,QAA+B;EAEnC,MAAMC,YAAY,GAAmB;IACnCC,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE;GACV;EAGDC,UAAU,CAAC,MAAK;IACdhB,OAAO,CAACiB,sBAAsB,CAAC;MAC7BC,YAAY,EAAE,CAACZ,aAAa,CAAC;MAC7Ba,OAAO,EAAE,CAAClB,uBAAuB,EAAEE,WAAW,CAAC;MAC/CiB,SAAS,EAAE,CACT;QACEC,OAAO,EAAEjB,cAAc;QACvBkB,QAAQ,EAAE;UAAEC,QAAQ,EAAElB,EAAE,CAAC;YAAEmB,GAAG,EAAGC,EAAU,IAAK;UAAG,CAAE;QAAC;OACvD,EACDlB,aAAa;KAEhB,CAAC;IAEFG,OAAO,GAAGV,OAAO,CAAC0B,eAAe,CAACpB,aAAa,CAAC;IAChDG,SAAS,GAAGC,OAAO,CAACiB,iBAAiB;IACrChB,aAAa,GAAGX,OAAO,CAAC4B,MAAM,CAACrB,aAAa,CAAC;IAC7CK,QAAQ,GAAGZ,OAAO,CAAC4B,MAAM,CAAC1B,qBAAqB,CAAC;IAEhDQ,OAAO,CAACmB,aAAa,EAAE;EACzB,CAAC,CAAC;EAEFC,SAAS,CAAC,MAAK;IACblB,QAAQ,CAACmB,MAAM,EAAE;EACnB,CAAC,CAAC;EAEFC,EAAE,CAAC,eAAe,EAAE,MAAK;IACvBC,MAAM,CAACxB,SAAS,CAAC,CAACyB,UAAU,EAAE;EAChC,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}