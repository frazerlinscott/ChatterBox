{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ChannelsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16)(2, \"div\", 17)(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_6_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const channel_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeUserFromChannel(channel_r2));\n    });\n    i0.ɵɵtext(7, \"Leave Channel\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const channel_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(channel_r2);\n  }\n}\nfunction ChannelsComponent_div_11_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_11_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const channel_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteChannel(channel_r5));\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChannelsComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16)(2, \"div\", 17)(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_11_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const channel_r5 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.addUserToChannel(channel_r5));\n    });\n    i0.ɵɵtext(7, \"Join Channel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, ChannelsComponent_div_11_button_8_Template, 2, 0, \"button\", 19);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const channel_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(channel_r5);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isAdmin);\n  }\n}\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport class ChannelsComponent {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n    this.isAdmin = false;\n  }\n  ngOnInit() {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n    }\n    this.loggedInUser.role = 1;\n    this.route.queryParams.subscribe(params => {\n      let currentGroupString = params['yourKey'];\n      // Check if the data is stringified object\n      try {\n        this.passedGroupObject = JSON.parse(currentGroupString);\n        console.log(this.passedGroupObject);\n      } catch (e) {\n        console.error('Error parsing the object', e);\n      }\n      this.getGroups();\n    });\n  }\n  // getchannelsKeys() {\n  //   this.currentChannelskeys = Object.keys(this.currentGroupObject.channels);\n  // }\n  addUserToChannel(targetChannel) {\n    this.getGroups();\n    console.log(targetChannel);\n    console.log(this.loggedInUser.username);\n    // Loop over each channel in this.currentGroup.channels\n    for (let channel in this.currentGroup.channels) {\n      // If the channel name matches the target and the user is not in the channel array\n      if (channel === targetChannel && !this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n        this.currentGroup.channels[channel].push(this.loggedInUser.username);\n        console.log(`Added ${this.loggedInUser.username} to ${channel}`);\n        break; // Exit the loop as we've found and processed the target channel\n      }\n    }\n\n    this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n      this.getGroups();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n  }\n  removeUserFromChannel(targetChannel) {\n    // Fetch the groups\n    this.getGroups();\n    console.log(targetChannel);\n    console.log(this.loggedInUser.username);\n    // Loop over each channel in this.currentGroup.channels\n    for (let channel in this.currentGroup.channels) {\n      // If the channel name matches the target and the user is in the channel array\n      if (channel === targetChannel && this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n        const userIndex = this.currentGroup.channels[channel].indexOf(this.loggedInUser.username);\n        if (userIndex > -1) {\n          this.currentGroup.channels[channel].splice(userIndex, 1); // Remove the user from the channel\n          console.log(`Removed ${this.loggedInUser.username} from ${channel}`);\n          break; // Exit the loop as we've found and processed the target channel\n        }\n      }\n    }\n    // Update the groups on the server\n    this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      // Refresh the User list \n      this.getGroups();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n  }\n  addChannel() {\n    $('#addChannelModal').modal('show');\n    console.log(this.currentGroup);\n    console.log(this.newChannelName);\n    if (this.newChannelName) {\n      this.currentGroup.channels[this.newChannelName] = [];\n    } else {\n      console.error('newChannelName is undefined!');\n    }\n    console.log(this.currentGroup.channels);\n    this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n      console.log(' details updated on the server.', response);\n      this.getGroups();\n    }, error => {\n      console.error('There was an error updating the  details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n    this.closeModal(\"\");\n  }\n  closeModal(modalType) {\n    $('#addChannelModal').modal('hide');\n  }\n  deleteChannel(targetChannel) {\n    console.log(this.isAdmin);\n    console.log(targetChannel);\n  }\n  getGroups() {\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions).subscribe(data => {\n      if (data) {\n        this.groups = data;\n        const matchedGroup = this.groups.find(group => group.groupID === this.passedGroupObject.groupID);\n        if (matchedGroup) {\n          this.currentGroup = matchedGroup;\n          //console.log(\"Matched\")\n          console.log(this.currentGroup);\n          if (this.currentGroup.groupAdmins.includes(this.loggedInUser.username)) {\n            this.isAdmin = true;\n            console.log(this.isAdmin);\n          } else {\n            this.isAdmin = true;\n          }\n          this.myChannels = [];\n          this.toJoinChannels = [];\n          for (let channel in this.currentGroup.channels) {\n            if (this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n              // If the loggedInUser is in the channel, add it to myChannels\n              this.myChannels.push(channel);\n            } else {\n              // Otherwise, add it to toJoinChannels\n              this.toJoinChannels.push(channel);\n            }\n          }\n          this.channelsUserCreated;\n          // this.myChannels = \n          // // = Object.keys(this.currentGroup.channels);\n          // this.toJoinChannels=\n          // this.currentGroup.channel\n        } else {\n          console.log(`No group found with groupID: ${this.passedGroupObject.groupID}`);\n        }\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n}\nChannelsComponent.ɵfac = function ChannelsComponent_Factory(t) {\n  return new (t || ChannelsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nChannelsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChannelsComponent,\n  selectors: [[\"app-channels\"]],\n  decls: 27,\n  vars: 3,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"row\"], [\"class\", \"col-12 mb-3\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"addChannelModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addGroupLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"addGroupLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"form-group\"], [\"for\", \"channelName\"], [\"type\", \"text\", \"id\", \"channelName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-2\", 3, \"click\"], [1, \"col-12\", \"mb-3\"], [1, \"card\"], [1, \"card-body\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"btn-primary\", \"mr-2\", 3, \"click\"], [\"class\", \"btn btn-primary mr-2\", 3, \"click\", 4, \"ngIf\"]],\n  template: function ChannelsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"My Groups\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ChannelsComponent_Template_button_click_3_listener() {\n        return ctx.addChannel();\n      });\n      i0.ɵɵtext(4, \"Add Channel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵtemplate(6, ChannelsComponent_div_6_Template, 8, 1, \"div\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 0)(8, \"h2\");\n      i0.ɵɵtext(9, \"Join Groups\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 2);\n      i0.ɵɵtemplate(11, ChannelsComponent_div_11_Template, 9, 2, \"div\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"div\", 5)(14, \"div\", 6)(15, \"div\", 7)(16, \"h5\", 8);\n      i0.ɵɵtext(17, \"Add Group\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ChannelsComponent_Template_button_click_18_listener() {\n        return ctx.closeModal(\"newGroup\");\n      });\n      i0.ɵɵelementStart(19, \"span\", 10);\n      i0.ɵɵtext(20, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 11)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Channel Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function ChannelsComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.newChannelName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ChannelsComponent_Template_button_click_25_listener() {\n        return ctx.addChannel();\n      });\n      i0.ɵɵtext(26, \"Add Channel\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.myChannels);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.toJoinChannels);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.newChannelName);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"body[_ngcontent-%COMP%] {\\n    font-family: 'Arial', sans-serif;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n    max-height: 80vh;\\n    overflow-y: scroll;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.card-body[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    transition: all 0.3s;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhbm5lbHMvY2hhbm5lbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSx3Q0FBd0M7QUFDNUM7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLDJCQUEyQjtJQUMzQix3Q0FBd0M7QUFDNUMiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcbiAgICBmb250LWZhbWlseTogJ0FyaWFsJywgc2Fucy1zZXJpZjtcbn1cblxuLmNvbnRhaW5lciB7XG4gICAgbWF4LWhlaWdodDogODB2aDtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbi5jYXJkIHtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG4uY2FyZC1ib2R5IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5idXR0b24ge1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xufVxuXG5idXR0b246aG92ZXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ChannelsComponent_div_6_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r4","channel_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","removeUserFromChannel","ɵɵadvance","ɵɵtextInterpolate","ChannelsComponent_div_11_button_8_Template_button_click_0_listener","_r9","channel_r5","ctx_r7","deleteChannel","ChannelsComponent_div_11_Template_button_click_6_listener","_r11","ctx_r10","addUserToChannel","ɵɵtemplate","ChannelsComponent_div_11_button_8_Template","ɵɵproperty","ctx_r1","isAdmin","httpOptions","headers","BACKEND_URL","ChannelsComponent","constructor","http","route","ngOnInit","storedUser","window","sessionStorage","getItem","loggedInUser","JSON","parse","role","queryParams","subscribe","params","currentGroupString","passedGroupObject","console","log","e","error","getGroups","targetChannel","username","channel","currentGroup","channels","includes","push","post","response","alert","userIndex","indexOf","splice","addChannel","$","modal","newChannelName","closeModal","modalType","data","groups","matchedGroup","find","group","groupID","groupAdmins","myChannels","toJoinChannels","channelsUserCreated","ɵɵdirectiveInject","i1","HttpClient","i2","ActivatedRoute","selectors","decls","vars","consts","template","ChannelsComponent_Template","rf","ctx","ChannelsComponent_Template_button_click_3_listener","ChannelsComponent_div_6_Template","ChannelsComponent_div_11_Template","ChannelsComponent_Template_button_click_18_listener","ChannelsComponent_Template_input_ngModelChange_24_listener","$event","ChannelsComponent_Template_button_click_25_listener"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/channels/channels.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/channels/channels.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-channels',\n  templateUrl: './channels.component.html',\n  styleUrls: ['./channels.component.css']\n})\nexport class ChannelsComponent implements OnInit {\n\n  passedGroupObject: any;\n\n  myChannels: any;\n  toJoinChannels: any;\n\n  currentGroup: any;\n  currentChannels: any;\n\n\n  joinChannelskeys: any;\n  myChannelskeys: any;\n\n  loggedInUser:any; \n  groups: any;\n\n  newChannelName: any;\n\n  channelsUserCreated:any; \n\n  isAdmin = false\n\n  constructor(private http: HttpClient, private route: ActivatedRoute) { \n}\n\nngOnInit(): void {\n\n  const storedUser = window.sessionStorage.getItem('current.user');\n  if (storedUser) {\n\n    this.loggedInUser = JSON.parse(storedUser);\n  }\n\n  this.loggedInUser.role = 1\n\n  this.route.queryParams.subscribe(params => {\n    let currentGroupString = params['yourKey'];\n    \n    // Check if the data is stringified object\n    try {\n        this.passedGroupObject = JSON.parse(currentGroupString);\n        console.log(this.passedGroupObject);\n    } catch (e) {\n        console.error('Error parsing the object', e);\n    }\n\n    this.getGroups()\n\n });\n}\n\n// getchannelsKeys() {\n//   this.currentChannelskeys = Object.keys(this.currentGroupObject.channels);\n// }\n\naddUserToChannel(targetChannel: any) {\n  this.getGroups();\n  console.log(targetChannel);\n  console.log(this.loggedInUser.username);\n\n  // Loop over each channel in this.currentGroup.channels\n  for (let channel in this.currentGroup.channels) {\n      // If the channel name matches the target and the user is not in the channel array\n      if (channel === targetChannel && !this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n          this.currentGroup.channels[channel].push(this.loggedInUser.username);\n          console.log(`Added ${this.loggedInUser.username} to ${channel}`);\n          break; // Exit the loop as we've found and processed the target channel\n      }\n  }\n  \n  this.http.post(BACKEND_URL+\"/update-groups\", this.currentGroup).subscribe(\n    response => {\n        console.log('User details updated on the server.', response);\n\n        //refesh User list \n        this.getGroups();\n    },\n    error => {\n        console.error('There was an error updating the user details on the server.', error);\n        alert('Error updating profile. Please try again.');\n    }\n  )}\n\n  removeUserFromChannel(targetChannel: any) {\n    // Fetch the groups\n    this.getGroups();\n    console.log(targetChannel);\n    console.log(this.loggedInUser.username);\n\n    // Loop over each channel in this.currentGroup.channels\n    for (let channel in this.currentGroup.channels) {\n        // If the channel name matches the target and the user is in the channel array\n        if (channel === targetChannel && this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n            const userIndex = this.currentGroup.channels[channel].indexOf(this.loggedInUser.username);\n            \n            if (userIndex > -1) {\n                this.currentGroup.channels[channel].splice(userIndex, 1); // Remove the user from the channel\n                console.log(`Removed ${this.loggedInUser.username} from ${channel}`);\n                break; // Exit the loop as we've found and processed the target channel\n            }\n        }\n    }\n  \n    // Update the groups on the server\n    this.http.post(BACKEND_URL+\"/update-groups\", this.currentGroup).subscribe(\n        response => {\n            console.log('User details updated on the server.', response);\n\n            // Refresh the User list \n            this.getGroups();\n        },\n        error => {\n            console.error('There was an error updating the user details on the server.', error);\n            alert('Error updating profile. Please try again.');\n        }\n    );\n}\n\naddChannel(){\n  \n  $('#addChannelModal').modal('show');\n  console.log(this.currentGroup)\n  console.log(this.newChannelName)\n\n\n  if (this.newChannelName) {\n    this.currentGroup.channels[this.newChannelName] = [];\n  } else {\n    console.error('newChannelName is undefined!');\n  }\n\n  console.log(this.currentGroup.channels)\n  \n\n\n  this.http.post(BACKEND_URL+\"/update-groups\", this.currentGroup).subscribe(\n    response => {\n        console.log(' details updated on the server.', response);\n\n        this.getGroups();\n        \n    },\n    error => {\n        console.error('There was an error updating the  details on the server.', error);\n        alert('Error updating profile. Please try again.');\n    }\n  )\n\n\n  this.closeModal(\"\");\n\n}\n\ncloseModal(modalType: string | undefined){\n    $('#addChannelModal').modal('hide');\n}\n\ndeleteChannel(targetChannel: any){\n  console.log(this.isAdmin)\n  console.log(targetChannel)\n}\n\n\n\n\ngetGroups(){\n  this.http.post(BACKEND_URL + \"/all-groups\", httpOptions)\n  .subscribe(\n      (data: any) => {\n          if (data) {\n            this.groups = data\n            const matchedGroup = this.groups.find((group: { groupID: any; }) => group.groupID === this.passedGroupObject.groupID);\n            if (matchedGroup) {\n                this.currentGroup = matchedGroup;\n                //console.log(\"Matched\")\n                console.log(this.currentGroup)\n\n                if(this.currentGroup.groupAdmins.includes(this.loggedInUser.username)){\n                  this.isAdmin = true\n                  console.log(this.isAdmin)\n                }else{\n                  this.isAdmin = true\n                }\n\n\n\n                this.myChannels = [];\n                this.toJoinChannels = [];\n\n                for (let channel in this.currentGroup.channels) {\n                  if (this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n                      // If the loggedInUser is in the channel, add it to myChannels\n                      this.myChannels.push(channel);\n                  } else {\n                      // Otherwise, add it to toJoinChannels\n                      this.toJoinChannels.push(channel);\n                  }\n              }\n\n              this.channelsUserCreated\n\n\n                // this.myChannels = \n\n                // // = Object.keys(this.currentGroup.channels);\n                // this.toJoinChannels=\n\n                // this.currentGroup.channel\n\n            } else {\n                console.log(`No group found with groupID: ${this.passedGroupObject.groupID}`);\n            }\n\n\n\n\n\n\n          } else {\n              alert(\"no Data Soz\");\n          }\n      },\n      error => {console.error('There was an error:', error);}\n  );\n}\n\n}\n","<div class=\"container mt-4\">\n    <h2>My Groups</h2>\n    <button class=\"btn btn-secondary\" (click)=\"addChannel()\">Add Channel</button>\n    <!-- <button class=\"btn btn-secondary\" (click)=\"addChannel()\">Delete Channels</button> -->\n    <div class=\"row\">\n        <div *ngFor=\"let channel of myChannels\" class=\"col-12 mb-3\">\n            <div class=\"card\">\n                <div class=\"card-body d-flex justify-content-between align-items-center\">\n                    <span>{{channel}}</span>\n                    <div>\n                        <!-- <button class=\"btn btn-primary mr-2\" (click)=\"addUserToChannel(channel)\">Join Channel</button> -->\n                        <button class=\"btn btn-secondary\" (click)=\"removeUserFromChannel(channel)\">Leave Channel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container mt-4\">\n    <h2>Join Groups</h2>\n    <div class=\"row\">\n        <div *ngFor=\"let channel of toJoinChannels\" class=\"col-12 mb-3\">\n            <div class=\"card\">\n                <div class=\"card-body d-flex justify-content-between align-items-center\">\n                    <span>{{channel}}</span>\n                    <div>\n                        <button class=\"btn btn-primary mr-2\" (click)=\"addUserToChannel(channel)\">Join Channel</button>\n                        <button  *ngIf= \"isAdmin\" class=\"btn btn-primary mr-2\" (click)=\"deleteChannel(channel)\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"modal fade\" id=\"addChannelModal\" tabindex=\"-1\" aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"addGroupLabel\">Add Group</h5>\n          <button (click)=\"closeModal('newGroup')\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n          <div class=\"form-group\">\n            <label for=\"channelName\">Channel Name:</label>\n            <input type=\"text\" class=\"form-control\" id=\"channelName\" [(ngModel)]=\"newChannelName\">\n            <button type=\"button\" class=\"btn btn-primary mt-2\" (click)=\"addChannel()\">Add Channel</button>\n          </div>\n        </div>\n      </div>\n    </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}