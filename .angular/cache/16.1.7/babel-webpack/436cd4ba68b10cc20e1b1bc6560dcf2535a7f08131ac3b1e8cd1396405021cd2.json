{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/service/socket.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ChatComponent_li_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 16);\n    i0.ɵɵelement(4, \"img\", 17);\n    i0.ɵɵelementStart(5, \"div\")(6, \"small\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const msg_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", msg_r1.message, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r2.URL + msg_r1.profilePic, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(msg_r1.username);\n  }\n}\nfunction ChatComponent_li_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19);\n    i0.ɵɵelement(2, \"img\", 17);\n    i0.ɵɵelementStart(3, \"div\")(4, \"small\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const msg_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r3.URL + msg_r1.profilePic, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(msg_r1.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", msg_r1.message, \" \");\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"right\": a0,\n    \"left\": a1\n  };\n};\nfunction ChatComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵtemplate(1, ChatComponent_li_6_div_1_Template, 8, 3, \"div\", 12);\n    i0.ɵɵtemplate(2, ChatComponent_li_6_div_2_Template, 8, 3, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, msg_r1.username === ctx_r0.loggedInUser.username, msg_r1.username !== ctx_r0.loggedInUser.username));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r1.username === ctx_r0.loggedInUser.username);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r1.username !== ctx_r0.loggedInUser.username);\n  }\n}\nconst BACKEND_URL = \"http://localhost:3000\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ChatComponent {\n  constructor(http, socketService, router, route) {\n    this.http = http;\n    this.socketService = socketService;\n    this.router = router;\n    this.route = route;\n    this.messagecontent = \"\";\n    this.currentChannel = null;\n    this.messages = [];\n  }\n  ngOnInit() {\n    this.socketService.initSocket();\n    this.URL = BACKEND_URL;\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      //console.log(this.loggedInUser.username)\n    }\n\n    this.route.queryParams.subscribe(params => {\n      this.channel = params['channel'];\n      this.currentGroupString = params['currentGroup'];\n      this.initIoConnection();\n      this.socketService.join(this.channel);\n      this.fetchPreviousMessages(this.currentGroupString, this.channel);\n      //this.messages = []; // Clear the previous messages when changing the channel.\n    });\n  }\n\n  fetchPreviousMessages(groupName, channelName) {\n    const url = `${BACKEND_URL}/messages?groupName=${groupName}&channelName=${channelName}`;\n    this.http.get(url).subscribe(data => {\n      this.messages = data;\n      console.log(this.messages);\n    }, error => {\n      console.error(\"Failed to fetch previous messages\", error);\n    });\n  }\n  initIoConnection() {\n    console.log('initIoConnection called');\n    if (this.ioConnection) {\n      this.ioConnection.unsubscribe();\n    }\n    this.ioConnection = this.socketService.getMessage().subscribe(data => {\n      console.log('Received:', data);\n      if (data.channel === this.channel) {\n        this.messages.push(data);\n        console.log(this.messages);\n      }\n    });\n  }\n  sendMessage() {\n    if (this.messagecontent) {\n      this.socketService.send(this.messagecontent, this.channel, this.currentGroupString);\n      this.messagecontent = \"\";\n    }\n  }\n}\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.SocketService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"app-chat\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"list-group\", \"chat-messages\"], [\"class\", \"list-group-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-footer\"], [1, \"form-inline\"], [1, \"form-group\", \"flex-grow-1\", \"mr-2\"], [\"type\", \"text\", \"name\", \"messagecontent\", \"placeholder\", \"Type a message\", 1, \"form-control\", \"w-100\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"list-group-item\", 3, \"ngClass\"], [\"class\", \"d-flex align-items-center justify-content-end\", 4, \"ngIf\"], [\"class\", \"d-flex align-items-center\", 4, \"ngIf\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-end\"], [1, \"text-right\"], [1, \"ml-2\"], [\"alt\", \"Profile Image\", 1, \"img-fluid\", \"rounded-circle\", 2, \"width\", \"40px\", \"height\", \"40px\", 3, \"src\"], [1, \"d-flex\", \"align-items-center\"], [1, \"mr-3\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtext(3, \" Chat Room \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"ul\", 4);\n      i0.ɵɵtemplate(6, ChatComponent_li_6_Template, 3, 6, \"li\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7)(9, \"div\", 8)(10, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.messagecontent = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_11_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵtext(12, \"Send\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.messagecontent);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  styles: [\".right[_ngcontent-%COMP%] {\\n    text-align: right;\\n    color: bla;\\n  }\\n  \\n  .left[_ngcontent-%COMP%] {\\n    text-align: left;\\n    color: green;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdC9jaGF0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsVUFBVTtFQUNaOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLFlBQVk7RUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5yaWdodCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgY29sb3I6IGJsYTtcbiAgfVxuICBcbiAgLmxlZnQge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgY29sb3I6IGdyZWVuO1xuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","msg_r1","message","ɵɵproperty","ctx_r2","URL","profilePic","ɵɵsanitizeUrl","ɵɵtextInterpolate","username","ctx_r3","ɵɵtemplate","ChatComponent_li_6_div_1_Template","ChatComponent_li_6_div_2_Template","ɵɵpureFunction2","_c0","ctx_r0","loggedInUser","BACKEND_URL","httpOptions","headers","ChatComponent","constructor","http","socketService","router","route","messagecontent","currentChannel","messages","ngOnInit","initSocket","storedUser","window","sessionStorage","getItem","JSON","parse","queryParams","subscribe","params","channel","currentGroupString","initIoConnection","join","fetchPreviousMessages","groupName","channelName","url","get","data","console","log","error","ioConnection","unsubscribe","getMessage","push","sendMessage","send","ɵɵdirectiveInject","i1","HttpClient","i2","SocketService","i3","Router","ActivatedRoute","selectors","decls","vars","consts","template","ChatComponent_Template","rf","ctx","ChatComponent_li_6_Template","ɵɵlistener","ChatComponent_Template_input_ngModelChange_10_listener","$event","ChatComponent_Template_button_click_11_listener"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/chat/chat.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/chat/chat.component.html"],"sourcesContent":["import { Component, OnInit, } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {SocketService} from 'src/app/service/socket.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport { Message } from 'server/models/messageModel';\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\n\n\nexport class ChatComponent implements OnInit {\n\n  messagecontent: string=\"\";\n  //messages: string[] = [];\n  ioConnection:any;\n  channel: any;\n  currentChannel: string | null = null;\n  loggedInUser : any;\n  messages: Message[] = [];\n\n  profilePicPath: any;\n\n \n  group: any;\n  currentGroupString:any\n  URL: any;\n\n  constructor (private http: HttpClient, private socketService: SocketService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.socketService.initSocket();\n\n    this.URL = BACKEND_URL\n\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n\n      this.loggedInUser = JSON.parse(storedUser);\n      //console.log(this.loggedInUser.username)\n    }\n    this.route.queryParams.subscribe(params => {\n      this.channel = params['channel'];\n      this.currentGroupString = params['currentGroup'];\n\n        this.initIoConnection();\n\n        this.socketService.join(this.channel);\n\n        this.fetchPreviousMessages(this.currentGroupString, this.channel);\n\n        //this.messages = []; // Clear the previous messages when changing the channel.\n    });\n}\n\nfetchPreviousMessages(groupName: string, channelName: string): void {\n  const url = `${BACKEND_URL}/messages?groupName=${groupName}&channelName=${channelName}`;\n  this.http.get<Message[]>(url).subscribe(\n    (data: Message[]) => {\n\n      this.messages = data;\n\n      console.log(this.messages)\n    },\n    error => {\n      console.error(\"Failed to fetch previous messages\", error);\n    }\n  );\n}\n\n\ninitIoConnection() {\n  console.log('initIoConnection called');\n\n  if (this.ioConnection) {\n    this.ioConnection.unsubscribe();\n  }\n\n  this.ioConnection = this.socketService.getMessage().subscribe((data: any) => {\n      console.log('Received:', data);\n\n      if (data.channel === this.channel) {\n          this.messages.push(data as Message);\n          console.log(this.messages);\n      }\n  });\n}\n\nsendMessage() {\n  if (this.messagecontent) {\n    this.socketService.send(this.messagecontent, this.channel, this.currentGroupString);\n    this.messagecontent = \"\";\n  }\n}\n}","<!-- <div class=\"container mt-5\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            Chat Room\n        </div>\n        <div class=\"card-body\">\n            <ul class=\"list-group chat-messages\">\n\n                <img class=\"img-fluid rounded-circle mb-4\" alt=\"Profile Image\" style=\"width: 120px; height: 120px;\">\n                \n                <li class=\"list-group-item\" \n                \n                    *ngFor=\"let msg of messages\"\n                    [ngClass]=\"{'right': msg.username === loggedInUser.username, 'left': msg.username !== loggedInUser.username}\">\n                    {{ msg.username }} : {{ msg.message }}\n                </li>\n            </ul>\n        </div>\n        <div class=\"card-footer\">\n            <form class=\"form-inline\">\n                <div class=\"form-group flex-grow-1 mr-2\">\n                    <input type=\"text\" class=\"form-control w-100\" [(ngModel)]=\"messagecontent\" name=\"messagecontent\" placeholder=\"Type a message\">\n                </div>\n                <button class=\"btn btn-primary\" (click)=\"sendMessage()\" type=\"button\">Send</button>\n            </form>\n        </div>\n    </div>\n</div> -->\n\n\n\n<div class=\"container mt-5\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            Chat Room\n        </div>\n        <div class=\"card-body\">\n            <ul class=\"list-group chat-messages\">\n                <li class=\"list-group-item\" \n                    *ngFor=\"let msg of messages\"\n                    [ngClass]=\"{'right': msg.username === loggedInUser.username, 'left': msg.username !== loggedInUser.username}\">\n\n                    <!-- Message from loggedInUser -->\n                    <div *ngIf=\"msg.username === loggedInUser.username\" class=\"d-flex align-items-center justify-content-end\">\n                        <div class=\"text-right\">\n                            {{ msg.message }}\n                        </div>\n                        <div class=\"ml-2\">\n                            <img [src]=\"URL + msg.profilePic\" \n                                 alt=\"Profile Image\" \n                                 class=\"img-fluid rounded-circle\" \n                                 style=\"width: 40px; height: 40px;\">\n                            <div><small>{{ msg.username }}</small></div>\n                        </div>\n                    </div>\n\n                    <!-- Message from other users -->\n                    <div *ngIf=\"msg.username !== loggedInUser.username\" class=\"d-flex align-items-center\">\n                        <div class=\"mr-3\">\n                            <img [src]=\"URL + msg.profilePic\" \n                                 alt=\"Profile Image\" \n                                 class=\"img-fluid rounded-circle\" \n                                 style=\"width: 40px; height: 40px;\">\n                            <div><small>{{ msg.username }}</small></div>\n                        </div>\n                        <div>\n                            {{ msg.message }}\n                        </div>\n                    </div>\n\n                </li>\n            </ul>\n        </div>\n        <div class=\"card-footer\">\n            <form class=\"form-inline\">\n                <div class=\"form-group flex-grow-1 mr-2\">\n                    <input type=\"text\" class=\"form-control w-100\" [(ngModel)]=\"messagecontent\" name=\"messagecontent\" placeholder=\"Type a message\">\n                </div>\n                <button class=\"btn btn-primary\" (click)=\"sendMessage()\" type=\"button\">Send</button>\n            </form>\n        </div>\n    </div>\n</div>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}