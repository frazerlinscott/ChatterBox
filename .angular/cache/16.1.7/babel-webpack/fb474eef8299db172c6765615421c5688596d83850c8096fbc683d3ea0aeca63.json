{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { User } from 'server/routes/userModel';\nconst BACKEND_URL = \"http://localhost:3000\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let CreateUserComponent = class CreateUserComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.user = new User('', '', 0, '', '', '', [1], [1], true);\n    this.allUsernames = [];\n    this.isUniqueUsername = true;\n  }\n  ngOnInit() {\n    this.http.get(BACKEND_URL + \"/usernames\").subscribe(usernames => {\n      this.allUsernames = usernames;\n      console.log(this.allUsernames);\n    });\n  }\n  onUsernameInput() {\n    // Check if username is unique while the user is typing\n    this.isUniqueUsername = !this.allUsernames.includes(this.user.username);\n  }\n  onCreate() {\n    if (this.user.password !== this.user.pwdconfirm) {\n      alert('Passwords do not match!'); // Notify the user\n      return;\n    }\n    const userToSend = {\n      ...this.user\n    };\n    this.http.post(BACKEND_URL + \"/create-user\", userToSend, httpOptions).subscribe(response => {\n      if (response && response.success) {\n        this.router.navigateByUrl('login');\n      } else {\n        alert('Failed to create user.');\n      }\n    }, error => {\n      console.error('There was an error during user creation:', error);\n      if (error && error.error && error.error.message) {\n        console.error('Server response:', error.error.message);\n      }\n    });\n  }\n};\nCreateUserComponent = __decorate([Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})], CreateUserComponent);","map":{"version":3,"names":["Component","HttpHeaders","User","BACKEND_URL","httpOptions","headers","CreateUserComponent","constructor","router","http","user","allUsernames","isUniqueUsername","ngOnInit","get","subscribe","usernames","console","log","onUsernameInput","includes","username","onCreate","password","pwdconfirm","alert","userToSend","post","response","success","navigateByUrl","error","message","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/create-user/create-user.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from 'server/routes/userModel';\n\nconst BACKEND_URL = \"http://localhost:3000\";\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n\n  user: User = new User('', '', 0, '', '', '', [1], [1], true);\n\n  allUsernames: string[] = [];\n  isUniqueUsername: boolean = true;\n\n  constructor(private router: Router, private http: HttpClient) {}\n\n  ngOnInit(): void {\n\n    this.http.get<string[]>(BACKEND_URL + \"/usernames\").subscribe(usernames => {\n      this.allUsernames = usernames;\n      console.log(this.allUsernames);\n    });\n  }\n\n  onUsernameInput() {\n    // Check if username is unique while the user is typing\n    this.isUniqueUsername = !this.allUsernames.includes(this.user.username);\n  }\n\n  onCreate() {\n    if (this.user.password !== this.user.pwdconfirm) {\n      alert('Passwords do not match!');  // Notify the user\n      return;\n    }\n\n    const userToSend = { ...this.user };\n\n    this.http.post(BACKEND_URL + \"/create-user\", userToSend, httpOptions).subscribe(\n      (response: any) => {\n        if (response && response.success) {\n          this.router.navigateByUrl('login');\n        } else {\n          alert('Failed to create user.');\n        }\n      },\n      error => {\n        console.error('There was an error during user creation:', error);\n      if (error && error.error && error.error.message) {\n        console.error('Server response:', error.error.message);\n      }\n    }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAqBC,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,IAAI,QAAQ,yBAAyB;AAE9C,MAAMC,WAAW,GAAG,uBAAuB;AAC3C,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIJ,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAOM,WAAMK,mBAAmB,GAAzB,MAAMA,mBAAmB;EAO9BC,YAAoBC,MAAc,EAAUC,IAAgB;IAAxC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IALhD,KAAAC,IAAI,GAAS,IAAIR,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;IAE5D,KAAAS,YAAY,GAAa,EAAE;IAC3B,KAAAC,gBAAgB,GAAY,IAAI;EAE+B;EAE/DC,QAAQA,CAAA;IAEN,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAWX,WAAW,GAAG,YAAY,CAAC,CAACY,SAAS,CAACC,SAAS,IAAG;MACxE,IAAI,CAACL,YAAY,GAAGK,SAAS;MAC7BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,YAAY,CAAC;IAChC,CAAC,CAAC;EACJ;EAEAQ,eAAeA,CAAA;IACb;IACA,IAAI,CAACP,gBAAgB,GAAG,CAAC,IAAI,CAACD,YAAY,CAACS,QAAQ,CAAC,IAAI,CAACV,IAAI,CAACW,QAAQ,CAAC;EACzE;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACZ,IAAI,CAACa,QAAQ,KAAK,IAAI,CAACb,IAAI,CAACc,UAAU,EAAE;MAC/CC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAE;MACnC;;IAGF,MAAMC,UAAU,GAAG;MAAE,GAAG,IAAI,CAAChB;IAAI,CAAE;IAEnC,IAAI,CAACD,IAAI,CAACkB,IAAI,CAACxB,WAAW,GAAG,cAAc,EAAEuB,UAAU,EAAEtB,WAAW,CAAC,CAACW,SAAS,CAC5Ea,QAAa,IAAI;MAChB,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,OAAO,EAAE;QAChC,IAAI,CAACrB,MAAM,CAACsB,aAAa,CAAC,OAAO,CAAC;OACnC,MAAM;QACLL,KAAK,CAAC,wBAAwB,CAAC;;IAEnC,CAAC,EACDM,KAAK,IAAG;MACNd,OAAO,CAACc,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE,IAAIA,KAAK,IAAIA,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACC,OAAO,EAAE;QAC/Cf,OAAO,CAACc,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;;IAE1D,CAAC,CACA;EACH;CACD;AA9CY1B,mBAAmB,GAAA2B,UAAA,EAL/BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACW9B,mBAAmB,CA8C/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}