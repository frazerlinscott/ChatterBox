{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { User } from 'server/routes/userModel';\nconst BACKEND_URL = \"http://localhost:3000\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let CreateUserComponent = class CreateUserComponent {\n  constructor(router, http, uploadService) {\n    this.router = router;\n    this.http = http;\n    this.uploadService = uploadService;\n    this.user = new User('', '', 0, '', '', '', 1, [], true, '');\n    this.allUsernames = [];\n    this.isUniqueUsername = true;\n    this.isUniquePassword = true;\n    this.isUniqueEmail = true;\n    this.selectedFile = null;\n  }\n  ngOnInit() {\n    this.isUniqueEmail = true;\n    this.http.get(BACKEND_URL + \"/usernames\").subscribe(usernames => {\n      this.allUsernames = usernames;\n      console.log(this.allUsernames);\n    });\n  }\n  onUsernameInput() {\n    // Check if username is unique while the user is typing\n    this.isUniqueUsername = !this.allUsernames.includes(this.user.username);\n  }\n  onCreate() {\n    if (this.user.password !== this.user.pwdconfirm) {\n      //alert('Passwords do not match!');  // Notify the user\n      this.isUniquePassword = false;\n      return;\n    }\n    const userToSend = {\n      ...this.user\n    };\n    this.http.post(BACKEND_URL + \"/addUser\", userToSend, httpOptions).subscribe(response => {\n      if (response && response.success) {\n        this.onUpload(userToSend.username);\n        this.router.navigateByUrl('login');\n      } else {\n        alert(\"Email already exists!\");\n      }\n    }, error => {\n      console.error('There was an error during user creation:', error);\n      if (error && error.error && error.error.message) {\n        console.error('Server response:', error.error.message);\n        //this.isUniqueEmail=false\n      }\n    });\n  }\n\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  onUpload(username) {\n    const formData = new FormData();\n    if (this.selectedFile) {\n      console.log(username);\n      formData.append('photo', this.selectedFile);\n      formData.append('username', username);\n      console.log(\"username sent\");\n      //   this.uploadService.testEndpoint().subscribe(response => {\n      //     console.log('Response from test endpoint:', response);\n      // }, error => {\n      //     console.error('Error hitting test endpoint:', error);\n      // });\n      this.uploadService.uploadFile(formData).subscribe(response => {\n        console.log('Upload successful', response);\n        // Perhaps do something here after successful upload\n      }, error => {\n        console.error('Upload error', error);\n        // Handle upload errors\n      });\n    }\n  }\n};\n\nCreateUserComponent = __decorate([Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})], CreateUserComponent);","map":{"version":3,"names":["Component","HttpHeaders","User","BACKEND_URL","httpOptions","headers","CreateUserComponent","constructor","router","http","uploadService","user","allUsernames","isUniqueUsername","isUniquePassword","isUniqueEmail","selectedFile","ngOnInit","get","subscribe","usernames","console","log","onUsernameInput","includes","username","onCreate","password","pwdconfirm","userToSend","post","response","success","onUpload","navigateByUrl","alert","error","message","onFileSelected","event","target","files","formData","FormData","append","uploadFile","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/create-user/create-user.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from 'server/routes/userModel';\n\n\nconst BACKEND_URL = \"http://localhost:3000\";\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\n\nexport class CreateUserComponent implements OnInit {\n\n  user: User = new User('', '', 0, '', '', '', 1, [], true, '');\n\n  allUsernames: string[] = [];\n  isUniqueUsername: boolean = true;\n  isUniquePassword: boolean = true;\n  isUniqueEmail:boolean = true;\n  selectedFile: File | null = null;\n\n\n  constructor(private router: Router, private http: HttpClient, private uploadService: UploadService) {}\n\n  ngOnInit(): void {\n    this.isUniqueEmail=true; \n    this.http.get<string[]>(BACKEND_URL + \"/usernames\").subscribe(usernames => {\n      this.allUsernames = usernames;\n      console.log(this.allUsernames);\n    });\n  }\n\n  onUsernameInput() {\n    // Check if username is unique while the user is typing\n    this.isUniqueUsername = !this.allUsernames.includes(this.user.username);\n  }\n\n  onCreate() {\n    if (this.user.password !== this.user.pwdconfirm) {\n      //alert('Passwords do not match!');  // Notify the user\n      this.isUniquePassword=false; \n      return;\n    }\n\n    const userToSend = { ...this.user };\n\n    this.http.post(BACKEND_URL + \"/addUser\", userToSend, httpOptions).subscribe(\n      (response: any) => {\n        if (response && response.success) {\n          this.onUpload(userToSend.username)\n          this.router.navigateByUrl('login');\n        } else {\n          alert(\"Email already exists!\");\n        }\n      },\n      error => {\n        console.error('There was an error during user creation:', error);\n      if (error && error.error && error.error.message) {\n        console.error('Server response:', error.error.message);\n        //this.isUniqueEmail=false\n      }\n    }\n    );\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = <File>event.target.files[0];\n  }\n\n  onUpload(username : string) {\n    const formData = new FormData();\n\n    if (this.selectedFile) {\n      console.log(username)\n      formData.append('photo', this.selectedFile);\n      formData.append('username', username); \n      console.log(\"username sent\")\n\n    //   this.uploadService.testEndpoint().subscribe(response => {\n    //     console.log('Response from test endpoint:', response);\n    // }, error => {\n    //     console.error('Error hitting test endpoint:', error);\n    // });\n\n\n      this.uploadService.uploadFile(formData).subscribe(response => {\n        console.log('Upload successful', response);\n        // Perhaps do something here after successful upload\n      }, error => {\n        console.error('Upload error', error);\n        // Handle upload errors\n      });\n\n    }\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}