{"ast":null,"code":"//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Group } from 'server/routes/groupModel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction GroupsComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onAddGroup());\n    });\n    i0.ɵɵtext(1, \" Add Group-AdminSuper \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GroupsComponent_div_6_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_div_6_button_6_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const group_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      ctx_r9.requestButton(group_r7);\n      return i0.ɵɵresetView($event.stopPropagation());\n    });\n    i0.ɵɵtext(1, \"Request\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GroupsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_div_6_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const group_r7 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onGroupCardClick(group_r7));\n    });\n    i0.ɵɵelementStart(2, \"div\", 30)(3, \"h5\", 31);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 32);\n    i0.ɵɵtemplate(6, GroupsComponent_div_6_button_6_Template, 2, 0, \"button\", 33);\n    i0.ɵɵelementStart(7, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_div_6_Template_button_click_7_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const group_r7 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      ctx_r14.onButton2Click(group_r7);\n      return i0.ɵɵresetView($event.stopPropagation());\n    });\n    i0.ɵɵtext(8, \"Button 2\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const group_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(group_r7.groupName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isUser && !ctx_r1.isAdmin);\n  }\n}\nfunction GroupsComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1, \" Group Name Already exists. Please choose a new group name. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GroupsComponent_ul_28_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const channel_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(channel_r16);\n  }\n}\nfunction GroupsComponent_ul_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, GroupsComponent_ul_28_li_1_Template, 2, 1, \"li\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.groupChannels);\n  }\n}\nfunction GroupsComponent_li_43_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_li_43_li_3_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const userRequest_r19 = restoredCtx.$implicit;\n      const group_r17 = i0.ɵɵnextContext().$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.approveRequest(group_r17, userRequest_r19));\n    });\n    i0.ɵɵtext(3, \"Approve\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const userRequest_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", userRequest_r19, \" \");\n  }\n}\nfunction GroupsComponent_li_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"ul\", 39);\n    i0.ɵɵtemplate(3, GroupsComponent_li_43_li_3_Template, 4, 1, \"li\", 40);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", group_r17.groupName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", group_r17.userRequests);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-unique\": a0,\n    \"not-unique\": a1\n  };\n};\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport class GroupsComponent {\n  constructor(http, cdr) {\n    this.http = http;\n    this.cdr = cdr;\n    this.groupChannels = [];\n    this.isUniqueGroup = true;\n    this.isUser = true;\n    this.isAdmin = true;\n    this.group = new Group(0, \" \", \" \", [\"\"], [\"\"], [\"\"], [\"\"], true);\n  }\n  ngOnInit() {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      // console.log(this.loggedInUser.role)\n      // console.log(this.loggedInUser)\n      this.loggedInUser.role = 2;\n      if (this.loggedInUser.role === 1) {\n        this.isUser = true;\n        this.isAdmin = false;\n      } else {\n        this.isUser = false;\n        this.isAdmin = true;\n      }\n      // console.log(\"user:\" + this.isUser)\n      // console.log(\"admin:\" + this.isAdmin)\n    }\n\n    this.getUsers();\n    this.getGroups();\n    this.http.get(BACKEND_URL + \"/groups\").subscribe(groupsNames => {\n      this.allGroupNames = groupsNames;\n      console.log(this.allGroupNames);\n    });\n  }\n  onGroupCardClick(group) {\n    this.selectedGroup = group;\n    console.log(\"card clicked\");\n    console.log(group);\n  }\n  requestButton(group) {\n    console.log(this.loggedInUser.username);\n    group.userRequests.push(this.loggedInUser.username);\n    console.log(group);\n    this.http.post(BACKEND_URL + \"/update-groups\", group).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n      this.getGroups();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n  }\n  onButton2Click(group) {\n    console.log(\"Button 2 clicked\");\n  }\n  onAddGroup() {\n    console.log(\"Add Group button clicked\");\n    $('#addGroupModal').modal('show');\n  }\n  onGroupInput() {\n    this.isUniqueGroup = !this.allGroupNames.includes(this.newGroupName);\n    console.log(this.isUniqueGroup);\n  }\n  addChannel() {\n    if (this.newChannelName && !this.groupChannels.includes(this.newChannelName)) {\n      this.groupChannels.push(this.newChannelName);\n      this.newChannelName = '';\n    }\n  }\n  saveGroup() {\n    //console.log(this.newGroupName)\n    // console.log(this.groupChannels)\n    this.GetNewGroupID();\n    //console.log(this.newGroupID)\n    if (this.isUniqueGroup === true) {\n      this.group.groupID = this.newGroupID;\n      this.group.groupName = this.newGroupName;\n      this.group.createdBy = this.loggedInUser.username;\n      this.group.groupAdmins = [this.loggedInUser.username];\n      this.group.userRequests = [\"\"];\n      this.group.members = [\"\"];\n      this.group.channels = this.groupChannels;\n      this.group.valid = true;\n      //console.log(this.group)\n      this.http.post(BACKEND_URL + \"/update-groups\", this.group).subscribe(response => {\n        console.log('User details updated on the server.', response);\n        //refesh User list \n        this.getGroups();\n      }, error => {\n        console.error('There was an error updating the user details on the server.', error);\n        alert('Error updating profile. Please try again.');\n      });\n      this.closeModal(\"newGroup\");\n    } else {\n      alert(\"Group already exists\");\n    }\n  }\n  closeModal(modalType) {\n    if (modalType == \"newGroup\") {\n      this.group = {\n        groupID: 0,\n        groupName: \"\",\n        createdBy: this.loggedInUser.username,\n        groupAdmins: [\"\"],\n        userRequests: [\"\"],\n        members: [\"\"],\n        channels: [\"\"],\n        valid: true\n      };\n      this.newGroupName = '';\n      this.groupChannels = [];\n      console.log(this.group);\n      $('#addGroupModal').modal('hide');\n    }\n    if (modalType == \"requestApproval\") {\n      $('#approveRequests').modal('hide');\n    }\n  }\n  getUsers() {\n    this.http.post(BACKEND_URL + \"/all-users\", httpOptions).subscribe(data => {\n      if (data) {\n        this.users = data;\n        //console.log(this.users)\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  getGroups() {\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions).subscribe(data => {\n      if (data) {\n        this.groups = data;\n        //console.log(this.groups)\n        //console.log(typeof(this.groups))\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  updateGroup() {}\n  GetNewGroupID() {\n    if (this.groups && this.groups.length > 0) {\n      this.newGroupID = this.groups[this.groups.length - 1].groupID + 1;\n    } else {\n      this.newGroupID = 1;\n    }\n  }\n  showRequests() {\n    this.getGroups(); // Assuming this method populates the 'this.groups' array\n    $('#approveRequests').modal('show');\n    this.groupsNeedApproval = this.groups.filter(group => group.userRequests && group.userRequests.length > 0);\n    console.log(this.groupsNeedApproval);\n  }\n  approveRequest(group, userRequest) {\n    console.log(group);\n    console.log(userRequest);\n  }\n}\nGroupsComponent.ɵfac = function GroupsComponent_Factory(t) {\n  return new (t || GroupsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nGroupsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GroupsComponent,\n  selectors: [[\"app-groups\"]],\n  decls: 44,\n  vars: 11,\n  consts: [[1, \"container\", \"my-5\"], [1, \"mb-4\"], [\"class\", \"btn btn-success btn-block\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-success\", \"btn-block\", 3, \"click\"], [1, \"row\", \"justify-content-center\"], [\"class\", \"col-md-3 mx-2 my-2\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"addGroupModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addGroupLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"addGroupLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\"], [\"for\", \"groupName\"], [\"type\", \"text\", \"id\", \"groupName\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"input\", \"ngModelChange\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [\"for\", \"channelName\"], [\"type\", \"text\", \"id\", \"channelName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-2\", 3, \"click\"], [4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"approveRequests\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addGroupLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"id\", \"approveRequestsLabel\", 1, \"modal-title\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\", \"mx-2\", \"my-2\"], [1, \"card\", \"square-card\", 3, \"click\"], [1, \"card-body\", \"d-flex\", \"flex-column\"], [1, \"card-title\", \"mt-auto\"], [1, \"mt-auto\"], [\"class\", \"btn btn-sm btn-primary\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-secondary\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"invalid-feedback\", \"d-block\"], [4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [1, \"list-group\", \"mt-2\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"click\"]],\n  template: function GroupsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, GroupsComponent_button_2_Template, 2, 0, \"button\", 2);\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_3_listener() {\n        return ctx.showRequests();\n      });\n      i0.ɵɵtext(4, \"Requests\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtemplate(6, GroupsComponent_div_6_Template, 9, 2, \"div\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"div\", 8)(10, \"div\", 9)(11, \"h5\", 10);\n      i0.ɵɵtext(12, \"Add Group\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_13_listener() {\n        return ctx.closeModal(\"newGroup\");\n      });\n      i0.ɵɵelementStart(14, \"span\", 12);\n      i0.ɵɵtext(15, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 13)(17, \"div\", 14)(18, \"label\", 15);\n      i0.ɵɵtext(19, \"Group Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 16);\n      i0.ɵɵlistener(\"input\", function GroupsComponent_Template_input_input_20_listener() {\n        return ctx.onGroupInput();\n      })(\"ngModelChange\", function GroupsComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.newGroupName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(21, GroupsComponent_div_21_Template, 2, 0, \"div\", 17);\n      i0.ɵɵelementStart(22, \"div\", 14)(23, \"label\", 18);\n      i0.ɵɵtext(24, \"Channel Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function GroupsComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.newChannelName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_26_listener() {\n        return ctx.addChannel();\n      });\n      i0.ɵɵtext(27, \"Add Channel\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(28, GroupsComponent_ul_28_Template, 2, 1, \"ul\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 22)(30, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_30_listener() {\n        return ctx.saveGroup();\n      });\n      i0.ɵɵtext(31, \"Save Group\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(32, \"div\", 24)(33, \"div\", 7)(34, \"div\", 8)(35, \"div\", 9)(36, \"h5\", 25);\n      i0.ɵɵtext(37, \"Group Requests\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_38_listener() {\n        return ctx.closeModal(\"requestApproval\");\n      });\n      i0.ɵɵelementStart(39, \"span\", 12);\n      i0.ɵɵtext(40, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"div\", 13)(42, \"ul\", 26);\n      i0.ɵɵtemplate(43, GroupsComponent_li_43_Template, 4, 2, \"li\", 27);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUser && ctx.isAdmin);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.newGroupName)(\"ngClass\", i0.ɵɵpureFunction2(8, _c0, ctx.newGroupName && ctx.isUniqueGroup, ctx.newGroupName && !ctx.isUniqueGroup));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUniqueGroup);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newChannelName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.groupChannels && ctx.groupChannels.length);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groupsNeedApproval);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".square-card[_ngcontent-%COMP%] {\\n    width: 200px;\\n    height: 200px;\\n    cursor: pointer;\\n  }\\n\\n  .is-unique[_ngcontent-%COMP%] {\\n    border: 2px solid green;\\n  }\\n  \\n  .not-unique[_ngcontent-%COMP%] {\\n    border: 2px solid red;\\n  }\\n\\n\\n\\n  \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ3JvdXBzL2dyb3Vwcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsdUJBQXVCO0VBQ3pCOztFQUVBO0lBQ0UscUJBQXFCO0VBQ3ZCOzs7O0VBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWlDRSIsInNvdXJjZXNDb250ZW50IjpbIi5zcXVhcmUtY2FyZCB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG5cbiAgLmlzLXVuaXF1ZSB7XG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JlZW47XG4gIH1cbiAgXG4gIC5ub3QtdW5pcXVlIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XG4gIH1cblxuXG5cbiAgLyogLm1vZGFsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAxO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuNCk7XG4gIH1cbiAgXG4gIC5tb2RhbC1jb250ZW50IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlO1xuICAgIG1hcmdpbjogMTUlIGF1dG87XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjODg4O1xuICAgIHdpZHRoOiA3MCU7XG4gIH1cbiAgXG4gIC5jbG9zZSB7XG4gICAgY29sb3I6ICNhYWE7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuICBcbiAgLmNsb3NlOmhvdmVyLFxuICAuY2xvc2U6Zm9jdXMge1xuICAgIGNvbG9yOiBibGFjaztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gICAqLyJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["HttpHeaders","Group","i0","ɵɵelementStart","ɵɵlistener","GroupsComponent_button_2_Template_button_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","onAddGroup","ɵɵtext","ɵɵelementEnd","GroupsComponent_div_6_button_6_Template_button_click_0_listener","$event","_r11","group_r7","$implicit","ctx_r9","requestButton","stopPropagation","GroupsComponent_div_6_Template_div_click_1_listener","restoredCtx","_r13","ctx_r12","onGroupCardClick","ɵɵtemplate","GroupsComponent_div_6_button_6_Template","GroupsComponent_div_6_Template_button_click_7_listener","ctx_r14","onButton2Click","ɵɵadvance","ɵɵtextInterpolate","groupName","ɵɵproperty","ctx_r1","isUser","isAdmin","channel_r16","GroupsComponent_ul_28_li_1_Template","ctx_r3","groupChannels","GroupsComponent_li_43_li_3_Template_button_click_2_listener","_r22","userRequest_r19","group_r17","ctx_r20","approveRequest","ɵɵtextInterpolate1","GroupsComponent_li_43_li_3_Template","userRequests","httpOptions","headers","BACKEND_URL","GroupsComponent","constructor","http","cdr","isUniqueGroup","group","ngOnInit","storedUser","window","sessionStorage","getItem","loggedInUser","JSON","parse","role","getUsers","getGroups","get","subscribe","groupsNames","allGroupNames","console","log","selectedGroup","username","push","post","response","error","alert","$","modal","onGroupInput","includes","newGroupName","addChannel","newChannelName","saveGroup","GetNewGroupID","groupID","newGroupID","createdBy","groupAdmins","members","channels","valid","closeModal","modalType","data","users","groups","updateGroup","length","showRequests","groupsNeedApproval","filter","userRequest","ɵɵdirectiveInject","i1","HttpClient","ChangeDetectorRef","selectors","decls","vars","consts","template","GroupsComponent_Template","rf","ctx","GroupsComponent_button_2_Template","GroupsComponent_Template_button_click_3_listener","GroupsComponent_div_6_Template","GroupsComponent_Template_button_click_13_listener","GroupsComponent_Template_input_input_20_listener","GroupsComponent_Template_input_ngModelChange_20_listener","GroupsComponent_div_21_Template","GroupsComponent_Template_input_ngModelChange_25_listener","GroupsComponent_Template_button_click_26_listener","GroupsComponent_ul_28_Template","GroupsComponent_Template_button_click_30_listener","GroupsComponent_Template_button_click_38_listener","GroupsComponent_li_43_Template","ɵɵpureFunction2","_c0"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/groups/groups.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/groups/groups.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Group } from 'server/routes/groupModel';\nimport { ChangeDetectorRef } from '@angular/core';\n\ndeclare var $: any;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n\n  loggedInUser : any;\n  users: any;\n  groups: any;\n\n  groupsNeedApproval: any;\n\n  selectedGroup: any;\n\n  newGroupName: any;\n  newChannelName: any;\n  groupChannels: string[] = [];\n\n  newGroupID: any;\n  allGroupNames: any;\n  isUniqueGroup:boolean = true;\n\n  isUser: boolean = true;\n  isAdmin: boolean = true;\n\n  \n  group: Group = new Group(0, \" \", \" \", [\"\"], [\"\"], [\"\"], [\"\"], true);\n\n  constructor(private http: HttpClient, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n\n      this.loggedInUser = JSON.parse(storedUser);\n\n      // console.log(this.loggedInUser.role)\n      // console.log(this.loggedInUser)\n\n      this.loggedInUser.role = 2\n\n      if (this.loggedInUser.role === 1){\n        this.isUser = true\n        this.isAdmin = false\n      }else{\n        this.isUser = false\n        this.isAdmin = true\n      }\n      // console.log(\"user:\" + this.isUser)\n      // console.log(\"admin:\" + this.isAdmin)\n    }\n\n    this.getUsers()\n    this.getGroups()\n\n    this.http.get<string[]>(BACKEND_URL + \"/groups\").subscribe(groupsNames => {\n      this.allGroupNames = groupsNames;\n      console.log(this.allGroupNames);\n    });\n  }\n\n  onGroupCardClick(group:any ){\n    \n    this.selectedGroup = group;\n    console.log(\"card clicked\")\n\n    console.log(group)\n  }\n\n\n  requestButton(group:any){\n    \n    console.log(this.loggedInUser.username)\n\n    group.userRequests.push(this.loggedInUser.username);\n\n    console.log(group)\n\n    this.http.post(BACKEND_URL+\"/update-groups\", group).subscribe(\n      response => {\n          console.log('User details updated on the server.', response);\n\n          //refesh User list \n          this.getGroups();\n      },\n      error => {\n          console.error('There was an error updating the user details on the server.', error);\n          alert('Error updating profile. Please try again.');\n      }\n    )\n  }\n\n  onButton2Click(group:any){\n    console.log(\"Button 2 clicked\")\n\n  }\n\n  onAddGroup() {\n    console.log(\"Add Group button clicked\");\n\n    $('#addGroupModal').modal('show');\n  }\n\n  onGroupInput() {\n    \n    this.isUniqueGroup = !this.allGroupNames.includes(this.newGroupName);\n    console.log(this.isUniqueGroup)\n  }\n\n  addChannel() {\n    if (this.newChannelName && !this.groupChannels.includes(this.newChannelName)) {\n      this.groupChannels.push(this.newChannelName);\n      this.newChannelName = '';\n    }\n  }\n\n  saveGroup(){\n    //console.log(this.newGroupName)\n   // console.log(this.groupChannels)\n\n    this.GetNewGroupID()\n\n    //console.log(this.newGroupID)\n\n    if (this.isUniqueGroup === true){\n      this.group.groupID = this.newGroupID;\n      this.group.groupName = this.newGroupName;\n      this.group.createdBy = this.loggedInUser.username;\n      this.group.groupAdmins = [this.loggedInUser.username];\n      this.group.userRequests = [\"\"];\n      this.group.members = [\"\"];\n      this.group.channels = this.groupChannels;\n      this.group.valid = true;\n  \n      //console.log(this.group)\n  \n      this.http.post(BACKEND_URL+\"/update-groups\", this.group).subscribe(\n        response => {\n            console.log('User details updated on the server.', response);\n  \n            //refesh User list \n            this.getGroups();\n        },\n        error => {\n            console.error('There was an error updating the user details on the server.', error);\n            alert('Error updating profile. Please try again.');\n        }\n      )\n      this.closeModal(\"newGroup\")\n    }else{\n      alert(\"Group already exists\");\n    }\n  }\n\n  closeModal(modalType: string | undefined){\n\n    if(modalType == \"newGroup\"){\n\n      this.group = {\n        groupID: 0,\n        groupName: \"\",\n        createdBy: this.loggedInUser.username,\n        groupAdmins: [\"\"],\n        userRequests: [\"\"],\n        members: [\"\"],\n        channels: [\"\"],\n        valid: true\n    };\n  \n    this.newGroupName=''\n  \n    this.groupChannels=[]\n  \n    console.log(this.group)\n  \n    \n      $('#addGroupModal').modal('hide');\n    }\n\n    if(modalType == \"requestApproval\"){\n      $('#approveRequests').modal('hide');\n  } \n\n}\n  \n  getUsers(){\n    this.http.post(BACKEND_URL + \"/all-users\", httpOptions)\n    .subscribe(\n        (data: any) => {\n            if (data) {\n              this.users = data\n              //console.log(this.users)\n            } else {\n                alert(\"no Data Soz\");\n            }\n        },\n        error => {console.error('There was an error:', error);}\n    );\n  }\n\n\n  getGroups(){\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions)\n    .subscribe(\n        (data: any) => {\n            if (data) {\n              this.groups = data\n              //console.log(this.groups)\n\n              //console.log(typeof(this.groups))\n            } else {\n                alert(\"no Data Soz\");\n            }\n        },\n        error => {console.error('There was an error:', error);}\n    );\n  }\n\n  updateGroup(){\n    \n  }\n\n  GetNewGroupID(){\n    if (this.groups && this.groups.length > 0) {\n      this.newGroupID = this.groups[this.groups.length - 1].groupID + 1;\n  } else {\n      this.newGroupID = 1;\n  }\n  }\n\n\n\n  showRequests(){\n    this.getGroups();  // Assuming this method populates the 'this.groups' array\n\n    $('#approveRequests').modal('show');\n\n    this.groupsNeedApproval = this.groups.filter((group: { userRequests: string | any[]; }) => group.userRequests && group.userRequests.length > 0);\n\n    console.log(this.groupsNeedApproval);\n}\n\napproveRequest(group: any, userRequest: string){\nconsole.log(group);\nconsole.log(userRequest);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n  // getRoleName(roleNumber: number): string {\n  //   switch (roleNumber) {\n  //     case 1:\n  //       return 'User';\n  //     case 2:\n  //       return 'Admin';\n  //     case 3:\n  //       return 'Super Admin';\n  //     default:\n  //       return 'Unknown Role';\n  //   }\n  // }\n\n\n  // openEditModal(user: any) {\n  //   this.selectedUser = user;\n  //   //console.log(this.selectedUser)\n  //   this.selectedRole = user.role;\n  //   $('#editUserRoleModal').modal('show');\n  // }\n\n  // updateUserRole() {\n  //   // Convert to number and update the role\n  //   this.selectedUser.role = Number(this.selectedRole);\n\n  //   console.log(this.selectedUser)\n\n\n  //   //--------------------------------------------------------------\n\n  //   this.http.post(BACKEND_URL+\"/update-permission\", this.selectedUser).subscribe(\n  //     response => {\n  //         console.log('User details updated on the server.', response);\n  //         //refesh User list \n  //         this.getUsers();\n  //     },\n  //     error => {\n  //         console.error('There was an error updating the user details on the server.', error);\n  //         alert('Error updating profile. Please try again.');\n  //     }\n  // )\n    //alert('Profile updated!');\n\n  //-------------------------------------------------------------\n    \n  //   // Close the modal\n  //   this.closeModal()\n \n  // }\n\n\n\n  // closeModal(){\n  //   $('#editUserRoleModal').modal('hide');\n  // }\n\n\n\n}\n\n","<div class=\"container my-5\"> <!-- Container for center alignment and margin -->\n\n    <!-- Add Group Button at the top, spanning across the cards div -->\n    <div class=\"mb-4\">\n        <button \n            *ngIf=\"!isUser && isAdmin\" \n            class=\"btn btn-success btn-block\" \n            (click)=\"onAddGroup()\">\n            Add Group-AdminSuper\n        </button>\n        <button class=\"btn btn-success btn-block\" (click)=\"showRequests()\">Requests</button>\n    </div>\n  \n    <div class=\"row justify-content-center\"> <!-- Center the cards -->\n        <div class=\"col-md-3 mx-2 my-2\" *ngFor=\"let group of groups\"> <!-- Spacing between cards -->\n            <div class=\"card square-card\" (click)=\"onGroupCardClick(group)\">\n                <div class=\"card-body d-flex flex-column\">\n                    <h5 class=\"card-title mt-auto\">{{ group.groupName }}</h5>\n                    <div class=\"mt-auto\">\n                        <button *ngIf=\"isUser && !isAdmin\" class=\"btn btn-sm btn-primary\" (click)=\"requestButton(group); $event.stopPropagation()\">Request</button>\n                        <button class=\"btn btn-sm btn-secondary\" (click)=\"onButton2Click(group); $event.stopPropagation()\">Button 2</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n<div class=\"modal fade\" id=\"addGroupModal\" tabindex=\"-1\" aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"addGroupLabel\">Add Group</h5>\n          <button (click)=\"closeModal('newGroup')\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        \n        <div class=\"modal-body\">\n          <div class=\"form-group\">\n            <label for=\"groupName\">Group Name:</label>\n            <input type=\"text\" class=\"form-control\" id=\"groupName\" (input)=\"onGroupInput()\"[(ngModel)]=\"newGroupName\"\n            [ngClass]=\"{\n                'is-unique': newGroupName && isUniqueGroup, \n                'not-unique': newGroupName  && !isUniqueGroup}\">\n          </div>\n\n          <div *ngIf=\"!isUniqueGroup\" class=\"invalid-feedback d-block\">\n            Group Name Already exists. Please choose a new group name.\n        </div>\n  \n          <div class=\"form-group\">\n            <label for=\"channelName\">Channel Name:</label>\n            <input type=\"text\" class=\"form-control\" id=\"channelName\" [(ngModel)]=\"newChannelName\">\n            <button type=\"button\" class=\"btn btn-primary mt-2\" (click)=\"addChannel()\">Add Channel</button>\n          </div>\n          \n          <ul *ngIf=\"groupChannels && groupChannels.length\">\n            <li *ngFor=\"let channel of groupChannels\">{{ channel }}</li>\n          </ul>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveGroup()\">Save Group</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"modal fade\" id=\"approveRequests\" tabindex=\"-1\" aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"approveRequestsLabel\">Group Requests</h5>\n                <button (click)=\"closeModal('requestApproval')\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <ul class=\"list-group\">\n                    <!-- Iterate over each group -->\n                    <li class=\"list-group-item\" *ngFor=\"let group of groupsNeedApproval\">\n                        {{ group.groupName }} <!-- Displaying group name -->\n                        <ul class=\"list-group mt-2\">\n                            <!-- For each group, iterate over its userRequests -->\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let userRequest of group.userRequests\">\n                                {{ userRequest }}\n                                <!-- Approve Button for each user request -->\n                                <button class=\"btn btn-success btn-sm\" (click)=\"approveRequest(group, userRequest)\">Approve</button>\n                            </li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}