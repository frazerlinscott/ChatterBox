{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nconst BACKEND_URL = \"http://localhost:3000\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ProfileComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.user = {};\n    this.allUsernames = [];\n    this.isUniqueUsername = true;\n  }\n  ngOnInit() {\n    const storedUserData = sessionStorage.getItem('current.user');\n    this.http.get(BACKEND_URL + \"/usernames\").subscribe(usernames => {\n      this.allUsernames = usernames;\n      console.log(this.allUsernames);\n    });\n    if (storedUserData) {\n      const retrievedUser = JSON.parse(storedUserData);\n      console.log(retrievedUser);\n      this.user.username = retrievedUser.username;\n      this.user.userbirthdate = retrievedUser.birthdate;\n      this.user.email = retrievedUser.email;\n    }\n  }\n  onUsernameInput() {\n    // Check if username is unique while the user is typing\n    this.isUniqueUsername = !this.allUsernames.includes(this.user.username);\n  }\n  onSubmit() {\n    const storedUserData = sessionStorage.getItem('current.user');\n    let originalUsername;\n    if (storedUserData) {\n      let retrievedUser = JSON.parse(storedUserData);\n      originalUsername = retrievedUser.username;\n      retrievedUser.username = this.user.username;\n      retrievedUser.birthdate = this.user.userbirthdate;\n      retrievedUser.email = this.user.email;\n      // Update session storage with the new user data\n      sessionStorage.setItem('current.user', JSON.stringify(retrievedUser));\n    }\n    const newDetails = {\n      originalUsername: originalUsername,\n      updatedDetails: this.user // Send updated user details\n    };\n\n    console.log(newDetails);\n    this.http.post(BACKEND_URL + \"/update-user\", newDetails).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      alert('Profile updated!');\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n    alert('Profile updated!');\n  }\n  closeProfile() {\n    this.router.navigateByUrl('/account'); // Assuming '/account' is your account page route\n  }\n}\n\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"id\", \"username\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"birthdate\"], [\"type\", \"date\", \"name\", \"birthdate\", \"id\", \"birthdate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"text\", \"name\", \"email\", \"id\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.user.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Birthdate:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.user.userbirthdate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Update Profile\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_15_listener() {\n        return ctx.closeProfile();\n      });\n      i0.ɵɵtext(16, \"Close\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.userbirthdate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","BACKEND_URL","httpOptions","headers","ProfileComponent","constructor","router","http","user","allUsernames","isUniqueUsername","ngOnInit","storedUserData","sessionStorage","getItem","get","subscribe","usernames","console","log","retrievedUser","JSON","parse","username","userbirthdate","birthdate","email","onUsernameInput","includes","onSubmit","originalUsername","setItem","stringify","newDetails","updatedDetails","post","response","alert","error","closeProfile","navigateByUrl","i0","ɵɵdirectiveInject","i1","Router","i2","HttpClient","selectors","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ProfileComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ProfileComponent_Template_input_ngModelChange_4_listener","$event","ProfileComponent_Template_input_ngModelChange_8_listener","ProfileComponent_Template_input_ngModelChange_12_listener","ProfileComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/profile/profile.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/profile/profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from 'server/routes/userModel';\n\nconst BACKEND_URL = \"http://localhost:3000\";\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any = {};\n  allUsernames: string[] = [];\n  isUniqueUsername: boolean = true;\n  \n  constructor(private router: Router, private http: HttpClient) { }\n\n  ngOnInit() {\n\n    const storedUserData = sessionStorage.getItem('current.user');\n\n    this.http.get<string[]>(BACKEND_URL + \"/usernames\").subscribe(usernames => {\n      this.allUsernames = usernames;\n      console.log(this.allUsernames);\n    });\n\n\n    if (storedUserData) {\n        const retrievedUser = JSON.parse(storedUserData);\n\n        console.log(retrievedUser)\n\n        this.user.username = retrievedUser.username;\n        this.user.userbirthdate = retrievedUser.birthdate\n        this.user.email = retrievedUser.email\n\n      }\n}\n\n  onUsernameInput() {\n  // Check if username is unique while the user is typing\n    this.isUniqueUsername = !this.allUsernames.includes(this.user.username);\n  }\n\n  onSubmit() {\n\n    const storedUserData = sessionStorage.getItem('current.user');\n    let originalUsername;\n\n    if (storedUserData) {\n        let retrievedUser = JSON.parse(storedUserData);\n        originalUsername = retrievedUser.username;\n\n\n        retrievedUser.username = this.user.username;\n        retrievedUser.birthdate = this.user.userbirthdate;\n        retrievedUser.email = this.user.email;\n\n        // Update session storage with the new user data\n        sessionStorage.setItem('current.user', JSON.stringify(retrievedUser));\n    }\n\n    const newDetails = {\n      originalUsername: originalUsername,  // Send original username\n      updatedDetails: this.user  // Send updated user details\n  };\n\n  console.log(newDetails);\n\n    this.http.post(BACKEND_URL+\"/update-user\", newDetails).subscribe(\n      response => {\n          console.log('User details updated on the server.', response);\n          alert('Profile updated!');\n      },\n      error => {\n          console.error('There was an error updating the user details on the server.', error);\n          alert('Error updating profile. Please try again.');\n      }\n  )\n    alert('Profile updated!');\n  }\n\n  closeProfile() {\n    this.router.navigateByUrl('/account'); // Assuming '/account' is your account page route\n  }\n\n  \n\n  \n}\n","<form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.username\" name=\"username\" id=\"username\">\n    </div>\n  \n    <div class=\"form-group\">\n      <label for=\"birthdate\">Birthdate:</label>\n      <input type=\"date\" class=\"form-control\" [(ngModel)]=\"user.userbirthdate\" name=\"birthdate\" id=\"birthdate\">\n    </div>\n  \n    <div class=\"form-group\">\n      <label for=\"email\">Email:</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.email\" name=\"email\" id=\"email\">\n    </div>\n  \n    <!-- Add other form groups for other data... -->\n  \n    <button type=\"submit\" class=\"btn btn-primary\">Update Profile</button>\n    <button (click)=\"closeProfile()\" class=\"btn btn-secondary\">Close</button>\n\n  </form>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}