{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UploadService {\n  constructor(http) {\n    this.http = http;\n    this.BACKEND_URL = \"http://localhost:3000\";\n  }\n  uploadFile(data) {\n    console.log(\"uploadFile: \" + JSON.stringify(data));\n    console.log(\"hit\");\n    console.log(this.BACKEND_URL);\n    return this.http.post(this.BACKEND_URL + \"/uploadPhoto\", data);\n    // return this.http.post(this.BACKEND_URL + \"/uploadPhoto\", data);\n  }\n\n  uploadAttachment(data) {\n    console.log(this.BACKEND_URL);\n    return this.http.post(this.BACKEND_URL + \"/attachPhoto\", data);\n    // return this.http.post(this.BACKEND_URL + \"/uploadPhoto\", data);\n  }\n}\n\nUploadService.ɵfac = function UploadService_Factory(t) {\n  return new (t || UploadService)(i0.ɵɵinject(i1.HttpClient));\n};\nUploadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UploadService,\n  factory: UploadService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UploadService","constructor","http","BACKEND_URL","uploadFile","data","console","log","JSON","stringify","post","uploadAttachment","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/service/upload.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UploadResponse } from 'server/models/interfaces';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  private  BACKEND_URL = \"http://localhost:3000\";\n\n  constructor(private http: HttpClient) { }\n\n  uploadFile(data: FormData) {\n\n    console.log(\"uploadFile: \" + JSON.stringify(data));\n    console.log(\"hit\")\n    console.log(this.BACKEND_URL)\n\n    return this.http.post(this.BACKEND_URL+\"/uploadPhoto\", data);\n    // return this.http.post(this.BACKEND_URL + \"/uploadPhoto\", data);\n  }\n\n  uploadAttachment(data: FormData) {\n\n    console.log(this.BACKEND_URL)\n\n    return this.http.post(this.BACKEND_URL+\"/attachPhoto\", data);\n\n    // return this.http.post(this.BACKEND_URL + \"/uploadPhoto\", data);\n  }\n\n//   testEndpoint() {\n//     return this.http.post(this.BACKEND_URL + \"/testEndpoint\", {});\n// }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFf,KAAAC,WAAW,GAAG,uBAAuB;EAEN;EAExCC,UAAUA,CAACC,IAAc;IAEvBC,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;IAClDC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClBD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,WAAW,CAAC;IAE7B,OAAO,IAAI,CAACD,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,WAAW,GAAC,cAAc,EAAEE,IAAI,CAAC;IAC5D;EACF;;EAEAM,gBAAgBA,CAACN,IAAc;IAE7BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,WAAW,CAAC;IAE7B,OAAO,IAAI,CAACD,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,WAAW,GAAC,cAAc,EAAEE,IAAI,CAAC;IAE5D;EACF;;;AAvBWL,aAAa,C;mBAAbA,aAAa,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbf,aAAa,C;SAAbA,aAAa;EAAAgB,OAAA,EAAbhB,aAAa,CAAAiB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}