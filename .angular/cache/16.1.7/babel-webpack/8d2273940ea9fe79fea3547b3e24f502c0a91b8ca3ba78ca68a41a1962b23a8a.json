{"ast":null,"code":"//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Group } from 'server/routes/groupModel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction GroupsComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onAddGroup());\n    });\n    i0.ɵɵtext(1, \" Add Group-AdminSuper \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GroupsComponent_button_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.numberOfRequests);\n  }\n}\nfunction GroupsComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.showRequests());\n    });\n    i0.ɵɵtext(1, \" Requests \");\n    i0.ɵɵtemplate(2, GroupsComponent_button_3_span_2_Template, 2, 1, \"span\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.numberOfRequests > 0);\n  }\n}\nfunction GroupsComponent_div_5_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_div_5_button_6_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const group_r11 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      ctx_r13.requestButton(group_r11);\n      return i0.ɵɵresetView($event.stopPropagation());\n    });\n    i0.ɵɵtext(1, \"Request\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GroupsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_div_5_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r11 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onGroupCardClick(group_r11));\n    });\n    i0.ɵɵelementStart(2, \"div\", 34)(3, \"h5\", 35);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 36);\n    i0.ɵɵtemplate(6, GroupsComponent_div_5_button_6_Template, 2, 0, \"button\", 37);\n    i0.ɵɵelementStart(7, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_div_5_Template_button_click_7_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r11 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      ctx_r18.onButton2Click(group_r11);\n      return i0.ɵɵresetView($event.stopPropagation());\n    });\n    i0.ɵɵtext(8, \"Button 2\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const group_r11 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(group_r11.groupName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isUser && !ctx_r2.isAdmin);\n  }\n}\nfunction GroupsComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵtext(1, \" Group Name Already exists. Please choose a new group name. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GroupsComponent_ul_27_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const channel_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(channel_r20);\n  }\n}\nfunction GroupsComponent_ul_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, GroupsComponent_ul_27_li_1_Template, 2, 1, \"li\", 41);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.groupChannels);\n  }\n}\nfunction GroupsComponent_li_42_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function GroupsComponent_li_42_li_3_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const userRequest_r23 = restoredCtx.$implicit;\n      const group_r21 = i0.ɵɵnextContext().$implicit;\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.approveRequest(group_r21, userRequest_r23));\n    });\n    i0.ɵɵtext(3, \"Approve\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const userRequest_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", userRequest_r23, \" \");\n  }\n}\nfunction GroupsComponent_li_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"ul\", 43);\n    i0.ɵɵtemplate(3, GroupsComponent_li_42_li_3_Template, 4, 1, \"li\", 44);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", group_r21.groupName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", group_r21.userRequests);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-unique\": a0,\n    \"not-unique\": a1\n  };\n};\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport class GroupsComponent {\n  constructor(http, cdr) {\n    this.http = http;\n    this.cdr = cdr;\n    this.groupChannels = [];\n    this.isUniqueGroup = true;\n    this.isUser = true;\n    this.isAdmin = true;\n    this.noRequests = true;\n    this.numberOfRequests = 0;\n    this.group = new Group(0, \" \", \" \", [], [], [], [], true);\n  }\n  ngOnInit() {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      // console.log(this.loggedInUser.role)\n      // console.log(this.loggedInUser)\n      //this.loggedInUser.role = 2\n      if (this.loggedInUser.role === 1) {\n        this.isUser = true;\n        this.isAdmin = false;\n      } else {\n        this.isUser = false;\n        this.isAdmin = true;\n      }\n      // console.log(\"user:\" + this.isUser)\n      // console.log(\"admin:\" + this.isAdmin)\n    }\n\n    this.getUsers();\n    this.getGroups();\n    this.http.get(BACKEND_URL + \"/groups\").subscribe(groupsNames => {\n      this.allGroupNames = groupsNames;\n      //console.log(this.allGroupNames);\n    });\n\n    this.getRequests();\n  }\n  onGroupCardClick(group) {\n    this.selectedGroup = group;\n    console.log(\"card clicked\");\n    console.log(group);\n  }\n  requestButton(group) {\n    console.log(this.loggedInUser.username);\n    group.userRequests.push(this.loggedInUser.username);\n    console.log(group);\n    this.http.post(BACKEND_URL + \"/update-groups\", group).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n      this.getGroups();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n  }\n  onButton2Click(group) {\n    console.log(\"Button 2 clicked\");\n  }\n  onAddGroup() {\n    console.log(\"Add Group button clicked\");\n    $('#addGroupModal').modal('show');\n  }\n  onGroupInput() {\n    this.isUniqueGroup = !this.allGroupNames.includes(this.newGroupName);\n    console.log(this.isUniqueGroup);\n  }\n  addChannel() {\n    if (this.newChannelName && !this.groupChannels.includes(this.newChannelName)) {\n      this.groupChannels.push(this.newChannelName);\n      this.newChannelName = '';\n    }\n  }\n  saveGroup() {\n    //console.log(this.newGroupName)\n    // console.log(this.groupChannels)\n    this.GetNewGroupID();\n    //console.log(this.newGroupID)\n    if (this.isUniqueGroup === true) {\n      this.group.groupID = this.newGroupID;\n      this.group.groupName = this.newGroupName;\n      this.group.createdBy = this.loggedInUser.username;\n      this.group.groupAdmins = [this.loggedInUser.username];\n      this.group.userRequests = [];\n      this.group.members = [];\n      this.group.channels = this.groupChannels;\n      this.group.valid = true;\n      //console.log(this.group)\n      this.http.post(BACKEND_URL + \"/update-groups\", this.group).subscribe(response => {\n        console.log('User details updated on the server.', response);\n        //refesh User list \n        this.getGroups();\n      }, error => {\n        console.error('There was an error updating the user details on the server.', error);\n        alert('Error updating profile. Please try again.');\n      });\n      this.closeModal(\"newGroup\");\n    } else {\n      alert(\"Group already exists\");\n    }\n  }\n  closeModal(modalType) {\n    if (modalType == \"newGroup\") {\n      this.group = {\n        groupID: 0,\n        groupName: \"\",\n        createdBy: this.loggedInUser.username,\n        groupAdmins: [],\n        userRequests: [],\n        members: [],\n        channels: [],\n        valid: true\n      };\n      this.newGroupName = '';\n      this.groupChannels = [];\n      //console.log(this.group)\n      $('#addGroupModal').modal('hide');\n    }\n    if (modalType == \"requestApproval\") {\n      $('#approveRequests').modal('hide');\n    }\n  }\n  getUsers() {\n    this.http.post(BACKEND_URL + \"/all-users\", httpOptions).subscribe(data => {\n      if (data) {\n        this.users = data;\n        //console.log(this.users)\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  getGroups() {\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions).subscribe(data => {\n      if (data) {\n        this.groups = data;\n        //this.allGroups = data\n        //console.log(this.groups)\n        //console.log(typeof(this.groups))\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  // updateGroup(){\n  // }\n  GetNewGroupID() {\n    if (this.groups && this.groups.length > 0) {\n      this.newGroupID = this.groups[this.groups.length - 1].groupID + 1;\n    } else {\n      this.newGroupID = 1;\n    }\n  }\n  getRequests(group) {\n    //console.log(this.groups)\n    this.groupsNeedApproval = this.groups.filter(group => group.userRequests && group.userRequests.length > 0);\n    console.log(this.groupsNeedApproval.length);\n  }\n  showRequests() {\n    this.getGroups(); // Assuming this method populates the 'this.groups' array\n    this.getRequests();\n    $('#approveRequests').modal('show');\n    // if(this.groups.length > 0){\n    //   //this.noRequests=false\n    //   this.groupsNeedApproval = this.groups.filter((group: { userRequests: string | any[]; }) => group.userRequests && group.userRequests.length > 0);\n    // }\n    if (this.groupsNeedApproval.length === 0) {\n      console.log(\"no approvals\");\n      //this.noRequests=true\n    }\n  }\n\n  approveRequest(group, userRequest) {\n    //console.log(group);\n    //console.log(userRequest);\n    if (group.userRequests.includes(userRequest)) {\n      group.members.push(userRequest);\n      group.userRequests.splice(group.userRequests.indexOf(userRequest), 1);\n    }\n    this.http.post(BACKEND_URL + \"/update-groups\", group).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n      this.getGroups();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n    //console.log(group);\n  }\n}\n\nGroupsComponent.ɵfac = function GroupsComponent_Factory(t) {\n  return new (t || GroupsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nGroupsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GroupsComponent,\n  selectors: [[\"app-groups\"]],\n  decls: 43,\n  vars: 12,\n  consts: [[1, \"container\", \"my-5\"], [1, \"mb-4\"], [\"class\", \"btn btn-success btn-block\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-success btn-block position-relative\", 3, \"click\", 4, \"ngIf\"], [1, \"row\", \"justify-content-center\"], [\"class\", \"col-md-3 mx-2 my-2\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"addGroupModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addGroupLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"addGroupLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\"], [\"for\", \"groupName\"], [\"type\", \"text\", \"id\", \"groupName\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"input\", \"ngModelChange\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [\"for\", \"channelName\"], [\"type\", \"text\", \"id\", \"channelName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-2\", 3, \"click\"], [4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"approveRequests\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addGroupLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"id\", \"approveRequestsLabel\", 1, \"modal-title\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", \"btn-block\", 3, \"click\"], [1, \"btn\", \"btn-success\", \"btn-block\", \"position-relative\", 3, \"click\"], [\"class\", \"badge badge-light position-absolute\", \"style\", \"top: 10px; right: 10px;\", 4, \"ngIf\"], [1, \"badge\", \"badge-light\", \"position-absolute\", 2, \"top\", \"10px\", \"right\", \"10px\"], [1, \"col-md-3\", \"mx-2\", \"my-2\"], [1, \"card\", \"square-card\", 3, \"click\"], [1, \"card-body\", \"d-flex\", \"flex-column\"], [1, \"card-title\", \"mt-auto\"], [1, \"mt-auto\"], [\"class\", \"btn btn-sm btn-primary\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-secondary\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"invalid-feedback\", \"d-block\"], [4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [1, \"list-group\", \"mt-2\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"click\"]],\n  template: function GroupsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, GroupsComponent_button_2_Template, 2, 0, \"button\", 2);\n      i0.ɵɵtemplate(3, GroupsComponent_button_3_Template, 3, 1, \"button\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵtemplate(5, GroupsComponent_div_5_Template, 9, 2, \"div\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8)(9, \"div\", 9)(10, \"h5\", 10);\n      i0.ɵɵtext(11, \"Add Group\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_12_listener() {\n        return ctx.closeModal(\"newGroup\");\n      });\n      i0.ɵɵelementStart(13, \"span\", 12);\n      i0.ɵɵtext(14, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 13)(16, \"div\", 14)(17, \"label\", 15);\n      i0.ɵɵtext(18, \"Group Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 16);\n      i0.ɵɵlistener(\"input\", function GroupsComponent_Template_input_input_19_listener() {\n        return ctx.onGroupInput();\n      })(\"ngModelChange\", function GroupsComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.newGroupName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(20, GroupsComponent_div_20_Template, 2, 0, \"div\", 17);\n      i0.ɵɵelementStart(21, \"div\", 14)(22, \"label\", 18);\n      i0.ɵɵtext(23, \"Channel Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function GroupsComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.newChannelName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_25_listener() {\n        return ctx.addChannel();\n      });\n      i0.ɵɵtext(26, \"Add Channel\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(27, GroupsComponent_ul_27_Template, 2, 1, \"ul\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 22)(29, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_29_listener() {\n        return ctx.saveGroup();\n      });\n      i0.ɵɵtext(30, \"Save Group\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(31, \"div\", 24)(32, \"div\", 7)(33, \"div\", 8)(34, \"div\", 9)(35, \"h5\", 25);\n      i0.ɵɵtext(36, \"Group Requests\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_37_listener() {\n        return ctx.closeModal(\"requestApproval\");\n      });\n      i0.ɵɵelementStart(38, \"span\", 12);\n      i0.ɵɵtext(39, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(40, \"div\", 13)(41, \"ul\", 26);\n      i0.ɵɵtemplate(42, GroupsComponent_li_42_Template, 4, 2, \"li\", 27);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUser && ctx.isAdmin);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUser && ctx.isAdmin);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.newGroupName)(\"ngClass\", i0.ɵɵpureFunction2(9, _c0, ctx.newGroupName && ctx.isUniqueGroup, ctx.newGroupName && !ctx.isUniqueGroup));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUniqueGroup);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newChannelName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.groupChannels && ctx.groupChannels.length);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groupsNeedApproval);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".square-card[_ngcontent-%COMP%] {\\n    width: 200px;\\n    height: 200px;\\n    cursor: pointer;\\n  }\\n\\n  .is-unique[_ngcontent-%COMP%] {\\n    border: 2px solid green;\\n  }\\n  \\n  .not-unique[_ngcontent-%COMP%] {\\n    border: 2px solid red;\\n  }\\n\\n\\n\\n  \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ3JvdXBzL2dyb3Vwcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsdUJBQXVCO0VBQ3pCOztFQUVBO0lBQ0UscUJBQXFCO0VBQ3ZCOzs7O0VBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWlDRSIsInNvdXJjZXNDb250ZW50IjpbIi5zcXVhcmUtY2FyZCB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG5cbiAgLmlzLXVuaXF1ZSB7XG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JlZW47XG4gIH1cbiAgXG4gIC5ub3QtdW5pcXVlIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XG4gIH1cblxuXG5cbiAgLyogLm1vZGFsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAxO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuNCk7XG4gIH1cbiAgXG4gIC5tb2RhbC1jb250ZW50IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlO1xuICAgIG1hcmdpbjogMTUlIGF1dG87XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjODg4O1xuICAgIHdpZHRoOiA3MCU7XG4gIH1cbiAgXG4gIC5jbG9zZSB7XG4gICAgY29sb3I6ICNhYWE7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuICBcbiAgLmNsb3NlOmhvdmVyLFxuICAuY2xvc2U6Zm9jdXMge1xuICAgIGNvbG9yOiBibGFjaztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gICAqLyJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["HttpHeaders","Group","i0","ɵɵelementStart","ɵɵlistener","GroupsComponent_button_2_Template_button_click_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","onAddGroup","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r8","numberOfRequests","GroupsComponent_button_3_Template_button_click_0_listener","_r10","ctx_r9","showRequests","ɵɵtemplate","GroupsComponent_button_3_span_2_Template","ɵɵproperty","ctx_r1","GroupsComponent_div_5_button_6_Template_button_click_0_listener","$event","_r15","group_r11","$implicit","ctx_r13","requestButton","stopPropagation","GroupsComponent_div_5_Template_div_click_1_listener","restoredCtx","_r17","ctx_r16","onGroupCardClick","GroupsComponent_div_5_button_6_Template","GroupsComponent_div_5_Template_button_click_7_listener","ctx_r18","onButton2Click","groupName","ctx_r2","isUser","isAdmin","channel_r20","GroupsComponent_ul_27_li_1_Template","ctx_r4","groupChannels","GroupsComponent_li_42_li_3_Template_button_click_2_listener","_r26","userRequest_r23","group_r21","ctx_r24","approveRequest","ɵɵtextInterpolate1","GroupsComponent_li_42_li_3_Template","userRequests","httpOptions","headers","BACKEND_URL","GroupsComponent","constructor","http","cdr","isUniqueGroup","noRequests","group","ngOnInit","storedUser","window","sessionStorage","getItem","loggedInUser","JSON","parse","role","getUsers","getGroups","get","subscribe","groupsNames","allGroupNames","getRequests","selectedGroup","console","log","username","push","post","response","error","alert","$","modal","onGroupInput","includes","newGroupName","addChannel","newChannelName","saveGroup","GetNewGroupID","groupID","newGroupID","createdBy","groupAdmins","members","channels","valid","closeModal","modalType","data","users","groups","length","groupsNeedApproval","filter","userRequest","splice","indexOf","ɵɵdirectiveInject","i1","HttpClient","ChangeDetectorRef","selectors","decls","vars","consts","template","GroupsComponent_Template","rf","ctx","GroupsComponent_button_2_Template","GroupsComponent_button_3_Template","GroupsComponent_div_5_Template","GroupsComponent_Template_button_click_12_listener","GroupsComponent_Template_input_input_19_listener","GroupsComponent_Template_input_ngModelChange_19_listener","GroupsComponent_div_20_Template","GroupsComponent_Template_input_ngModelChange_24_listener","GroupsComponent_Template_button_click_25_listener","GroupsComponent_ul_27_Template","GroupsComponent_Template_button_click_29_listener","GroupsComponent_Template_button_click_37_listener","GroupsComponent_li_42_Template","ɵɵpureFunction2","_c0"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/groups/groups.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/groups/groups.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Group } from 'server/routes/groupModel';\nimport { ChangeDetectorRef } from '@angular/core';\n\ndeclare var $: any;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n\n  loggedInUser : any;\n  users: any;\n  groups: any;\n  allGroups: any;\n\n  groupsNeedApproval: any;\n\n  selectedGroup: any;\n\n  newGroupName: any;\n  newChannelName: any;\n  groupChannels: string[] = [];\n\n  newGroupID: any;\n  allGroupNames: any;\n  isUniqueGroup:boolean = true;\n\n  isUser: boolean = true;\n  isAdmin: boolean = true;\n\n  noRequests: boolean = true;\n\n  numberOfRequests: number = 0;\n\n  \n  group: Group = new Group(0, \" \", \" \", [], [], [], [], true);\n\n  constructor(private http: HttpClient, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n\n      this.loggedInUser = JSON.parse(storedUser);\n\n      // console.log(this.loggedInUser.role)\n      // console.log(this.loggedInUser)\n\n      //this.loggedInUser.role = 2\n\n\n      if (this.loggedInUser.role === 1){\n        this.isUser = true\n        this.isAdmin = false\n      }else{\n        this.isUser = false\n        this.isAdmin = true\n      }\n      // console.log(\"user:\" + this.isUser)\n      // console.log(\"admin:\" + this.isAdmin)\n    }\n\n    this.getUsers()\n    this.getGroups()\n\n    this.http.get<string[]>(BACKEND_URL + \"/groups\").subscribe(groupsNames => {\n      this.allGroupNames = groupsNames;\n      //console.log(this.allGroupNames);\n    });\n\n\n    this.getRequests()\n  }\n\n  onGroupCardClick(group:any ){\n    \n    this.selectedGroup = group;\n    console.log(\"card clicked\")\n\n    console.log(group)\n  }\n\n\n  requestButton(group:any){\n    \n    console.log(this.loggedInUser.username)\n\n    group.userRequests.push(this.loggedInUser.username);\n\n    console.log(group)\n\n    this.http.post(BACKEND_URL+\"/update-groups\", group).subscribe(\n      response => {\n          console.log('User details updated on the server.', response);\n\n          //refesh User list \n          this.getGroups();\n      },\n      error => {\n          console.error('There was an error updating the user details on the server.', error);\n          alert('Error updating profile. Please try again.');\n      }\n    )\n  }\n\n  onButton2Click(group:any){\n    console.log(\"Button 2 clicked\")\n\n  }\n\n  onAddGroup() {\n    console.log(\"Add Group button clicked\");\n\n    $('#addGroupModal').modal('show');\n  }\n\n  onGroupInput() {\n    \n    this.isUniqueGroup = !this.allGroupNames.includes(this.newGroupName);\n    console.log(this.isUniqueGroup)\n  }\n\n  addChannel() {\n    if (this.newChannelName && !this.groupChannels.includes(this.newChannelName)) {\n      this.groupChannels.push(this.newChannelName);\n      this.newChannelName = '';\n    }\n  }\n\n  saveGroup(){\n    //console.log(this.newGroupName)\n   // console.log(this.groupChannels)\n\n    this.GetNewGroupID()\n\n    //console.log(this.newGroupID)\n\n    if (this.isUniqueGroup === true){\n      this.group.groupID = this.newGroupID;\n      this.group.groupName = this.newGroupName;\n      this.group.createdBy = this.loggedInUser.username;\n      this.group.groupAdmins = [this.loggedInUser.username];\n      this.group.userRequests = [];\n      this.group.members = [];\n      this.group.channels = this.groupChannels;\n      this.group.valid = true;\n  \n      //console.log(this.group)\n  \n      this.http.post(BACKEND_URL+\"/update-groups\", this.group).subscribe(\n        response => {\n            console.log('User details updated on the server.', response);\n  \n            //refesh User list \n            this.getGroups();\n        },\n        error => {\n            console.error('There was an error updating the user details on the server.', error);\n            alert('Error updating profile. Please try again.');\n        }\n      )\n      this.closeModal(\"newGroup\")\n    }else{\n      alert(\"Group already exists\");\n    }\n  }\n\n  closeModal(modalType: string | undefined){\n\n    if(modalType == \"newGroup\"){\n\n      this.group = {\n        groupID: 0,\n        groupName: \"\",\n        createdBy: this.loggedInUser.username,\n        groupAdmins: [],\n        userRequests: [],\n        members: [],\n        channels: [],\n        valid: true\n    };\n  \n    this.newGroupName=''\n  \n    this.groupChannels=[]\n  \n    //console.log(this.group)\n  \n    \n      $('#addGroupModal').modal('hide');\n    }\n\n    if(modalType == \"requestApproval\"){\n      $('#approveRequests').modal('hide');\n  } \n\n}\n  \n  getUsers(){\n    this.http.post(BACKEND_URL + \"/all-users\", httpOptions)\n    .subscribe(\n        (data: any) => {\n            if (data) {\n              this.users = data\n              //console.log(this.users)\n            } else {\n                alert(\"no Data Soz\");\n            }\n        },\n        error => {console.error('There was an error:', error);}\n    );\n  }\n\n\n  getGroups(){\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions)\n    .subscribe(\n        (data: any) => {\n            if (data) {\n              this.groups = data\n              //this.allGroups = data\n              //console.log(this.groups)\n\n              //console.log(typeof(this.groups))\n            } else {\n                alert(\"no Data Soz\");\n            }\n        },\n        error => {console.error('There was an error:', error);}\n    );\n  }\n\n  // updateGroup(){\n    \n  // }\n\n  GetNewGroupID(){\n    if (this.groups && this.groups.length > 0) {\n      this.newGroupID = this.groups[this.groups.length - 1].groupID + 1;\n  } else {\n      this.newGroupID = 1;\n  }\n  }\n\n  getRequests(group:any){\n        //console.log(this.groups)\n\n        this.groupsNeedApproval = this.groups.filter((group: { userRequests: string | any[]; }) => group.userRequests && group.userRequests.length > 0);\n\n        console.log(this.groupsNeedApproval.length)\n  }\n\n\n\n  showRequests(){\n    this.getGroups();  // Assuming this method populates the 'this.groups' array\n    this.getRequests()\n\n    $('#approveRequests').modal('show');\n\n    // if(this.groups.length > 0){\n    //   //this.noRequests=false\n    //   this.groupsNeedApproval = this.groups.filter((group: { userRequests: string | any[]; }) => group.userRequests && group.userRequests.length > 0);\n    // }\n\n    if(this.groupsNeedApproval.length === 0){\n      console.log(\"no approvals\")\n      //this.noRequests=true\n    }\n\n  \n}\n\napproveRequest(group: any, userRequest: string){\n    //console.log(group);\n    //console.log(userRequest);\n\n    if (group.userRequests.includes(userRequest)) {\n      group.members.push(userRequest);\n      group.userRequests.splice(group.userRequests.indexOf(userRequest), 1);\n  }\n\n\n\n\n  this.http.post(BACKEND_URL+\"/update-groups\", group).subscribe(\n    response => {\n        console.log('User details updated on the server.', response);\n\n        //refesh User list \n        this.getGroups();\n    },\n    error => {\n        console.error('There was an error updating the user details on the server.', error);\n        alert('Error updating profile. Please try again.');\n    }\n  )\n\n  //console.log(group);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n  // getRoleName(roleNumber: number): string {\n  //   switch (roleNumber) {\n  //     case 1:\n  //       return 'User';\n  //     case 2:\n  //       return 'Admin';\n  //     case 3:\n  //       return 'Super Admin';\n  //     default:\n  //       return 'Unknown Role';\n  //   }\n  // }\n\n\n  // openEditModal(user: any) {\n  //   this.selectedUser = user;\n  //   //console.log(this.selectedUser)\n  //   this.selectedRole = user.role;\n  //   $('#editUserRoleModal').modal('show');\n  // }\n\n  // updateUserRole() {\n  //   // Convert to number and update the role\n  //   this.selectedUser.role = Number(this.selectedRole);\n\n  //   console.log(this.selectedUser)\n\n\n  //   //--------------------------------------------------------------\n\n  //   this.http.post(BACKEND_URL+\"/update-permission\", this.selectedUser).subscribe(\n  //     response => {\n  //         console.log('User details updated on the server.', response);\n  //         //refesh User list \n  //         this.getUsers();\n  //     },\n  //     error => {\n  //         console.error('There was an error updating the user details on the server.', error);\n  //         alert('Error updating profile. Please try again.');\n  //     }\n  // )\n    //alert('Profile updated!');\n\n  //-------------------------------------------------------------\n    \n  //   // Close the modal\n  //   this.closeModal()\n \n  // }\n\n\n\n  // closeModal(){\n  //   $('#editUserRoleModal').modal('hide');\n  // }\n\n\n\n}\n\n","<div class=\"container my-5\"> <!-- Container for center alignment and margin -->\n\n    <!-- Add Group Button at the top, spanning across the cards div -->\n    <div class=\"mb-4\">\n        <button \n            *ngIf=\"!isUser && isAdmin\" \n            class=\"btn btn-success btn-block\" \n            (click)=\"onAddGroup()\">\n            Add Group-AdminSuper\n        </button>\n        <button *ngIf=\"!isUser && isAdmin\" class=\"btn btn-success btn-block position-relative\" (click)=\"showRequests()\">\n            Requests\n            <span *ngIf=\"numberOfRequests > 0\" class=\"badge badge-light position-absolute\" style=\"top: 10px; right: 10px;\">{{ numberOfRequests }}</span>\n        </button>\n        \n    </div>\n  \n    <div class=\"row justify-content-center\"> <!-- Center the cards -->\n        <div class=\"col-md-3 mx-2 my-2\" *ngFor=\"let group of groups\"> <!-- Spacing between cards -->\n            <div class=\"card square-card\" (click)=\"onGroupCardClick(group)\">\n                <div class=\"card-body d-flex flex-column\">\n                    <h5 class=\"card-title mt-auto\">{{ group.groupName }}</h5>\n                    <div class=\"mt-auto\">\n                        <button *ngIf=\"isUser && !isAdmin\" class=\"btn btn-sm btn-primary\" (click)=\"requestButton(group); $event.stopPropagation()\">Request</button>\n                        <button class=\"btn btn-sm btn-secondary\" (click)=\"onButton2Click(group); $event.stopPropagation()\">Button 2</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n<div class=\"modal fade\" id=\"addGroupModal\" tabindex=\"-1\" aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"addGroupLabel\">Add Group</h5>\n          <button (click)=\"closeModal('newGroup')\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        \n        <div class=\"modal-body\">\n          <div class=\"form-group\">\n            <label for=\"groupName\">Group Name:</label>\n            <input type=\"text\" class=\"form-control\" id=\"groupName\" (input)=\"onGroupInput()\"[(ngModel)]=\"newGroupName\"\n            [ngClass]=\"{\n                'is-unique': newGroupName && isUniqueGroup, \n                'not-unique': newGroupName  && !isUniqueGroup}\">\n          </div>\n\n          <div *ngIf=\"!isUniqueGroup\" class=\"invalid-feedback d-block\">\n            Group Name Already exists. Please choose a new group name.\n        </div>\n  \n          <div class=\"form-group\">\n            <label for=\"channelName\">Channel Name:</label>\n            <input type=\"text\" class=\"form-control\" id=\"channelName\" [(ngModel)]=\"newChannelName\">\n            <button type=\"button\" class=\"btn btn-primary mt-2\" (click)=\"addChannel()\">Add Channel</button>\n          </div>\n          \n          <ul *ngIf=\"groupChannels && groupChannels.length\">\n            <li *ngFor=\"let channel of groupChannels\">{{ channel }}</li>\n          </ul>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveGroup()\">Save Group</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"modal fade\" id=\"approveRequests\" tabindex=\"-1\" aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"approveRequestsLabel\">Group Requests</h5>\n                <button (click)=\"closeModal('requestApproval')\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n\n            <div class=\"modal-body\">\n                <ul class=\"list-group\">\n                    <!-- Iterate over each group -->\n                    <li class=\"list-group-item\" *ngFor=\"let group of groupsNeedApproval\">\n                        {{ group.groupName }} <!-- Displaying group name -->\n                        <ul class=\"list-group mt-2\">\n                            <!-- For each group, iterate over its userRequests -->\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let userRequest of group.userRequests\">\n                                {{ userRequest }}\n                                <!-- Approve Button for each user request -->\n                                <button class=\"btn btn-success btn-sm\" (click)=\"approveRequest(group, userRequest)\">Approve</button>\n                            </li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n  "],"mappings":"AACA;AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,KAAK,QAAQ,0BAA0B;;;;;;;;ICCxCC,EAAA,CAAAC,cAAA,iBAG2B;IAAvBD,EAAA,CAAAE,UAAA,mBAAAC,0DAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,UAAA,EAAY;IAAA,EAAC;IACtBT,EAAA,CAAAU,MAAA,6BACJ;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;;;IAGLX,EAAA,CAAAC,cAAA,eAA+G;IAAAD,EAAA,CAAAU,MAAA,GAAsB;IAAAV,EAAA,CAAAW,YAAA,EAAO;;;;IAA7BX,EAAA,CAAAY,SAAA,GAAsB;IAAtBZ,EAAA,CAAAa,iBAAA,CAAAC,MAAA,CAAAC,gBAAA,CAAsB;;;;;;IAFzIf,EAAA,CAAAC,cAAA,iBAAgH;IAAzBD,EAAA,CAAAE,UAAA,mBAAAc,0DAAA;MAAAhB,EAAA,CAAAI,aAAA,CAAAa,IAAA;MAAA,MAAAC,MAAA,GAAAlB,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAQ,WAAA,CAAAU,MAAA,CAAAC,YAAA,EAAc;IAAA,EAAC;IAC3GnB,EAAA,CAAAU,MAAA,iBACA;IAAAV,EAAA,CAAAoB,UAAA,IAAAC,wCAAA,mBAA4I;IAChJrB,EAAA,CAAAW,YAAA,EAAS;;;;IADEX,EAAA,CAAAY,SAAA,GAA0B;IAA1BZ,EAAA,CAAAsB,UAAA,SAAAC,MAAA,CAAAR,gBAAA,KAA0B;;;;;;IAWrBf,EAAA,CAAAC,cAAA,iBAA2H;IAAzDD,EAAA,CAAAE,UAAA,mBAAAsB,gEAAAC,MAAA;MAAAzB,EAAA,CAAAI,aAAA,CAAAsB,IAAA;MAAA,MAAAC,SAAA,GAAA3B,EAAA,CAAAO,aAAA,GAAAqB,SAAA;MAAA,MAAAC,OAAA,GAAA7B,EAAA,CAAAO,aAAA;MAASsB,OAAA,CAAAC,aAAA,CAAAH,SAAA,CAAoB;MAAA,OAAE3B,EAAA,CAAAQ,WAAA,CAAAiB,MAAA,CAAAM,eAAA,EAAwB;IAAA,EAAC;IAAC/B,EAAA,CAAAU,MAAA,cAAO;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;;;;IAL3JX,EAAA,CAAAC,cAAA,cAA6D;IAC3BD,EAAA,CAAAE,UAAA,mBAAA8B,oDAAA;MAAA,MAAAC,WAAA,GAAAjC,EAAA,CAAAI,aAAA,CAAA8B,IAAA;MAAA,MAAAP,SAAA,GAAAM,WAAA,CAAAL,SAAA;MAAA,MAAAO,OAAA,GAAAnC,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAQ,WAAA,CAAA2B,OAAA,CAAAC,gBAAA,CAAAT,SAAA,CAAuB;IAAA,EAAC;IAC3D3B,EAAA,CAAAC,cAAA,cAA0C;IACPD,EAAA,CAAAU,MAAA,GAAqB;IAAAV,EAAA,CAAAW,YAAA,EAAK;IACzDX,EAAA,CAAAC,cAAA,cAAqB;IACjBD,EAAA,CAAAoB,UAAA,IAAAiB,uCAAA,qBAA2I;IAC3IrC,EAAA,CAAAC,cAAA,iBAAmG;IAA1DD,EAAA,CAAAE,UAAA,mBAAAoC,uDAAAb,MAAA;MAAA,MAAAQ,WAAA,GAAAjC,EAAA,CAAAI,aAAA,CAAA8B,IAAA;MAAA,MAAAP,SAAA,GAAAM,WAAA,CAAAL,SAAA;MAAA,MAAAW,OAAA,GAAAvC,EAAA,CAAAO,aAAA;MAASgC,OAAA,CAAAC,cAAA,CAAAb,SAAA,CAAqB;MAAA,OAAE3B,EAAA,CAAAQ,WAAA,CAAAiB,MAAA,CAAAM,eAAA,EAAwB;IAAA,EAAC;IAAC/B,EAAA,CAAAU,MAAA,eAAQ;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;;;IAHzFX,EAAA,CAAAY,SAAA,GAAqB;IAArBZ,EAAA,CAAAa,iBAAA,CAAAc,SAAA,CAAAc,SAAA,CAAqB;IAEvCzC,EAAA,CAAAY,SAAA,GAAwB;IAAxBZ,EAAA,CAAAsB,UAAA,SAAAoB,MAAA,CAAAC,MAAA,KAAAD,MAAA,CAAAE,OAAA,CAAwB;;;;;IA8B/C5C,EAAA,CAAAC,cAAA,cAA6D;IAC3DD,EAAA,CAAAU,MAAA,mEACJ;IAAAV,EAAA,CAAAW,YAAA,EAAM;;;;;IASFX,EAAA,CAAAC,cAAA,SAA0C;IAAAD,EAAA,CAAAU,MAAA,GAAa;IAAAV,EAAA,CAAAW,YAAA,EAAK;;;;IAAlBX,EAAA,CAAAY,SAAA,GAAa;IAAbZ,EAAA,CAAAa,iBAAA,CAAAgC,WAAA,CAAa;;;;;IADzD7C,EAAA,CAAAC,cAAA,SAAkD;IAChDD,EAAA,CAAAoB,UAAA,IAAA0B,mCAAA,iBAA4D;IAC9D9C,EAAA,CAAAW,YAAA,EAAK;;;;IADqBX,EAAA,CAAAY,SAAA,GAAgB;IAAhBZ,EAAA,CAAAsB,UAAA,YAAAyB,MAAA,CAAAC,aAAA,CAAgB;;;;;;IA4BxBhD,EAAA,CAAAC,cAAA,aAA6H;IACzHD,EAAA,CAAAU,MAAA,GACA;IACAV,EAAA,CAAAC,cAAA,iBAAoF;IAA7CD,EAAA,CAAAE,UAAA,mBAAA+C,4DAAA;MAAA,MAAAhB,WAAA,GAAAjC,EAAA,CAAAI,aAAA,CAAA8C,IAAA;MAAA,MAAAC,eAAA,GAAAlB,WAAA,CAAAL,SAAA;MAAA,MAAAwB,SAAA,GAAApD,EAAA,CAAAO,aAAA,GAAAqB,SAAA;MAAA,MAAAyB,OAAA,GAAArD,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAQ,WAAA,CAAA6C,OAAA,CAAAC,cAAA,CAAAF,SAAA,EAAAD,eAAA,CAAkC;IAAA,EAAC;IAACnD,EAAA,CAAAU,MAAA,cAAO;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;;IAFpGX,EAAA,CAAAY,SAAA,GACA;IADAZ,EAAA,CAAAuD,kBAAA,MAAAJ,eAAA,MACA;;;;;IANZnD,EAAA,CAAAC,cAAA,aAAqE;IACjED,EAAA,CAAAU,MAAA,GAAsB;IACtBV,EAAA,CAAAC,cAAA,aAA4B;IAExBD,EAAA,CAAAoB,UAAA,IAAAoC,mCAAA,iBAIK;IACTxD,EAAA,CAAAW,YAAA,EAAK;;;;IARLX,EAAA,CAAAY,SAAA,GAAsB;IAAtBZ,EAAA,CAAAuD,kBAAA,MAAAH,SAAA,CAAAX,SAAA,MAAsB;IAGoFzC,EAAA,CAAAY,SAAA,GAAqB;IAArBZ,EAAA,CAAAsB,UAAA,YAAA8B,SAAA,CAAAK,YAAA,CAAqB;;;;;;;;;ADpFvJ,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAI7D,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAED,MAAM8D,WAAW,GAAG,uBAAuB;AAO3C,OAAM,MAAOC,eAAe;EA6B1BC,YAAoBC,IAAgB,EAAUC,GAAsB;IAAhD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,GAAG,GAAHA,GAAG;IAhBjD,KAAAhB,aAAa,GAAa,EAAE;IAI5B,KAAAiB,aAAa,GAAW,IAAI;IAE5B,KAAAtB,MAAM,GAAY,IAAI;IACtB,KAAAC,OAAO,GAAY,IAAI;IAEvB,KAAAsB,UAAU,GAAY,IAAI;IAE1B,KAAAnD,gBAAgB,GAAW,CAAC;IAG5B,KAAAoD,KAAK,GAAU,IAAIpE,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;EAEa;EAExEqE,QAAQA,CAAA;IACN,MAAMC,UAAU,GAAGC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC;IAChE,IAAIH,UAAU,EAAE;MAEd,IAAI,CAACI,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,CAAC;MAE1C;MACA;MAEA;MAGA,IAAI,IAAI,CAACI,YAAY,CAACG,IAAI,KAAK,CAAC,EAAC;QAC/B,IAAI,CAACjC,MAAM,GAAG,IAAI;QAClB,IAAI,CAACC,OAAO,GAAG,KAAK;OACrB,MAAI;QACH,IAAI,CAACD,MAAM,GAAG,KAAK;QACnB,IAAI,CAACC,OAAO,GAAG,IAAI;;MAErB;MACA;;;IAGF,IAAI,CAACiC,QAAQ,EAAE;IACf,IAAI,CAACC,SAAS,EAAE;IAEhB,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAWnB,WAAW,GAAG,SAAS,CAAC,CAACoB,SAAS,CAACC,WAAW,IAAG;MACvE,IAAI,CAACC,aAAa,GAAGD,WAAW;MAChC;IACF,CAAC,CAAC;;IAGF,IAAI,CAACE,WAAW,EAAE;EACpB;EAEA/C,gBAAgBA,CAAC+B,KAAS;IAExB,IAAI,CAACiB,aAAa,GAAGjB,KAAK;IAC1BkB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAE3BD,OAAO,CAACC,GAAG,CAACnB,KAAK,CAAC;EACpB;EAGArC,aAAaA,CAACqC,KAAS;IAErBkB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,YAAY,CAACc,QAAQ,CAAC;IAEvCpB,KAAK,CAACV,YAAY,CAAC+B,IAAI,CAAC,IAAI,CAACf,YAAY,CAACc,QAAQ,CAAC;IAEnDF,OAAO,CAACC,GAAG,CAACnB,KAAK,CAAC;IAElB,IAAI,CAACJ,IAAI,CAAC0B,IAAI,CAAC7B,WAAW,GAAC,gBAAgB,EAAEO,KAAK,CAAC,CAACa,SAAS,CAC3DU,QAAQ,IAAG;MACPL,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEI,QAAQ,CAAC;MAE5D;MACA,IAAI,CAACZ,SAAS,EAAE;IACpB,CAAC,EACDa,KAAK,IAAG;MACJN,OAAO,CAACM,KAAK,CAAC,6DAA6D,EAAEA,KAAK,CAAC;MACnFC,KAAK,CAAC,2CAA2C,CAAC;IACtD,CAAC,CACF;EACH;EAEApD,cAAcA,CAAC2B,KAAS;IACtBkB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAEjC;EAEA7E,UAAUA,CAAA;IACR4E,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAEvCO,CAAC,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC;EACnC;EAEAC,YAAYA,CAAA;IAEV,IAAI,CAAC9B,aAAa,GAAG,CAAC,IAAI,CAACiB,aAAa,CAACc,QAAQ,CAAC,IAAI,CAACC,YAAY,CAAC;IACpEZ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACrB,aAAa,CAAC;EACjC;EAEAiC,UAAUA,CAAA;IACR,IAAI,IAAI,CAACC,cAAc,IAAI,CAAC,IAAI,CAACnD,aAAa,CAACgD,QAAQ,CAAC,IAAI,CAACG,cAAc,CAAC,EAAE;MAC5E,IAAI,CAACnD,aAAa,CAACwC,IAAI,CAAC,IAAI,CAACW,cAAc,CAAC;MAC5C,IAAI,CAACA,cAAc,GAAG,EAAE;;EAE5B;EAEAC,SAASA,CAAA;IACP;IACD;IAEC,IAAI,CAACC,aAAa,EAAE;IAEpB;IAEA,IAAI,IAAI,CAACpC,aAAa,KAAK,IAAI,EAAC;MAC9B,IAAI,CAACE,KAAK,CAACmC,OAAO,GAAG,IAAI,CAACC,UAAU;MACpC,IAAI,CAACpC,KAAK,CAAC1B,SAAS,GAAG,IAAI,CAACwD,YAAY;MACxC,IAAI,CAAC9B,KAAK,CAACqC,SAAS,GAAG,IAAI,CAAC/B,YAAY,CAACc,QAAQ;MACjD,IAAI,CAACpB,KAAK,CAACsC,WAAW,GAAG,CAAC,IAAI,CAAChC,YAAY,CAACc,QAAQ,CAAC;MACrD,IAAI,CAACpB,KAAK,CAACV,YAAY,GAAG,EAAE;MAC5B,IAAI,CAACU,KAAK,CAACuC,OAAO,GAAG,EAAE;MACvB,IAAI,CAACvC,KAAK,CAACwC,QAAQ,GAAG,IAAI,CAAC3D,aAAa;MACxC,IAAI,CAACmB,KAAK,CAACyC,KAAK,GAAG,IAAI;MAEvB;MAEA,IAAI,CAAC7C,IAAI,CAAC0B,IAAI,CAAC7B,WAAW,GAAC,gBAAgB,EAAE,IAAI,CAACO,KAAK,CAAC,CAACa,SAAS,CAChEU,QAAQ,IAAG;QACPL,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEI,QAAQ,CAAC;QAE5D;QACA,IAAI,CAACZ,SAAS,EAAE;MACpB,CAAC,EACDa,KAAK,IAAG;QACJN,OAAO,CAACM,KAAK,CAAC,6DAA6D,EAAEA,KAAK,CAAC;QACnFC,KAAK,CAAC,2CAA2C,CAAC;MACtD,CAAC,CACF;MACD,IAAI,CAACiB,UAAU,CAAC,UAAU,CAAC;KAC5B,MAAI;MACHjB,KAAK,CAAC,sBAAsB,CAAC;;EAEjC;EAEAiB,UAAUA,CAACC,SAA6B;IAEtC,IAAGA,SAAS,IAAI,UAAU,EAAC;MAEzB,IAAI,CAAC3C,KAAK,GAAG;QACXmC,OAAO,EAAE,CAAC;QACV7D,SAAS,EAAE,EAAE;QACb+D,SAAS,EAAE,IAAI,CAAC/B,YAAY,CAACc,QAAQ;QACrCkB,WAAW,EAAE,EAAE;QACfhD,YAAY,EAAE,EAAE;QAChBiD,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;OACV;MAED,IAAI,CAACX,YAAY,GAAC,EAAE;MAEpB,IAAI,CAACjD,aAAa,GAAC,EAAE;MAErB;MAGE6C,CAAC,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC;;IAGnC,IAAGgB,SAAS,IAAI,iBAAiB,EAAC;MAChCjB,CAAC,CAAC,kBAAkB,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC;;EAGzC;EAEEjB,QAAQA,CAAA;IACN,IAAI,CAACd,IAAI,CAAC0B,IAAI,CAAC7B,WAAW,GAAG,YAAY,EAAEF,WAAW,CAAC,CACtDsB,SAAS,CACL+B,IAAS,IAAI;MACV,IAAIA,IAAI,EAAE;QACR,IAAI,CAACC,KAAK,GAAGD,IAAI;QACjB;OACD,MAAM;QACHnB,KAAK,CAAC,aAAa,CAAC;;IAE5B,CAAC,EACDD,KAAK,IAAG;MAAEN,OAAO,CAACM,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAAC,CAAC,CAC1D;EACH;EAGAb,SAASA,CAAA;IACP,IAAI,CAACf,IAAI,CAAC0B,IAAI,CAAC7B,WAAW,GAAG,aAAa,EAAEF,WAAW,CAAC,CACvDsB,SAAS,CACL+B,IAAS,IAAI;MACV,IAAIA,IAAI,EAAE;QACR,IAAI,CAACE,MAAM,GAAGF,IAAI;QAClB;QACA;QAEA;OACD,MAAM;QACHnB,KAAK,CAAC,aAAa,CAAC;;IAE5B,CAAC,EACDD,KAAK,IAAG;MAAEN,OAAO,CAACM,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAAC,CAAC,CAC1D;EACH;EAEA;EAEA;EAEAU,aAAaA,CAAA;IACX,IAAI,IAAI,CAACY,MAAM,IAAI,IAAI,CAACA,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;MACzC,IAAI,CAACX,UAAU,GAAG,IAAI,CAACU,MAAM,CAAC,IAAI,CAACA,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,CAACZ,OAAO,GAAG,CAAC;KACpE,MAAM;MACH,IAAI,CAACC,UAAU,GAAG,CAAC;;EAEvB;EAEApB,WAAWA,CAAChB,KAAS;IACf;IAEA,IAAI,CAACgD,kBAAkB,GAAG,IAAI,CAACF,MAAM,CAACG,MAAM,CAAEjD,KAAwC,IAAKA,KAAK,CAACV,YAAY,IAAIU,KAAK,CAACV,YAAY,CAACyD,MAAM,GAAG,CAAC,CAAC;IAE/I7B,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC6B,kBAAkB,CAACD,MAAM,CAAC;EACjD;EAIA/F,YAAYA,CAAA;IACV,IAAI,CAAC2D,SAAS,EAAE,CAAC,CAAE;IACnB,IAAI,CAACK,WAAW,EAAE;IAElBU,CAAC,CAAC,kBAAkB,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC;IAEnC;IACA;IACA;IACA;IAEA,IAAG,IAAI,CAACqB,kBAAkB,CAACD,MAAM,KAAK,CAAC,EAAC;MACtC7B,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3B;;EAIN;;EAEAhC,cAAcA,CAACa,KAAU,EAAEkD,WAAmB;IAC1C;IACA;IAEA,IAAIlD,KAAK,CAACV,YAAY,CAACuC,QAAQ,CAACqB,WAAW,CAAC,EAAE;MAC5ClD,KAAK,CAACuC,OAAO,CAAClB,IAAI,CAAC6B,WAAW,CAAC;MAC/BlD,KAAK,CAACV,YAAY,CAAC6D,MAAM,CAACnD,KAAK,CAACV,YAAY,CAAC8D,OAAO,CAACF,WAAW,CAAC,EAAE,CAAC,CAAC;;IAMzE,IAAI,CAACtD,IAAI,CAAC0B,IAAI,CAAC7B,WAAW,GAAC,gBAAgB,EAAEO,KAAK,CAAC,CAACa,SAAS,CAC3DU,QAAQ,IAAG;MACPL,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEI,QAAQ,CAAC;MAE5D;MACA,IAAI,CAACZ,SAAS,EAAE;IACpB,CAAC,EACDa,KAAK,IAAG;MACJN,OAAO,CAACM,KAAK,CAAC,6DAA6D,EAAEA,KAAK,CAAC;MACnFC,KAAK,CAAC,2CAA2C,CAAC;IACtD,CAAC,CACF;IAED;EACF;;;AAnSa/B,eAAe,C;mBAAfA,eAAe,EAAA7D,EAAA,CAAAwH,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAA1H,EAAA,CAAAwH,iBAAA,CAAAxH,EAAA,CAAA2H,iBAAA;AAAA;AAAf9D,eAAe,C;QAAfA,eAAe;EAAA+D,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCnB5BlI,EAAA,CAAAC,cAAA,aAA4B;MAIpBD,EAAA,CAAAoB,UAAA,IAAAgH,iCAAA,oBAKS;MACTpI,EAAA,CAAAoB,UAAA,IAAAiH,iCAAA,oBAGS;MAEbrI,EAAA,CAAAW,YAAA,EAAM;MAENX,EAAA,CAAAC,cAAA,aAAwC;MACpCD,EAAA,CAAAoB,UAAA,IAAAkH,8BAAA,iBAUM;MACVtI,EAAA,CAAAW,YAAA,EAAM;MAKVX,EAAA,CAAAC,cAAA,aAA4G;MAIvDD,EAAA,CAAAU,MAAA,iBAAS;MAAAV,EAAA,CAAAW,YAAA,EAAK;MACzDX,EAAA,CAAAC,cAAA,kBAA6G;MAArGD,EAAA,CAAAE,UAAA,mBAAAqI,kDAAA;QAAA,OAASJ,GAAA,CAAAtB,UAAA,CAAW,UAAU,CAAC;MAAA,EAAC;MACtC7G,EAAA,CAAAC,cAAA,gBAAyB;MAAAD,EAAA,CAAAU,MAAA,cAAO;MAAAV,EAAA,CAAAW,YAAA,EAAO;MAI3CX,EAAA,CAAAC,cAAA,eAAwB;MAEGD,EAAA,CAAAU,MAAA,mBAAW;MAAAV,EAAA,CAAAW,YAAA,EAAQ;MAC1CX,EAAA,CAAAC,cAAA,iBAGoD;MAHGD,EAAA,CAAAE,UAAA,mBAAAsI,iDAAA;QAAA,OAASL,GAAA,CAAApC,YAAA,EAAc;MAAA,EAAC,2BAAA0C,yDAAAhH,MAAA;QAAA,OAAA0G,GAAA,CAAAlC,YAAA,GAAAxE,MAAA;MAAA;MAA/EzB,EAAA,CAAAW,YAAA,EAGoD;MAGtDX,EAAA,CAAAoB,UAAA,KAAAsH,+BAAA,kBAEI;MAEJ1I,EAAA,CAAAC,cAAA,eAAwB;MACGD,EAAA,CAAAU,MAAA,qBAAa;MAAAV,EAAA,CAAAW,YAAA,EAAQ;MAC9CX,EAAA,CAAAC,cAAA,iBAAsF;MAA7BD,EAAA,CAAAE,UAAA,2BAAAyI,yDAAAlH,MAAA;QAAA,OAAA0G,GAAA,CAAAhC,cAAA,GAAA1E,MAAA;MAAA,EAA4B;MAArFzB,EAAA,CAAAW,YAAA,EAAsF;MACtFX,EAAA,CAAAC,cAAA,kBAA0E;MAAvBD,EAAA,CAAAE,UAAA,mBAAA0I,kDAAA;QAAA,OAAST,GAAA,CAAAjC,UAAA,EAAY;MAAA,EAAC;MAAClG,EAAA,CAAAU,MAAA,mBAAW;MAAAV,EAAA,CAAAW,YAAA,EAAS;MAGhGX,EAAA,CAAAoB,UAAA,KAAAyH,8BAAA,iBAEK;MACP7I,EAAA,CAAAW,YAAA,EAAM;MACNX,EAAA,CAAAC,cAAA,eAA0B;MACsBD,EAAA,CAAAE,UAAA,mBAAA4I,kDAAA;QAAA,OAASX,GAAA,CAAA/B,SAAA,EAAW;MAAA,EAAC;MAACpG,EAAA,CAAAU,MAAA,kBAAU;MAAAV,EAAA,CAAAW,YAAA,EAAS;MAO/FX,EAAA,CAAAC,cAAA,eAA8G;MAI9CD,EAAA,CAAAU,MAAA,sBAAc;MAAAV,EAAA,CAAAW,YAAA,EAAK;MACrEX,EAAA,CAAAC,cAAA,kBAAoH;MAA5GD,EAAA,CAAAE,UAAA,mBAAA6I,kDAAA;QAAA,OAASZ,GAAA,CAAAtB,UAAA,CAAW,iBAAiB,CAAC;MAAA,EAAC;MAC3C7G,EAAA,CAAAC,cAAA,gBAAyB;MAAAD,EAAA,CAAAU,MAAA,cAAO;MAAAV,EAAA,CAAAW,YAAA,EAAO;MAI/CX,EAAA,CAAAC,cAAA,eAAwB;MAGhBD,EAAA,CAAAoB,UAAA,KAAA4H,8BAAA,iBAUK;MACThJ,EAAA,CAAAW,YAAA,EAAK;;;MA9FRX,EAAA,CAAAY,SAAA,GAAwB;MAAxBZ,EAAA,CAAAsB,UAAA,UAAA6G,GAAA,CAAAxF,MAAA,IAAAwF,GAAA,CAAAvF,OAAA,CAAwB;MAKpB5C,EAAA,CAAAY,SAAA,GAAwB;MAAxBZ,EAAA,CAAAsB,UAAA,UAAA6G,GAAA,CAAAxF,MAAA,IAAAwF,GAAA,CAAAvF,OAAA,CAAwB;MAQiB5C,EAAA,CAAAY,SAAA,GAAS;MAATZ,EAAA,CAAAsB,UAAA,YAAA6G,GAAA,CAAAlB,MAAA,CAAS;MA6BwBjH,EAAA,CAAAY,SAAA,IAA0B;MAA1BZ,EAAA,CAAAsB,UAAA,YAAA6G,GAAA,CAAAlC,YAAA,CAA0B,YAAAjG,EAAA,CAAAiJ,eAAA,IAAAC,GAAA,EAAAf,GAAA,CAAAlC,YAAA,IAAAkC,GAAA,CAAAlE,aAAA,EAAAkE,GAAA,CAAAlC,YAAA,KAAAkC,GAAA,CAAAlE,aAAA;MAMrGjE,EAAA,CAAAY,SAAA,GAAoB;MAApBZ,EAAA,CAAAsB,UAAA,UAAA6G,GAAA,CAAAlE,aAAA,CAAoB;MAMiCjE,EAAA,CAAAY,SAAA,GAA4B;MAA5BZ,EAAA,CAAAsB,UAAA,YAAA6G,GAAA,CAAAhC,cAAA,CAA4B;MAIlFnG,EAAA,CAAAY,SAAA,GAA2C;MAA3CZ,EAAA,CAAAsB,UAAA,SAAA6G,GAAA,CAAAnF,aAAA,IAAAmF,GAAA,CAAAnF,aAAA,CAAAkE,MAAA,CAA2C;MAyBQlH,EAAA,CAAAY,SAAA,IAAqB;MAArBZ,EAAA,CAAAsB,UAAA,YAAA6G,GAAA,CAAAhB,kBAAA,CAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}