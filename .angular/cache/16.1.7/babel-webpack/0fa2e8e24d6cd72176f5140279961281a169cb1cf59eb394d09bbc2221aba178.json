{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormControl } from '@angular/forms';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport let AccountComponent = class AccountComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.isUser = true;\n    this.isAdmin = true;\n    this.isSuperAdmin = true;\n    this.username = sessionStorage.getItem('username') ?? '';\n    this.birthdate = sessionStorage.getItem('userbirthdate') ?? '';\n    this.age = Number(sessionStorage.getItem('userage') ?? '0');\n  }\n  ngOnInit() {\n    this.getUsers();\n    this.getGroups();\n    this.searchForm = new FormGroup({\n      searchTerm: new FormControl('')\n    });\n    this.searchForm.get('searchTerm').valueChanges.subscribe(term => {\n      this.searchfilterGroups(term);\n    });\n    //----------------------------------------------------------------\n    //Actual Code\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n      //.log(this.loggedInUser)\n    }\n    //----------------------------------------------------------------\n    if (this.loggedInUser.role === 1) {\n      this.isUser = true;\n      this.isAdmin = false;\n      this.isSuperAdmin = false;\n    } else if (this.loggedInUser.role === 2) {\n      this.isUser = false;\n      this.isAdmin = true;\n      this.isSuperAdmin = false;\n    } else if (this.loggedInUser.role === 3) {\n      this.isUser = false;\n      this.isAdmin = false;\n      this.isSuperAdmin = true;\n    }\n  }\n  //----------------------------------------------------------------\n  searchfilterGroups(term) {\n    // Logic to filter groups based on the search term\n    // For example:\n    if (this.isUser || this.isAdmin) {\n      this.currentUserGroups = this.currentUserGroups.filter(group => group.groupName.includes(term));\n    } else if (this.isSuperAdmin) {\n      this.allGroups = this.allGroups.filter(group => group.groupName.includes(term));\n    }\n  }\n  getGroups() {\n    this.http.get(BACKEND_URL + \"/all-groups\", httpOptions).subscribe(data => {\n      if (data) {\n        this.allGroups = data;\n        this.allGroups = data.filter(group => group.valid === true);\n        this.filterGroups(this.allGroups);\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  getUsers() {\n    this.http.get(BACKEND_URL + \"/all-users\", httpOptions).subscribe(data => {\n      if (data) {\n        this.users = data;\n        this.filterUser(this.users);\n        //console.log(this.users)\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  filterGroups(group) {\n    console.log(group);\n    console.log(this.loggedInUser.username);\n    this.currentUserGroups = group.filter(g => g.members.includes(this.loggedInUser.username));\n  }\n  filterUser(users) {\n    const matchedUser = users.find(u => u.username === this.loggedInUser.username);\n    if (matchedUser) {\n      this.currentUser = matchedUser;\n      this.profilePicPath = BACKEND_URL + \"/\" + this.currentUser.profilePic;\n      console.log(this.profilePicPath);\n      console.log('Match found and assigned to this.currentUser!');\n    } else {\n      console.log('No match found.');\n    }\n  }\n  logout() {\n    // Clear session storage\n    sessionStorage.clear();\n    // Redirect to login page\n    this.router.navigateByUrl('/login');\n  }\n  openUsers() {\n    // Redirect to users page\n    this.router.navigateByUrl('/users');\n  }\n  openGroups() {\n    // Redirect to groups page\n    this.router.navigateByUrl('/groups');\n  }\n  onGroupCardClick(group) {\n    this.selectedGroup = group;\n    //console.log(\"card clicked\")\n    this.router.navigate(['/channels'], {\n      queryParams: {\n        yourKey: JSON.stringify(group)\n      }\n    });\n  }\n};\nAccountComponent = __decorate([Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})], AccountComponent);","map":{"version":3,"names":["Component","HttpHeaders","FormGroup","FormControl","httpOptions","headers","BACKEND_URL","AccountComponent","constructor","http","router","isUser","isAdmin","isSuperAdmin","username","sessionStorage","getItem","birthdate","age","Number","ngOnInit","getUsers","getGroups","searchForm","searchTerm","get","valueChanges","subscribe","term","searchfilterGroups","storedUser","window","loggedInUser","JSON","parse","role","currentUserGroups","filter","group","groupName","includes","allGroups","data","valid","filterGroups","alert","error","console","users","filterUser","log","g","members","matchedUser","find","u","currentUser","profilePicPath","profilePic","logout","clear","navigateByUrl","openUsers","openGroups","onGroupCardClick","selectedGroup","navigate","queryParams","yourKey","stringify","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/account/account.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { Group } from 'server/routes/groupModel'\nimport { FormGroup, FormControl } from '@angular/forms';\n\n\ndeclare var $: any;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\n\nexport class AccountComponent implements OnInit {\n\n  searchForm: FormGroup | any;\n  \n  username: string;\n  birthdate: string;\n  age: number;\n  allGroups: any;\n  loggedInUser: any;\n  users: any;\n  currentUser: any; \n  currentUserGroups: any;\n  selectedGroup: any;\n\n  isUser: boolean = true;\n  isAdmin: boolean = true;\n  isSuperAdmin: boolean = true;\n  profilePicPath: any;\n\n\n  constructor(private http: HttpClient, private router: Router) { \n    this.username = sessionStorage.getItem('username') ?? '';\n    this.birthdate = sessionStorage.getItem('userbirthdate') ?? '';\n    this.age = Number(sessionStorage.getItem('userage') ?? '0');\n}\n\nngOnInit(): void {\n  this.getUsers()\n  this.getGroups()\n\n  this.searchForm = new FormGroup({\n    searchTerm: new FormControl(''),\n  });\n\n  this.searchForm.get('searchTerm').valueChanges.subscribe((term: any) => {\n    this.searchfilterGroups(term);\n  });\n\n\n\n\n  \n//----------------------------------------------------------------\n//Actual Code\n  const storedUser = window.sessionStorage.getItem('current.user');\n  if (storedUser) {\n\n    this.loggedInUser = JSON.parse(storedUser);\n    //.log(this.loggedInUser)\n  }\n//----------------------------------------------------------------\n\n  if (this.loggedInUser.role === 1){\n    this.isUser = true\n    this.isAdmin = false\n    this.isSuperAdmin = false\n  }else if (this.loggedInUser.role === 2){\n    this.isUser = false\n    this.isAdmin = true\n    this.isSuperAdmin = false\n  }else if (this.loggedInUser.role === 3){\n    this.isUser = false\n    this.isAdmin = false\n    this.isSuperAdmin = true\n  }\n}\n//----------------------------------------------------------------\n\nsearchfilterGroups(term: string) {\n  // Logic to filter groups based on the search term\n  // For example:\n  if (this.isUser || this.isAdmin) {\n    this.currentUserGroups = this.currentUserGroups.filter((group: { groupName: string | string[]; }) => group.groupName.includes(term));\n  } else if (this.isSuperAdmin) {\n    this.allGroups = this.allGroups.filter((group: { groupName: string | string[]; }) => group.groupName.includes(term));\n  }\n}\n\ngetGroups(){\n  this.http.get(BACKEND_URL + \"/all-groups\", httpOptions)\n  .subscribe(\n      (data: any) => {\n          if (data) {\n            this.allGroups = data\n            this.allGroups = data.filter((group: { valid: boolean; }) => group.valid === true);\n            this.filterGroups(this.allGroups)\n          } else {\n              alert(\"no Data Soz\");\n          }\n      },\n      error => {console.error('There was an error:', error);}\n  );\n}\n\ngetUsers(){\n  this.http.get(BACKEND_URL + \"/all-users\", httpOptions)\n  .subscribe(\n      (data: any) => {\n          if (data) {\n            this.users = data\n            this.filterUser(this.users)\n            //console.log(this.users)\n          } else {\n              alert(\"no Data Soz\");\n          }\n      },\n      error => {console.error('There was an error:', error);}\n  );\n}\n\nfilterGroups(group: any){\n  console.log(group)\n  console.log(this.loggedInUser.username)\n  this.currentUserGroups = group.filter((g: { members: string | any[]; }) => g.members.includes(this.loggedInUser.username));\n}\n\nfilterUser(users: any[]) {\n  const matchedUser = users.find(u => u.username === this.loggedInUser.username);\n\n  if (matchedUser) {\n      this.currentUser = matchedUser;\n\n      this.profilePicPath=BACKEND_URL + \"/\" + this.currentUser.profilePic\n\n      console.log(this.profilePicPath)\n\n      console.log('Match found and assigned to this.currentUser!');\n  } else {\n      console.log('No match found.');\n  }\n}\n\n\n  logout() {\n    // Clear session storage\n    sessionStorage.clear();\n  \n    // Redirect to login page\n    this.router.navigateByUrl('/login');\n  }\n\n  openUsers() {\n    // Redirect to users page\n    this.router.navigateByUrl('/users');\n  }\n  openGroups() {\n  \n    // Redirect to groups page\n    this.router.navigateByUrl('/groups');\n  }\n\n  onGroupCardClick(group:any ){\n    this.selectedGroup = group;\n    //console.log(\"card clicked\")\n    this.router.navigate(['/channels'], { queryParams: { yourKey: JSON.stringify(group) }})\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}