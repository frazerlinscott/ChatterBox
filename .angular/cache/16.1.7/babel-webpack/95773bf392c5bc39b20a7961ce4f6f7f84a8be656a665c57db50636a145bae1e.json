{"ast":null,"code":"//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpHeaders } from '@angular/common/http';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport class AccountComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.username = sessionStorage.getItem('username') ?? '';\n    this.birthdate = sessionStorage.getItem('userbirthdate') ?? '';\n    this.age = Number(sessionStorage.getItem('userage') ?? '0');\n  }\n  getGroups() {\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions).subscribe(data => {\n      if (data) {\n        this.allGroups = data;\n        //this.allGroups = data\n        //console.log(this.groups)\n        //console.log(typeof(this.groups))\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  logout() {\n    // Clear session storage\n    sessionStorage.clear();\n    // Redirect to login page\n    this.router.navigateByUrl('/login');\n  }\n  openUsers() {\n    // Redirect to users page\n    this.router.navigateByUrl('/users');\n  }\n  openGroups() {\n    // Redirect to groups page\n    this.router.navigateByUrl('/groups');\n  }\n}","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","BACKEND_URL","AccountComponent","constructor","http","router","username","sessionStorage","getItem","birthdate","age","Number","getGroups","post","subscribe","data","allGroups","alert","error","console","logout","clear","navigateByUrl","openUsers","openGroups"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/account/account.component.ts"],"sourcesContent":["\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n//import { UserDataService } from 'src/app/service/user-data.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Group } from 'server/routes/groupModel';\nimport { ChangeDetectorRef } from '@angular/core';\n\ndeclare var $: any;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\nexport class AccountComponent {\n\n  username: string;\n  birthdate: string;\n  age: number;\n\n  allGroups: any;\n\n  constructor(private http: HttpClient, private router: Router) { \n    this.username = sessionStorage.getItem('username') ?? '';\n    this.birthdate = sessionStorage.getItem('userbirthdate') ?? '';\n    this.age = Number(sessionStorage.getItem('userage') ?? '0');\n}\n\n\n\ngetGroups(){\n  this.http.post(BACKEND_URL + \"/all-groups\", httpOptions)\n  .subscribe(\n      (data: any) => {\n          if (data) {\n            this.allGroups = data\n            //this.allGroups = data\n            //console.log(this.groups)\n\n            //console.log(typeof(this.groups))\n          } else {\n              alert(\"no Data Soz\");\n          }\n      },\n      error => {console.error('There was an error:', error);}\n  );\n}\n\n\n  logout() {\n    // Clear session storage\n    sessionStorage.clear();\n  \n    // Redirect to login page\n    this.router.navigateByUrl('/login');\n  }\n\n  openUsers() {\n    // Redirect to users page\n    this.router.navigateByUrl('/users');\n  }\n  openGroups() {\n  \n    // Redirect to groups page\n    this.router.navigateByUrl('/groups');\n  }\n}\n"],"mappings":"AAGA;AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAM9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAED,MAAMG,WAAW,GAAG,uBAAuB;AAE3C,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAClD,IAAI,CAACC,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;IACxD,IAAI,CAACC,SAAS,GAAGF,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE;IAC9D,IAAI,CAACE,GAAG,GAAGC,MAAM,CAACJ,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC;EAC/D;EAIAI,SAASA,CAAA;IACP,IAAI,CAACR,IAAI,CAACS,IAAI,CAACZ,WAAW,GAAG,aAAa,EAAEF,WAAW,CAAC,CACvDe,SAAS,CACLC,IAAS,IAAI;MACV,IAAIA,IAAI,EAAE;QACR,IAAI,CAACC,SAAS,GAAGD,IAAI;QACrB;QACA;QAEA;OACD,MAAM;QACHE,KAAK,CAAC,aAAa,CAAC;;IAE5B,CAAC,EACDC,KAAK,IAAG;MAAEC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAAC,CAAC,CAC1D;EACH;EAGEE,MAAMA,CAAA;IACJ;IACAb,cAAc,CAACc,KAAK,EAAE;IAEtB;IACA,IAAI,CAAChB,MAAM,CAACiB,aAAa,CAAC,QAAQ,CAAC;EACrC;EAEAC,SAASA,CAAA;IACP;IACA,IAAI,CAAClB,MAAM,CAACiB,aAAa,CAAC,QAAQ,CAAC;EACrC;EACAE,UAAUA,CAAA;IAER;IACA,IAAI,CAACnB,MAAM,CAACiB,aAAa,CAAC,SAAS,CAAC;EACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}