{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ChannelsComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.addChannel(\"button\"));\n    });\n    i0.ɵɵtext(1, \"Add Channels\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChannelsComponent_div_10_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_10_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const channel_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.membersChannel(channel_r6));\n    });\n    i0.ɵɵtext(1, \"Members\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChannelsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 27)(2, \"div\", 28)(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtemplate(6, ChannelsComponent_div_10_button_6_Template, 2, 0, \"button\", 29);\n    i0.ɵɵelementStart(7, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_10_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const channel_r6 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.removeUserFromChannel(channel_r6));\n    });\n    i0.ɵɵtext(8, \"Leave Channel\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const channel_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(channel_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isAdmin);\n  }\n}\nfunction ChannelsComponent_div_15_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_15_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const channel_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.membersChannel(channel_r13));\n    });\n    i0.ɵɵtext(1, \"Members\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChannelsComponent_div_15_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_15_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const channel_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.deleteChannel(channel_r13));\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChannelsComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"div\", 27)(2, \"div\", 28)(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function ChannelsComponent_div_15_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const channel_r13 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.addUserToChannel(channel_r13));\n    });\n    i0.ɵɵtext(7, \"Join Channel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, ChannelsComponent_div_15_button_8_Template, 2, 0, \"button\", 29);\n    i0.ɵɵtemplate(9, ChannelsComponent_div_15_button_9_Template, 2, 0, \"button\", 34);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const channel_r13 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(channel_r13);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAdmin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAdmin);\n  }\n}\nfunction ChannelsComponent_li_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 37);\n    i0.ɵɵtext(3, \"Add User\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const username_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", username_r24, \" \");\n  }\n}\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport class ChannelsComponent {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n    this.isAdmin = false;\n  }\n  ngOnInit() {\n    const storedUser = window.sessionStorage.getItem('current.user');\n    if (storedUser) {\n      this.loggedInUser = JSON.parse(storedUser);\n    }\n    if (this.loggedInUser.role === 3) {\n      this.isAdmin = true;\n      console.log(this.isAdmin);\n    }\n    console.log(this.loggedInUser.role);\n    this.route.queryParams.subscribe(params => {\n      let currentGroupString = params['yourKey'];\n      // Check if the data is stringified object\n      try {\n        this.passedGroupObject = JSON.parse(currentGroupString);\n        console.log(this.passedGroupObject);\n      } catch (e) {\n        console.error('Error parsing the object', e);\n      }\n      this.getGroups();\n      this.getUsers();\n    });\n  }\n  // getchannelsKeys() {\n  //   this.currentChannelskeys = Object.keys(this.currentGroupObject.channels);\n  // }\n  addUserToChannel(targetChannel) {\n    this.getGroups();\n    console.log(targetChannel);\n    console.log(this.loggedInUser.username);\n    // Loop over each channel in this.currentGroup.channels\n    for (let channel in this.currentGroup.channels) {\n      // If the channel name matches the target and the user is not in the channel array\n      if (channel === targetChannel && !this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n        this.currentGroup.channels[channel].push(this.loggedInUser.username);\n        console.log(`Added ${this.loggedInUser.username} to ${channel}`);\n        break; // Exit the loop as we've found and processed the target channel\n      }\n    }\n\n    this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      //refesh User list \n      this.getGroups();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n  }\n  removeUserFromChannel(targetChannel) {\n    // Fetch the groups\n    this.getGroups();\n    console.log(targetChannel);\n    console.log(this.loggedInUser.username);\n    // Loop over each channel in this.currentGroup.channels\n    for (let channel in this.currentGroup.channels) {\n      // If the channel name matches the target and the user is in the channel array\n      if (channel === targetChannel && this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n        const userIndex = this.currentGroup.channels[channel].indexOf(this.loggedInUser.username);\n        if (userIndex > -1) {\n          this.currentGroup.channels[channel].splice(userIndex, 1); // Remove the user from the channel\n          console.log(`Removed ${this.loggedInUser.username} from ${channel}`);\n          break; // Exit the loop as we've found and processed the target channel\n        }\n      }\n    }\n    // Update the groups on the server\n    this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n      console.log('User details updated on the server.', response);\n      // Refresh the User list \n      this.getGroups();\n    }, error => {\n      console.error('There was an error updating the user details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n  }\n  addChannel(buttonType) {\n    if (buttonType == 'button') {\n      this.newChannelName = '';\n      $('#addChannelModal').modal('show');\n    } else {\n      if (this.newChannelName) {\n        this.currentGroup.channels[this.newChannelName] = [];\n      } else {\n        console.error('newChannelName is undefined!');\n      }\n      this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n        console.log(' details updated on the server.', response);\n        this.getGroups();\n      }, error => {\n        console.error('There was an error updating the  details on the server.', error);\n        alert('Error updating profile. Please try again.');\n      });\n      this.closeModal(\"\");\n    }\n  }\n  closeModal(modalType) {\n    $('#addChannelModal').modal('hide');\n    if (modalType === \"editUsers\") {\n      $('#editmemberUsers').modal('hide');\n    }\n  }\n  deleteChannel(targetChannel) {\n    console.log(targetChannel);\n    if (this.currentGroup.channels && this.currentGroup.channels.hasOwnProperty(targetChannel)) {\n      delete this.currentGroup.channels[targetChannel];\n    } else {\n      console.warn('Channel not found in current group.');\n    }\n    console.log(this.currentGroup);\n    this.http.post(BACKEND_URL + \"/update-groups\", this.currentGroup).subscribe(response => {\n      console.log(' details updated on the server.', response);\n      this.getGroups();\n    }, error => {\n      console.error('There was an error updating the  details on the server.', error);\n      alert('Error updating profile. Please try again.');\n    });\n  }\n  membersChannel(channel) {\n    $('#editmemberUsers').modal('show');\n    console.log(channel);\n    console.log(this.usernames);\n    console.log(this.currentGroup);\n    let membersOfCurrentChannel = this.currentGroup.channels[channel];\n    // Filtering this.usernames based on the list of members from the current channel\n    this.channelMembers = this.usernames.filter(username => membersOfCurrentChannel.includes(username));\n    console.log(this.channelMembers);\n  }\n  getUsers() {\n    this.http.post(BACKEND_URL + \"/all-users\", httpOptions).subscribe(data => {\n      if (data) {\n        this.users = data;\n        //console.log(this.users)\n        this.usernames = this.users.filter(u => u.valid).map(u => u.username);\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  getGroups() {\n    this.http.post(BACKEND_URL + \"/all-groups\", httpOptions).subscribe(data => {\n      if (data) {\n        this.groups = data;\n        const matchedGroup = this.groups.find(group => group.groupID === this.passedGroupObject.groupID);\n        if (matchedGroup) {\n          this.currentGroup = matchedGroup;\n          //console.log(\"Matched\")\n          if (this.currentGroup.groupAdmins.includes(this.loggedInUser.username)) {\n            this.isAdmin = true;\n          } else if (this.loggedInUser.role == 3) {\n            this.isAdmin = true;\n          } else {\n            this.isAdmin = false;\n          }\n          this.myChannels = [];\n          this.toJoinChannels = [];\n          for (let channel in this.currentGroup.channels) {\n            if (this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n              // If the loggedInUser is in the channel, add it to myChannels\n              this.myChannels.push(channel);\n            } else {\n              // Otherwise, add it to toJoinChannels\n              this.toJoinChannels.push(channel);\n            }\n          }\n          this.channelsUserCreated;\n          // this.myChannels = \n          // // = Object.keys(this.currentGroup.channels);\n          // this.toJoinChannels=\n          // this.currentGroup.channel\n        } else {\n          console.log(`No group found with groupID: ${this.passedGroupObject.groupID}`);\n        }\n      } else {\n        alert(\"no Data Soz\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n}\nChannelsComponent.ɵfac = function ChannelsComponent_Factory(t) {\n  return new (t || ChannelsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nChannelsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChannelsComponent,\n  selectors: [[\"app-channels\"]],\n  decls: 44,\n  vars: 6,\n  consts: [[1, \"container\", \"mt-4\", \"text-center\"], [1, \"mb-4\"], [\"class\", \"btn btn-success custom-btn position-relative\", 3, \"click\", 4, \"ngIf\"], [1, \"container\", \"mt-4\", \"mx-4\", \"my-4\", \"card\"], [1, \"my-4\"], [1, \"row\", \"mx-2\", \"my-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"container\", \"mt-5\", \"mx-4\", \"my-4\", \"card\"], [1, \"row\", \"mx-4\", \"my-4\"], [\"class\", \"col-12 mb-3\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"addChannelModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addGroupLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"addGroupLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\"], [\"for\", \"channelName\"], [\"type\", \"text\", \"id\", \"channelName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-2\", 3, \"click\"], [\"id\", \"editmemberUsers\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addGroupLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"id\", \"editUser\", 1, \"modal-title\"], [1, \"list-group\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", \"custom-btn\", \"position-relative\", 3, \"click\"], [1, \"card\"], [1, \"card-body\", \"align-items-center\"], [\"class\", \"btn btn-primary mr-2\", \"style\", \"margin-left: 10px;\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-primary\", \"mr-2\", 2, \"margin-left\", \"10px\", 3, \"click\"], [1, \"col-12\", \"mb-3\"], [1, \"btn\", \"btn-primary\", \"mr-2\", 3, \"click\"], [\"class\", \"btn btn-danger mr-2\", \"style\", \"margin-left: 10px;\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-danger\", \"mr-2\", 2, \"margin-left\", \"10px\", 3, \"click\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"btn-success\", \"btn-sm\", 2, \"width\", \"80px\", \"margin-left\", \"10px\"]],\n  template: function ChannelsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"div\", 1)(3, \"h3\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, ChannelsComponent_button_5_Template, 2, 0, \"button\", 2);\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"h2\", 4);\n      i0.ɵɵtext(8, \"My Channels\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 5);\n      i0.ɵɵtemplate(10, ChannelsComponent_div_10_Template, 9, 2, \"div\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"h2\", 4);\n      i0.ɵɵtext(13, \"Join Channels\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵtemplate(15, ChannelsComponent_div_15_Template, 10, 3, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"div\", 11)(18, \"div\", 12)(19, \"div\", 13)(20, \"h5\", 14);\n      i0.ɵɵtext(21, \"Add Channel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function ChannelsComponent_Template_button_click_22_listener() {\n        return ctx.closeModal(\"newGroup\");\n      });\n      i0.ɵɵelementStart(23, \"span\", 16);\n      i0.ɵɵtext(24, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 17)(26, \"div\", 18)(27, \"label\", 19);\n      i0.ɵɵtext(28, \"Channel Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"input\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function ChannelsComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.newChannelName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function ChannelsComponent_Template_button_click_30_listener() {\n        return ctx.addChannel(\"save\");\n      });\n      i0.ɵɵtext(31, \"Add Channel\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(32, \"div\", 22)(33, \"div\", 11)(34, \"div\", 12)(35, \"div\", 13)(36, \"h5\", 23);\n      i0.ɵɵtext(37, \"Edit Users\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function ChannelsComponent_Template_button_click_38_listener() {\n        return ctx.closeModal(\"editUsers\");\n      });\n      i0.ɵɵelementStart(39, \"span\", 16);\n      i0.ɵɵtext(40, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"div\", 17)(42, \"ul\", 24);\n      i0.ɵɵtemplate(43, ChannelsComponent_li_43_Template, 4, 1, \"li\", 25);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"\", ctx.loggedInUser.username, \" Channels for group: \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isAdmin);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.myChannels);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.toJoinChannels);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.newChannelName);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.channelMembers);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"body[_ngcontent-%COMP%] {\\n    font-family: 'Arial', sans-serif;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n    max-height: 80vh;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.card-body[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    transition: all 0.3s;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n}\\n\\n\\n.custom-modal-margin[_ngcontent-%COMP%] {\\n    margin-top: 20x;\\n    margin-right: 20px;\\n    margin-bottom: 50px;\\n    margin-left: 20px;\\n  }\\n\\n  body[_ngcontent-%COMP%] {\\n    background-color: #f5f5f5;  \\n\\n    padding-top: 5px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhbm5lbHMvY2hhbm5lbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLHdDQUF3QztBQUM1Qzs7QUFFQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLHdDQUF3QztBQUM1Qzs7O0FBR0E7SUFDSSxlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSx5QkFBeUIsR0FBRyw0RUFBNEU7SUFDeEcsZ0JBQWdCO0VBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XG4gICAgZm9udC1mYW1pbHk6ICdBcmlhbCcsIHNhbnMtc2VyaWY7XG59XG5cbi5jb250YWluZXIge1xuICAgIG1heC1oZWlnaHQ6IDgwdmg7XG59XG5cbi5jYXJkIHtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG4uY2FyZC1ib2R5IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5idXR0b24ge1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xufVxuXG5idXR0b246aG92ZXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuXG5cbi5jdXN0b20tbW9kYWwtbWFyZ2luIHtcbiAgICBtYXJnaW4tdG9wOiAyMHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIH1cblxuICBib2R5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1OyAgLyogVGhpcyBpcyBhIGxpZ2h0IGdyYXkgY29sb3IuIFJlcGxhY2Ugd2l0aCB5b3VyIGRlc2lyZWQgY29sb3Igb3IgZ3JhZGllbnQgKi9cbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","i0","ɵɵelementStart","ɵɵlistener","ChannelsComponent_button_5_Template_button_click_0_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","addChannel","ɵɵtext","ɵɵelementEnd","ChannelsComponent_div_10_button_6_Template_button_click_0_listener","_r10","channel_r6","$implicit","ctx_r8","membersChannel","ɵɵtemplate","ChannelsComponent_div_10_button_6_Template","ChannelsComponent_div_10_Template_button_click_7_listener","restoredCtx","_r12","ctx_r11","removeUserFromChannel","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","ctx_r1","isAdmin","ChannelsComponent_div_15_button_8_Template_button_click_0_listener","_r18","channel_r13","ctx_r16","ChannelsComponent_div_15_button_9_Template_button_click_0_listener","_r21","ctx_r19","deleteChannel","ChannelsComponent_div_15_Template_button_click_6_listener","_r23","ctx_r22","addUserToChannel","ChannelsComponent_div_15_button_8_Template","ChannelsComponent_div_15_button_9_Template","ctx_r2","ɵɵtextInterpolate1","username_r24","httpOptions","headers","BACKEND_URL","ChannelsComponent","constructor","http","route","ngOnInit","storedUser","window","sessionStorage","getItem","loggedInUser","JSON","parse","role","console","log","queryParams","subscribe","params","currentGroupString","passedGroupObject","e","error","getGroups","getUsers","targetChannel","username","channel","currentGroup","channels","includes","push","post","response","alert","userIndex","indexOf","splice","buttonType","newChannelName","$","modal","closeModal","modalType","hasOwnProperty","warn","usernames","membersOfCurrentChannel","channelMembers","filter","data","users","u","valid","map","groups","matchedGroup","find","group","groupID","groupAdmins","myChannels","toJoinChannels","channelsUserCreated","ɵɵdirectiveInject","i1","HttpClient","i2","ActivatedRoute","selectors","decls","vars","consts","template","ChannelsComponent_Template","rf","ctx","ChannelsComponent_button_5_Template","ChannelsComponent_div_10_Template","ChannelsComponent_div_15_Template","ChannelsComponent_Template_button_click_22_listener","ChannelsComponent_Template_input_ngModelChange_29_listener","$event","ChannelsComponent_Template_button_click_30_listener","ChannelsComponent_Template_button_click_38_listener","ChannelsComponent_li_43_Template"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/channels/channels.component.ts","/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/channels/channels.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-channels',\n  templateUrl: './channels.component.html',\n  styleUrls: ['./channels.component.css']\n})\nexport class ChannelsComponent implements OnInit {\n\n  passedGroupObject: any;\n\n  myChannels: any;\n  toJoinChannels: any;\n\n  currentGroup: any;\n  currentChannels: any;\n\n\n  joinChannelskeys: any;\n  myChannelskeys: any;\n\n  loggedInUser:any; \n  groups: any;\n\n  newChannelName: any;\n\n  channelsUserCreated:any; \n\n  isAdmin = false\n\n  channelMembers:any;\n  usernames:any;\n  users: any;\n\n  constructor(private http: HttpClient, private route: ActivatedRoute) { \n}\n\nngOnInit(): void {\n\n  const storedUser = window.sessionStorage.getItem('current.user');\n  if (storedUser) {\n\n    this.loggedInUser = JSON.parse(storedUser);\n  }\n\n  if (this.loggedInUser.role === 3){\n    this.isAdmin = true;\n    console.log(this.isAdmin)\n  }\n\n  console.log(this.loggedInUser.role)\n\n  this.route.queryParams.subscribe(params => {\n    let currentGroupString = params['yourKey'];\n    \n    // Check if the data is stringified object\n    try {\n        this.passedGroupObject = JSON.parse(currentGroupString);\n        console.log(this.passedGroupObject);\n    } catch (e) {\n        console.error('Error parsing the object', e);\n    }\n\n    this.getGroups()\n    this.getUsers()\n\n });\n}\n\n// getchannelsKeys() {\n//   this.currentChannelskeys = Object.keys(this.currentGroupObject.channels);\n// }\n\naddUserToChannel(targetChannel: any) {\n  this.getGroups();\n  console.log(targetChannel);\n  console.log(this.loggedInUser.username);\n\n  // Loop over each channel in this.currentGroup.channels\n  for (let channel in this.currentGroup.channels) {\n      // If the channel name matches the target and the user is not in the channel array\n      if (channel === targetChannel && !this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n          this.currentGroup.channels[channel].push(this.loggedInUser.username);\n          console.log(`Added ${this.loggedInUser.username} to ${channel}`);\n          break; // Exit the loop as we've found and processed the target channel\n      }\n  }\n  \n  this.http.post(BACKEND_URL+\"/update-groups\", this.currentGroup).subscribe(\n    response => {\n        console.log('User details updated on the server.', response);\n\n        //refesh User list \n        this.getGroups();\n    },\n    error => {\n        console.error('There was an error updating the user details on the server.', error);\n        alert('Error updating profile. Please try again.');\n    }\n  )}\n\n  removeUserFromChannel(targetChannel: any) {\n    // Fetch the groups\n    this.getGroups();\n    console.log(targetChannel);\n    console.log(this.loggedInUser.username);\n\n    // Loop over each channel in this.currentGroup.channels\n    for (let channel in this.currentGroup.channels) {\n        // If the channel name matches the target and the user is in the channel array\n        if (channel === targetChannel && this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n            const userIndex = this.currentGroup.channels[channel].indexOf(this.loggedInUser.username);\n            \n            if (userIndex > -1) {\n                this.currentGroup.channels[channel].splice(userIndex, 1); // Remove the user from the channel\n                console.log(`Removed ${this.loggedInUser.username} from ${channel}`);\n                break; // Exit the loop as we've found and processed the target channel\n            }\n        }\n    }\n  \n    // Update the groups on the server\n    this.http.post(BACKEND_URL+\"/update-groups\", this.currentGroup).subscribe(\n        response => {\n            console.log('User details updated on the server.', response);\n\n            // Refresh the User list \n            this.getGroups();\n        },\n        error => {\n            console.error('There was an error updating the user details on the server.', error);\n            alert('Error updating profile. Please try again.');\n        }\n    );\n}\n\naddChannel(buttonType: string | undefined) {\n  \n  if(buttonType == 'button'){\n    this.newChannelName='';\n    $('#addChannelModal').modal('show');\n  }else{\n    if (this.newChannelName) {\n      this.currentGroup.channels[this.newChannelName] = [];\n    } else {\n      console.error('newChannelName is undefined!');\n    }\n  \n    \n  \n  \n    this.http.post(BACKEND_URL+\"/update-groups\", this.currentGroup).subscribe(\n      response => {\n          console.log(' details updated on the server.', response);\n  \n          this.getGroups();\n          \n      },\n      error => {\n          console.error('There was an error updating the  details on the server.', error);\n          alert('Error updating profile. Please try again.');\n      }\n    )\n    this.closeModal(\"\");\n  }\n\n\n\n}\n\ncloseModal(modalType: string | undefined){\n    $('#addChannelModal').modal('hide');\n\n    if(modalType ===\"editUsers\"){\n      $('#editmemberUsers').modal('hide');\n    }\n}\n\ndeleteChannel(targetChannel: any) {\n  console.log(targetChannel);\n\n  if (this.currentGroup.channels && this.currentGroup.channels.hasOwnProperty(targetChannel)) {\n    delete this.currentGroup.channels[targetChannel];\n  } else {\n    console.warn('Channel not found in current group.');\n  }\n  console.log(this.currentGroup);\n\n  this.http.post(BACKEND_URL+\"/update-groups\", this.currentGroup).subscribe(\n    response => {\n        console.log(' details updated on the server.', response);\n\n        this.getGroups();\n        \n    },\n    error => {\n        console.error('There was an error updating the  details on the server.', error);\n        alert('Error updating profile. Please try again.');\n    }\n  )\n}\n\nmembersChannel(channel: any){\n  $('#editmemberUsers').modal('show');\n  console.log(channel) \n  console.log(this.usernames);\n  console.log(this.currentGroup)\n\n\n\n  let membersOfCurrentChannel = this.currentGroup.channels[channel];\n\n// Filtering this.usernames based on the list of members from the current channel\n    this.channelMembers = this.usernames.filter((username: any) => membersOfCurrentChannel.includes(username));\n\n    console.log(this.channelMembers);\n}\n\ngetUsers(){\n  this.http.post(BACKEND_URL + \"/all-users\", httpOptions)\n  .subscribe(\n      (data: any) => {\n          if (data) {\n            this.users = data\n            //console.log(this.users)\n            this.usernames = this.users.filter((u: { valid: any; }) => u.valid).map((u: { username: any; }) => u.username);\n\n          } else {\n              alert(\"no Data Soz\");\n          }\n      },\n      error => {console.error('There was an error:', error);}\n  );\n}\n\ngetGroups(){\n  this.http.post(BACKEND_URL + \"/all-groups\", httpOptions)\n  .subscribe(\n      (data: any) => {\n          if (data) {\n            this.groups = data\n            const matchedGroup = this.groups.find((group: { groupID: any; }) => group.groupID === this.passedGroupObject.groupID);\n            if (matchedGroup) {\n                this.currentGroup = matchedGroup;\n                //console.log(\"Matched\")\n                if (this.currentGroup.groupAdmins.includes(this.loggedInUser.username)) {\n                  this.isAdmin = true;\n                } else if (this.loggedInUser.role==3){\n                this.isAdmin = true;\n                }else{\n                  this.isAdmin = false;\n                }\n                \n\n\n\n                this.myChannels = [];\n                this.toJoinChannels = [];\n\n                for (let channel in this.currentGroup.channels) {\n                  if (this.currentGroup.channels[channel].includes(this.loggedInUser.username)) {\n                      // If the loggedInUser is in the channel, add it to myChannels\n                      this.myChannels.push(channel);\n                  } else {\n                      // Otherwise, add it to toJoinChannels\n                      this.toJoinChannels.push(channel);\n                  }\n              }\n\n              this.channelsUserCreated\n\n\n                // this.myChannels = \n\n                // // = Object.keys(this.currentGroup.channels);\n                // this.toJoinChannels=\n\n                // this.currentGroup.channel\n\n            } else {\n                console.log(`No group found with groupID: ${this.passedGroupObject.groupID}`);\n            }\n\n\n\n\n\n\n          } else {\n              alert(\"no Data Soz\");\n          }\n      },\n      error => {console.error('There was an error:', error);}\n  );\n}\n\n}\n","<body>\n\n\n<div class=\"container mt-4 text-center\">\n    <div class=\"mb-4\">\n        <!-- Display username at the top -->\n        <h3>{{loggedInUser.username}} Channels for group: </h3>\n</div>\n\n    <button *ngIf= \"isAdmin\" class=\"btn btn-success custom-btn position-relative\" (click)=\"addChannel('button')\">Add Channels</button>\n   \n\n <div class=\"container mt-4 mx-4 my-4 card\">\n\n<h2 class=\"my-4\">My Channels</h2>\n<!-- <button class=\"btn btn-secondary\" (click)=\"addChannel()\">Delete Channels</button> -->\n<div class=\"row  mx-2 my-4\">\n    <div *ngFor=\"let channel of myChannels\">\n        <div class=\"card\">\n            <div class=\"card-body align-items-center\">\n                <span>{{channel}}</span>\n                <div>\n                    <!-- <button class=\"btn btn-primary mr-2\" (click)=\"addUserToChannel(channel)\">Join Channel</button> -->\n                    <button  *ngIf= \"isAdmin\" class=\"btn btn-primary mr-2\" style=\"margin-left: 10px;\"(click)=\"membersChannel(channel)\">Members</button>\n                    <button class=\"btn btn-danger\" (click)=\"removeUserFromChannel(channel)\">Leave Channel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n\n\n<div class=\"container mt-5 mx-4 my-4 card \">\n    <h2 class=\"my-4\">Join Channels</h2>\n    <div class=\"row mx-4 my-4\">\n        <div *ngFor=\"let channel of toJoinChannels\" class=\"col-12 mb-3\">\n            <div class=\"card\">\n                <div class=\"card-body align-items-center\">\n                    <span>{{channel}}</span>\n                    <div>\n                        <button class=\"btn btn-primary mr-2\" (click)=\"addUserToChannel(channel)\">Join Channel</button>\n                        <button  *ngIf= \"isAdmin\" class=\"btn btn-primary mr-2\" style=\"margin-left: 10px;\"(click)=\"membersChannel(channel)\">Members</button>\n                        <button  *ngIf= \"isAdmin\" class=\"btn btn-danger mr-2\" style=\"margin-left: 10px;\"(click)=\"deleteChannel(channel)\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n\n    <div class=\"modal fade\" id=\"addChannelModal\" tabindex=\"-1\" aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"addGroupLabel\">Add Channel</h5>\n              <button (click)=\"closeModal('newGroup')\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span></button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"form-group\">\n                <label for=\"channelName\">Channel Name:</label>\n                <input type=\"text\" class=\"form-control\" id=\"channelName\" [(ngModel)]=\"newChannelName\">\n                <button type=\"button\" class=\"btn btn-primary mt-2\" (click)=\"addChannel('save')\">Add Channel</button>\n              </div>\n            </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div class=\"modal fade\" id=\"editmemberUsers\" tabindex=\"-1\" aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"editUser\">Edit Users</h5>\n                        <button (click)=\"closeModal('editUsers')\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n        \n        \n                    <div class=\"modal-body\">\n                        <ul class=\"list-group\">\n                            <!-- Iterate over each username in userNotInGroup -->\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let username of channelMembers\">\n                                {{ username }} <!-- Displaying username -->\n                                <button class=\"btn btn-success btn-sm\" style=\"width: 80px; margin-left: 10px;\" >Add User</button>\n                            </li>\n        \n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- *ngFor=\"let username of channelMembers\" -->"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}