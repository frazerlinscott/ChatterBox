{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst BACKEND_URL = \"http://localhost:3000\";\nexport let LoginComponent = class LoginComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.userpwd = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n  ngOnInit() {}\n  loginfunc() {\n    this.http.post(BACKEND_URL + \"/login\", this.userpwd, httpOptions).subscribe(data => {\n      if (data.ok && data.user) {\n        sessionStorage.setItem('current.user', JSON.stringify(data.user));\n        this.router.navigateByUrl('account');\n      } else {\n        alert(\"Sorry, username or password is incorrect\");\n      }\n    }, error => {\n      console.error('There was an error:', error);\n    });\n  }\n  creatfunc() {\n    this.router.navigateByUrl('create-user');\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","HttpHeaders","httpOptions","headers","BACKEND_URL","LoginComponent","constructor","router","http","userpwd","username","password","ngOnInit","loginfunc","post","subscribe","data","ok","user","sessionStorage","setItem","JSON","stringify","navigateByUrl","alert","error","console","creatfunc","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/frazerlinscott/Desktop/Software Frameworks/Assignments/Assignment1_SoftwareFrames_s2930588/src/app/login/login.component.ts"],"sourcesContent":["\n\nimport { Component, OnInit } from '@angular/core'; \nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst BACKEND_URL = \"http://localhost:3000\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  userpwd={ username: \"\", password: \"\" };\n\n  constructor(private router: Router, private http: HttpClient) { }\n\n  ngOnInit() {}\n\n  public loginfunc() {\n    this.http.post(BACKEND_URL + \"/login\", this.userpwd, httpOptions)\n    .subscribe(\n        (data: any) => {\n            if (data.ok && data.user) {\n\n                sessionStorage.setItem('current.user', JSON.stringify(data.user));\n                \n                this.router.navigateByUrl('account');\n            } else {\n                alert(\"Sorry, username or password is incorrect\");\n            }\n        },\n        error => {console.error('There was an error:', error);}\n    );\n  }\n\n  public creatfunc(){\n    this.router.navigateByUrl('create-user');\n  }\n}"],"mappings":";AAEA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAqBC,WAAW,QAAQ,sBAAsB;AAG9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAED,MAAMG,WAAW,GAAG,uBAAuB;AAOpC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,MAAc,EAAUC,IAAgB;IAAxC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAFhD,KAAAC,OAAO,GAAC;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;EAE0B;EAEhEC,QAAQA,CAAA,GAAI;EAELC,SAASA,CAAA;IACd,IAAI,CAACL,IAAI,CAACM,IAAI,CAACV,WAAW,GAAG,QAAQ,EAAE,IAAI,CAACK,OAAO,EAAEP,WAAW,CAAC,CAChEa,SAAS,CACLC,IAAS,IAAI;MACV,IAAIA,IAAI,CAACC,EAAE,IAAID,IAAI,CAACE,IAAI,EAAE;QAEtBC,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAACE,IAAI,CAAC,CAAC;QAEjE,IAAI,CAACX,MAAM,CAACgB,aAAa,CAAC,SAAS,CAAC;OACvC,MAAM;QACHC,KAAK,CAAC,0CAA0C,CAAC;;IAEzD,CAAC,EACDC,KAAK,IAAG;MAAEC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAAC,CAAC,CAC1D;EACH;EAEOE,SAASA,CAAA;IACd,IAAI,CAACpB,MAAM,CAACgB,aAAa,CAAC,aAAa,CAAC;EAC1C;CACD;AA5BYlB,cAAc,GAAAuB,UAAA,EAL1B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW1B,cAAc,CA4B1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}